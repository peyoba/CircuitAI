{
  "version": 3,
  "sources": ["../bundle-x5sFVe/checked-fetch.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../node_modules/hono/dist/utils/color.js", "../../../node_modules/hono/dist/middleware/logger/index.js", "../../../src/services/AIService.ts", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-x5sFVe/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-x5sFVe/middleware-loader.entry.ts"],
  "sourceRoot": "E:\\cursor\\Github\\CirtcuitAI\\workers\\.wrangler\\tmp\\dev-KjlsSc",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "// src/utils/color.ts\nfunction getColorEnabled() {\n  const { process, Deno } = globalThis;\n  const isNoColor = typeof Deno?.noColor === \"boolean\" ? Deno.noColor : process !== void 0 ? \"NO_COLOR\" in process?.env : false;\n  return !isNoColor;\n}\nasync function getColorEnabledAsync() {\n  const { navigator } = globalThis;\n  const cfWorkers = \"cloudflare:workers\";\n  const isNoColor = navigator !== void 0 && navigator.userAgent === \"Cloudflare-Workers\" ? await (async () => {\n    try {\n      return \"NO_COLOR\" in ((await import(cfWorkers)).env ?? {});\n    } catch {\n      return false;\n    }\n  })() : !getColorEnabled();\n  return !isNoColor;\n}\nexport {\n  getColorEnabled,\n  getColorEnabledAsync\n};\n", "// src/middleware/logger/index.ts\nimport { getColorEnabledAsync } from \"../../utils/color.js\";\nvar humanize = (times) => {\n  const [delimiter, separator] = [\",\", \".\"];\n  const orderTimes = times.map((v) => v.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1\" + delimiter));\n  return orderTimes.join(separator);\n};\nvar time = (start) => {\n  const delta = Date.now() - start;\n  return humanize([delta < 1e3 ? delta + \"ms\" : Math.round(delta / 1e3) + \"s\"]);\n};\nvar colorStatus = async (status) => {\n  const colorEnabled = await getColorEnabledAsync();\n  if (colorEnabled) {\n    switch (status / 100 | 0) {\n      case 5:\n        return `\\x1B[31m${status}\\x1B[0m`;\n      case 4:\n        return `\\x1B[33m${status}\\x1B[0m`;\n      case 3:\n        return `\\x1B[36m${status}\\x1B[0m`;\n      case 2:\n        return `\\x1B[32m${status}\\x1B[0m`;\n    }\n  }\n  return `${status}`;\n};\nasync function log(fn, prefix, method, path, status = 0, elapsed) {\n  const out = prefix === \"<--\" /* Incoming */ ? `${prefix} ${method} ${path}` : `${prefix} ${method} ${path} ${await colorStatus(status)} ${elapsed}`;\n  fn(out);\n}\nvar logger = (fn = console.log) => {\n  return async function logger2(c, next) {\n    const { method, url } = c.req;\n    const path = url.slice(url.indexOf(\"/\", 8));\n    await log(fn, \"<--\" /* Incoming */, method, path);\n    const start = Date.now();\n    await next();\n    await log(fn, \"-->\" /* Outgoing */, method, path, c.res.status, time(start));\n  };\n};\nexport {\n  logger\n};\n", "// \u7B80\u5316\u7248AI\u670D\u52A1\uFF0C\u9002\u914DCloudflare Workers\r\nexport class AIService {\r\n  // \uD83D\uDD25 \u4FEE\u590D\uFF1A\u4F7F\u7528\u66F4\u53EF\u9760\u7684\u5BF9\u8BDD\u5386\u53F2\u5B58\u50A8\u673A\u5236\r\n  private static conversations: Map<string, Array<{role: string, content: string}>> = new Map()\r\n  \r\n  // \uD83D\uDD25 \u6539\u8FDB\uFF1A\u786E\u4FDD\u5BF9\u8BDD\u5386\u53F2\u7684\u6301\u4E45\u6027\u548C\u4E00\u81F4\u6027\r\n  private async getConversationHistory(conversationId: string): Promise<Array<{role: string, content: string}>> {\r\n    let history = AIService.conversations.get(conversationId)\r\n    if (!history) {\r\n      history = []\r\n      AIService.conversations.set(conversationId, history)\r\n      console.log(`\u521B\u5EFA\u65B0\u5BF9\u8BDD\u5386\u53F2\uFF0CID: ${conversationId}`)\r\n    } else {\r\n      console.log(`\u83B7\u53D6\u73B0\u6709\u5BF9\u8BDD\u5386\u53F2\uFF0CID: ${conversationId}, \u957F\u5EA6: ${history.length}`)\r\n    }\r\n    return history\r\n  }\r\n  \r\n  // \uD83D\uDD25 \u65B0\u589E\uFF1A\u4FDD\u5B58\u5BF9\u8BDD\u5386\u53F2\u5230\u5B58\u50A8\r\n  private async saveConversationHistory(conversationId: string, history: Array<{role: string, content: string}>) {\r\n    AIService.conversations.set(conversationId, history)\r\n    console.log(`\u4FDD\u5B58\u5BF9\u8BDD\u5386\u53F2\uFF0CID: ${conversationId}, \u957F\u5EA6: ${history.length}`)\r\n    \r\n    // \u9650\u5236\u5B58\u50A8\u7684\u5BF9\u8BDD\u6570\u91CF\uFF0C\u907F\u514D\u5185\u5B58\u5360\u7528\u8FC7\u5927\r\n    if (AIService.conversations.size > 100) {\r\n      const oldestKey = AIService.conversations.keys().next().value\r\n      AIService.conversations.delete(oldestKey)\r\n      console.log(`\u6E05\u7406\u65E7\u5BF9\u8BDD\u5386\u53F2: ${oldestKey}`)\r\n    }\r\n  }\r\n  \r\n  async chat(message: string, conversationId: string, provider: string, apiConfig: any) {\r\n    try {\r\n      console.log('AIService.chat \u5F00\u59CB:', { provider, hasApiConfig: !!apiConfig, messageLength: message.length })\r\n      \r\n      // \u751F\u6210\u6216\u4F7F\u7528\u73B0\u6709\u7684\u4F1A\u8BDDID\r\n      if (!conversationId) {\r\n        conversationId = `conv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\r\n      }\r\n      \r\n      // \u83B7\u53D6\u5BF9\u8BDD\u5386\u53F2\r\n      const conversationHistory = await this.getConversationHistory(conversationId)\r\n      console.log('\u5BF9\u8BDD\u5386\u53F2\u957F\u5EA6:', conversationHistory.length)\r\n      \r\n      // \u6DFB\u52A0\u7528\u6237\u6D88\u606F\u5230\u5386\u53F2\r\n      conversationHistory.push({\r\n        role: 'user',\r\n        content: message\r\n      })\r\n      \r\n      // \u9650\u5236\u5386\u53F2\u6D88\u606F\u6570\u91CF\uFF0C\u907F\u514Dtoken\u8FC7\u591A\r\n      if (conversationHistory.length > 20) {\r\n        conversationHistory.splice(0, conversationHistory.length - 20)\r\n      }\r\n      \r\n      // \u6784\u5EFA\u5305\u542B\u5386\u53F2\u7684\u5B8C\u6574\u6D88\u606F (\u4EC5\u67D0\u4E9Bprovider\u9700\u8981)\r\n      let fullPrompt = ''\r\n      if (provider === 'claude') {\r\n        console.log('\u6784\u5EFAClaude\u63D0\u793A\u8BCD...')\r\n        fullPrompt = this.buildPromptWithHistory(message, conversationHistory)\r\n      }\r\n      \r\n      // \u6839\u636Eprovider\u8C03\u7528\u4E0D\u540C\u7684AI\u670D\u52A1\r\n      let response: any\r\n      console.log(`\u8C03\u7528 ${provider} provider...`)\r\n      \r\n      switch (provider) {\r\n        case 'openai':\r\n          // \u68C0\u67E5\u662F\u5426\u662F\u81EA\u5B9A\u4E49OpenAI API\r\n          if (apiConfig?.apiUrl && !apiConfig.apiUrl.includes('api.openai.com')) {\r\n            console.log('\u4F7F\u7528\u81EA\u5B9A\u4E49OpenAI\u517C\u5BB9API')\r\n            response = await this.callCustomAPI(message, apiConfig, conversationHistory)\r\n          } else {\r\n            response = await this.callOpenAI(message, apiConfig, conversationHistory)\r\n          }\r\n          break\r\n        case 'claude':\r\n          {\r\n            const requestFormat = apiConfig?.requestFormat\r\n            const apiUrl = apiConfig?.apiUrl || ''\r\n            const looksLikeClaudeEndpoint = /anthropic\\.com/i.test(apiUrl) || /\\/messages(\\/?$)/i.test(apiUrl)\r\n\r\n            // \u5982\u679C\u662F\u6807\u51C6Claude API\uFF0C\u4F7F\u7528\u4E13\u95E8\u7684Claude\u65B9\u6CD5\r\n            if ((requestFormat === 'claude' || looksLikeClaudeEndpoint) && apiUrl.includes('anthropic.com')) {\r\n              response = await this.callClaude(fullPrompt, apiConfig)\r\n            } else {\r\n              // \u5426\u5219\u4F7F\u7528\u901A\u7528\u7684Custom API\u65B9\u6CD5\r\n              console.log('Claude provider: \u4F7F\u7528Custom API\u65B9\u6CD5\uFF0CURL:', apiUrl)\r\n              response = await this.callCustomAPI(message, apiConfig, conversationHistory)\r\n            }\r\n          }\r\n          break\r\n        case 'gemini':\r\n          // \u68C0\u67E5\u662F\u5426\u662F\u6807\u51C6Gemini API\r\n          if (apiConfig?.apiUrl && apiConfig.apiUrl.includes('generativelanguage.googleapis.com')) {\r\n            response = await this.callGemini(message, apiConfig, conversationHistory)\r\n          } else {\r\n            console.log('Gemini provider: \u4F7F\u7528Custom API\u65B9\u6CD5\uFF0CURL:', apiConfig?.apiUrl)\r\n            response = await this.callCustomAPI(message, apiConfig, conversationHistory)\r\n          }\r\n          break\r\n        case 'doubao':\r\n          // \u68C0\u67E5\u662F\u5426\u662F\u6807\u51C6\u8C46\u5305API\r\n          if (apiConfig?.apiUrl && (apiConfig.apiUrl.includes('volces.com') || apiConfig.apiUrl.includes('ark.cn'))) {\r\n            response = await this.callOpenAI(message, { ...apiConfig, apiUrl: (apiConfig?.apiUrl || 'https://ark.cn-beijing.volces.com/api/v3') + '/chat/completions' }, conversationHistory)\r\n          } else {\r\n            console.log('Doubao provider: \u4F7F\u7528Custom API\u65B9\u6CD5\uFF0CURL:', apiConfig?.apiUrl)\r\n            response = await this.callCustomAPI(message, apiConfig, conversationHistory)\r\n          }\r\n          break\r\n        case 'siliconflow':\r\n          response = await this.callOpenAI(message, { ...apiConfig, apiUrl: (apiConfig?.apiUrl || 'https://api.siliconflow.cn/v1') + '/chat/completions' }, conversationHistory)\r\n          break\r\n        case 'qwen':\r\n          response = await this.callOpenAI(message, { ...apiConfig, apiUrl: (apiConfig?.apiUrl || 'https://dashscope.aliyuncs.com/compatible-mode/v1') + '/chat/completions' }, conversationHistory)\r\n          break\r\n        case 'perplexity':\r\n          response = await this.callOpenAI(message, { ...apiConfig, apiUrl: (apiConfig?.apiUrl || 'https://api.perplexity.ai') + '/chat/completions' }, conversationHistory)\r\n          break\r\n        case 'custom':\r\n          response = await this.callCustomAPI(message, apiConfig, conversationHistory)\r\n          break\r\n        case 'mock':\r\n          response = await this.mockResponse(message, conversationHistory)\r\n          break\r\n        default:\r\n          throw new Error(`\u4E0D\u652F\u6301\u7684\u63D0\u4F9B\u5546: ${provider}`)\r\n      }\r\n      \r\n      console.log(`${provider} provider \u8C03\u7528\u5B8C\u6210\uFF0C\u54CD\u5E94\u7C7B\u578B:`, typeof response)\r\n      \r\n      // \uD83D\uDD25 \u4FEE\u590D\uFF1A\u5C06AI\u54CD\u5E94\u6DFB\u52A0\u5230\u5386\u53F2\u5E76\u6301\u4E45\u5316\u4FDD\u5B58\r\n      if (response && response.response) {\r\n        conversationHistory.push({\r\n          role: 'assistant',\r\n          content: response.response\r\n        })\r\n        // \u7ACB\u5373\u4FDD\u5B58\u66F4\u65B0\u540E\u7684\u5BF9\u8BDD\u5386\u53F2\r\n        await this.saveConversationHistory(conversationId, conversationHistory)\r\n      }\r\n      \r\n      // **\u5173\u952E\u4FEE\u590D**\uFF1A\u5BF9\u6240\u6709AI\u63D0\u4F9B\u5546\u90FD\u8FDB\u884C\u6570\u636E\u63D0\u53D6\uFF08\u6DFB\u52A0\u8D85\u65F6\u4FDD\u62A4\uFF09\r\n      if (response && response.response && provider !== 'mock') {\r\n        console.log('\u5F00\u59CB\u63D0\u53D6\u7535\u8DEF\u6570\u636E\uFF0C\u54CD\u5E94\u957F\u5EA6:', response.response.length)\r\n        try {\r\n          // \u9884\u5148\u58F0\u660E\u53D8\u91CF\uFF0C\u907F\u514D\u672A\u58F0\u660E\u5F15\u7528\u5BFC\u81F4\u7684\u8FD0\u884C\u65F6\u9519\u8BEF\r\n          let circuit_data: any = null\r\n          let bom_data: any = null\r\n          // \u6DFB\u52A0\u6570\u636E\u63D0\u53D6\u8D85\u65F6\u4FDD\u62A4\r\n          const extractionPromise = this.extractDataFromResponse(response.response)\r\n          const timeoutPromise = new Promise((_, reject) => \r\n            setTimeout(() => reject(new Error('\u6570\u636E\u63D0\u53D6\u8D85\u65F6')), 10000) // 10\u79D2\u8D85\u65F6\r\n          )\r\n          \r\n          const extractionResult = await Promise.race([extractionPromise, timeoutPromise]) as any\r\n          circuit_data = extractionResult?.circuit_data\r\n          bom_data = extractionResult?.bom_data\r\n          console.log('\u63D0\u53D6\u7ED3\u679C:', { \r\n            hasCircuitData: !!circuit_data, \r\n            hasBomData: !!bom_data,\r\n            circuitComponents: circuit_data?.components?.length || 0,\r\n            bomItems: bom_data?.items?.length || 0\r\n          })\r\n          \r\n          // \u8986\u76D6\u539F\u6709\u7684\u6570\u636E\r\n          if (circuit_data) response.circuit_data = circuit_data\r\n          if (bom_data) response.bom_data = bom_data\r\n        } catch (extractError) {\r\n          console.error('\u6570\u636E\u63D0\u53D6\u5931\u8D25\u6216\u8D85\u65F6:', extractError.message)\r\n          // \u5373\u4F7F\u63D0\u53D6\u5931\u8D25\uFF0C\u4E5F\u4E0D\u5F71\u54CD\u57FA\u672C\u7684\u804A\u5929\u529F\u80FD\r\n        }\r\n      }\r\n      \r\n      // \u8FD4\u56DE\u54CD\u5E94\uFF0C\u5305\u542B\u4F1A\u8BDDID\r\n      return {\r\n        ...response,\r\n        conversationId: conversationId,\r\n        conversation_id: conversationId\r\n      }\r\n    } catch (error: any) {\r\n      console.error(`\u274C AIService.chat ${provider} \u8BE6\u7EC6\u9519\u8BEF:`, {\r\n        message: error.message,\r\n        stack: error.stack?.substring(0, 500),\r\n        conversationId: conversationId,\r\n        messageLength: message.length,\r\n        hasApiConfig: !!apiConfig,\r\n        timestamp: new Date().toISOString()\r\n      })\r\n      \r\n      // \u8BB0\u5F55\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\uFF0C\u4E0D\u4F7F\u7528\u964D\u7EA7\u673A\u5236\r\n      console.error(`\u274C ${provider} provider \u8C03\u7528\u5931\u8D25\uFF0C\u9700\u8981\u771F\u6B63\u4FEE\u590DAPI\u95EE\u9898`)\r\n      \r\n      // \u91CD\u65B0\u629B\u51FA\u9519\u8BEF\uFF0C\u4FDD\u6301\u9519\u8BEF\u7684\u539F\u59CB\u4FE1\u606F\r\n      throw new Error(`${provider} provider\u8C03\u7528\u5931\u8D25: ${error.message}`)\r\n    }\r\n  }\r\n\r\n  async testConfig(config: any) {\r\n    try {\r\n      console.log('\u5F00\u59CB\u771F\u5B9EAPI\u914D\u7F6E\u6D4B\u8BD5:', { \r\n        provider: config.provider, \r\n        hasApiUrl: !!config.apiUrl,\r\n        hasApiKey: !!config.apiKey,\r\n        model: config.model \r\n      })\r\n      \r\n      // \u771F\u5B9E\u7684API\u6D4B\u8BD5\uFF1A\u53D1\u9001\u4E00\u4E2A\u7B80\u5355\u7684\u95EE\u9898\u5E76\u9A8C\u8BC1\u54CD\u5E94\r\n      const testMessage = \"\u8BF7\u56DE\u7B54\uFF1A\u8FD9\u662F\u4E00\u4E2AAPI\u8FDE\u63A5\u6D4B\u8BD5\uFF0C\u8BF7\u7B80\u5355\u56DE\u590D'\u6D4B\u8BD5\u6210\u529F'\"\r\n      const response = await this.callCustomAPI(testMessage, config, undefined)\r\n      \r\n      console.log('API\u6D4B\u8BD5\u54CD\u5E94:', { \r\n        hasResponse: !!response.response,\r\n        responseLength: response.response?.length || 0,\r\n        responsePreview: response.response?.substring(0, 100)\r\n      })\r\n      \r\n      // \u9A8C\u8BC1\u54CD\u5E94\u662F\u5426\u6709\u6548\r\n      if (!response || !response.response || response.response.length < 5) {\r\n        throw new Error('API\u8FD4\u56DE\u7684\u54CD\u5E94\u65E0\u6548\u6216\u592A\u77ED')\r\n      }\r\n      \r\n      // \u68C0\u67E5\u54CD\u5E94\u662F\u5426\u5305\u542B\u9884\u671F\u5185\u5BB9\uFF08\u4E0D\u5F3A\u5236\u8981\u6C42\uFF0C\u4F46\u8BB0\u5F55\u65E5\u5FD7\uFF09\r\n      const hasExpectedContent = response.response.toLowerCase().includes('\u6D4B\u8BD5') || \r\n                                response.response.toLowerCase().includes('\u6210\u529F') ||\r\n                                response.response.toLowerCase().includes('test')\r\n      \r\n      console.log('API\u6D4B\u8BD5\u9A8C\u8BC1\u7ED3\u679C:', {\r\n        responseValid: true,\r\n        hasExpectedContent,\r\n        actualResponse: response.response.substring(0, 200)\r\n      })\r\n      \r\n      return {\r\n        isValid: true,\r\n        provider: config.provider,\r\n        model: config.model,\r\n        testResponse: response.response.substring(0, 100) + (response.response.length > 100 ? '...' : ''),\r\n        responseLength: response.response.length\r\n      }\r\n    } catch (error) {\r\n      console.error('API\u914D\u7F6E\u6D4B\u8BD5\u5931\u8D25:', {\r\n        provider: config.provider,\r\n        error: error.message,\r\n        stack: error.stack?.substring(0, 300)\r\n      })\r\n      \r\n      return {\r\n        isValid: false,\r\n        provider: config.provider,\r\n        error: error.message,\r\n        details: '\u771F\u5B9EAPI\u8C03\u7528\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u914D\u7F6E\u53C2\u6570'\r\n      }\r\n    }\r\n  }\r\n\r\n  private async callCustomAPI(message: string, config: any, conversationHistory?: Array<{role: string, content: string}>) {\r\n    try {\r\n      // \u9996\u5148\u68C0\u67E5config\u662F\u5426\u5B58\u5728\r\n      if (!config) {\r\n        throw new Error('Custom API\u914D\u7F6E\u4E3A\u7A7A\uFF0C\u8BF7\u8BBE\u7F6EAPI URL\u3001\u5BC6\u94A5\u548C\u6A21\u578B')\r\n      }\r\n      \r\n      const { apiUrl, apiKey, model, customHeaders } = config\r\n      \r\n      console.log('\uD83D\uDE80 Custom API\u8C03\u7528\u5F00\u59CB:', { \r\n        hasConfig: !!config,\r\n        apiUrl: apiUrl?.substring(0, 50) + '...', \r\n        model, \r\n        hasApiKey: !!apiKey,\r\n        messageLength: message.length,\r\n        historyLength: conversationHistory?.length || 0,\r\n        timestamp: new Date().toISOString()\r\n      })\r\n      \r\n      if (!apiUrl || !apiKey || !model) {\r\n        throw new Error(`Custom API\u914D\u7F6E\u4E0D\u5B8C\u6574: apiUrl=${!!apiUrl}, apiKey=${!!apiKey}, model=${!!model}`)\r\n      }\r\n      \r\n      // \uD83D\uDD25 \u4FEE\u590D\uFF1A\u5B9E\u73B0Custom API\u7684\u5BF9\u8BDD\u5386\u53F2\u652F\u6301\r\n      const messages = this.buildCustomAPIMessages(message, conversationHistory)\r\n      \r\n      const requestBody = {\r\n        model,\r\n        messages: messages,\r\n        max_tokens: 2000,\r\n        temperature: 0.7\r\n      }\r\n      \r\n      // \u667A\u80FD\u5904\u7406\u4E0D\u540CAPI\u7684\u8DEF\u5F84\r\n      let fullUrl = apiUrl\r\n      if (apiUrl.includes('volces.com') || apiUrl.includes('ark.cn')) {\r\n        // \u8C46\u5305API\u683C\u5F0F\r\n        fullUrl = `${apiUrl}/chat/completions`\r\n      } else if (!apiUrl.includes('/chat/completions') && !apiUrl.includes('/v1/chat/completions')) {\r\n        // \u6807\u51C6OpenAI\u683C\u5F0F\r\n        fullUrl = `${apiUrl}/v1/chat/completions`\r\n      }\r\n      \r\n      console.log('\uD83D\uDCE4 Custom API\u8BF7\u6C42\u8BE6\u60C5:', { \r\n        url: fullUrl, \r\n        messageCount: requestBody.messages.length,\r\n        modelUsed: requestBody.model,\r\n        maxTokens: requestBody.max_tokens,\r\n        temperature: requestBody.temperature\r\n      })\r\n      \r\n      // \uD83D\uDD25 \u6DFB\u52A0\u8D85\u65F6\u63A7\u5236\uFF0C\u9632\u6B62\u957F\u65F6\u95F4\u7B49\u5F85\r\n      const controller = new AbortController()\r\n      const timeoutId = setTimeout(() => controller.abort(), 30000) // 30\u79D2\u8D85\u65F6\r\n      \r\n      const response = await fetch(fullUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${apiKey}`,\r\n          ...(customHeaders || {})\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n        signal: controller.signal\r\n      })\r\n      \r\n      clearTimeout(timeoutId)\r\n\r\n      console.log('Custom API\u54CD\u5E94\u72B6\u6001:', response.status, response.statusText)\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text()\r\n        console.error('Custom API\u9519\u8BEF\u54CD\u5E94:', { \r\n          status: response.status, \r\n          statusText: response.statusText, \r\n          body: errorText \r\n        })\r\n        throw new Error(`Custom API\u8C03\u7528\u5931\u8D25: ${response.status} ${response.statusText} - ${errorText}`)\r\n      }\r\n\r\n      const data = await response.json()\r\n      console.log('Custom API\u54CD\u5E94\u6570\u636E\u7ED3\u6784:', Object.keys(data))\r\n      \r\n      if (!data.choices || !data.choices[0] || !data.choices[0].message) {\r\n        console.error('Custom API\u54CD\u5E94\u683C\u5F0F\u5F02\u5E38:', data)\r\n        throw new Error('Custom API\u8FD4\u56DE\u6570\u636E\u683C\u5F0F\u5F02\u5E38')\r\n      }\r\n      \r\n      const responseText = data.choices[0].message.content\r\n      console.log('Custom API\u8C03\u7528\u6210\u529F\uFF0C\u54CD\u5E94\u957F\u5EA6:', responseText.length)\r\n      \r\n      // \u4E0D\u5728\u8FD9\u91CC\u63D0\u53D6\u6570\u636E\uFF0C\u8BA9chat\u65B9\u6CD5\u7EDF\u4E00\u5904\u7406\r\n      return {\r\n        response: responseText,\r\n        conversation_id: `conv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        provider: 'custom'\r\n      }\r\n    } catch (error) {\r\n      console.error('Custom API\u8C03\u7528\u5F02\u5E38:', error)\r\n      if (error.message.includes('fetch')) {\r\n        throw new Error('Custom API\u7F51\u7EDC\u8FDE\u63A5\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5API\u5730\u5740\u548C\u7F51\u7EDC\u8FDE\u63A5')\r\n      } else if (error.message.includes('401')) {\r\n        throw new Error('Custom API\u5BC6\u94A5\u65E0\u6548\u6216\u5DF2\u8FC7\u671F')\r\n      } else if (error.message.includes('403')) {\r\n        throw new Error('Custom API\u8BBF\u95EE\u88AB\u62D2\u7EDD\uFF0C\u8BF7\u68C0\u67E5API\u5BC6\u94A5\u6743\u9650')\r\n      } else {\r\n        throw new Error(`Custom API\u8C03\u7528\u5931\u8D25: ${error.message}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  private async callOpenAI(message: string, config: any, conversationHistory?: Array<{role: string, content: string}>) {\r\n    const { apiKey, model = 'gpt-3.5-turbo', customHeaders } = config\r\n    // \u89C4\u8303\u5316 API \u8DEF\u5F84\uFF0C\u786E\u4FDD\u6307\u5411 /v1/chat/completions\r\n    let base = (config && config.apiUrl && config.apiUrl.startsWith('http')) ? config.apiUrl.replace(/\\/$/, '') : 'https://api.openai.com/v1'\r\n    let fullUrl = base\r\n    if (!/\\/chat\\/completions$/.test(base)) {\r\n      if (/\\/v1$/.test(base)) {\r\n        fullUrl = `${base}/chat/completions`\r\n      } else if (/\\/v1\\/.+/.test(base)) {\r\n        // \u5DF2\u7ECF\u5305\u542B /v1/xxx \u7684\u5B8C\u6574\u8DEF\u5F84\r\n        fullUrl = base\r\n      } else {\r\n        fullUrl = `${base}/v1/chat/completions`\r\n      }\r\n    }\r\n\r\n    const controller = new AbortController()\r\n    const timeoutId = setTimeout(() => controller.abort(), 30000)\r\n\r\n    const response = await fetch(fullUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${apiKey}`,\r\n        ...(customHeaders || {})\r\n      },\r\n      body: JSON.stringify({\r\n        model,\r\n        messages: this.buildOpenAIMessages(message, conversationHistory),\r\n        max_tokens: 2000,\r\n        temperature: 0.7\r\n      }),\r\n      signal: controller.signal\r\n    })\r\n\r\n    clearTimeout(timeoutId)\r\n\r\n    if (!response.ok) {\r\n      const errText = await response.text()\r\n      throw new Error(`OpenAI API\u8C03\u7528\u5931\u8D25: ${response.status} ${response.statusText} - ${errText}`)\r\n    }\r\n\r\n    const data = await response.json()\r\n    const responseText = data.choices[0].message.content\r\n    \r\n    return {\r\n      response: responseText,\r\n      conversation_id: `conv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      provider: 'openai'\r\n    }\r\n  }\r\n\r\n  private async callClaude(message: string, config: any) {\r\n    const { apiKey, model = 'claude-3-5-sonnet-20240620', apiUrl, customHeaders, authMode } = config\r\n\r\n    // \u5F52\u4E00\u5316 Anthropic API \u8DEF\u5F84\uFF0C\u9ED8\u8BA4 https://api.anthropic.com/v1/messages\r\n    let base = (apiUrl && apiUrl.startsWith('http'))\r\n      ? apiUrl.replace(/\\/$/, '')\r\n      : 'https://api.anthropic.com'\r\n    let fullUrl = base\r\n    if (!/\\/v1\\/messages$/.test(base)) {\r\n      if (/\\/v1$/.test(base)) {\r\n        fullUrl = `${base}/messages`\r\n      } else if (/\\/v1\\/.+/.test(base)) {\r\n        fullUrl = base\r\n      } else {\r\n        fullUrl = `${base}/v1/messages`\r\n      }\r\n    }\r\n\r\n    const controller = new AbortController()\r\n    const timeoutId = setTimeout(() => controller.abort(), 45000) // 45s \u8D85\u65F6\r\n\r\n    // \u6784\u5EFA\u8BF7\u6C42\u5934\uFF1A\u9ED8\u8BA4\u4EC5\u4F7F\u7528 Authorization: Bearer\uFF1B\u5982\u9700 x-api-key \u6216 anthropic-version\uFF0C\u8BF7\u901A\u8FC7 customHeaders \u4F20\u5165\uFF0C\u6216\u8BBE\u7F6E authMode='x-api-key'\r\n    const headers: Record<string, string> = {\r\n      'Content-Type': 'application/json',\r\n      ...(customHeaders || {})\r\n    }\r\n    if (authMode === 'x-api-key' || headers['x-api-key']) {\r\n      headers['x-api-key'] = headers['x-api-key'] || apiKey\r\n      delete headers['Authorization']\r\n    } else {\r\n      headers['Authorization'] = headers['Authorization'] || `Bearer ${apiKey}`\r\n      delete headers['x-api-key']\r\n    }\r\n\r\n    const response = await fetch(fullUrl, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({\r\n        model,\r\n        max_tokens: 2000,\r\n        // \u6309 Anthropic Messages API \u8981\u6C42\uFF0Ccontent \u4F7F\u7528\u5757\u6570\u7EC4\u66F4\u7A33\u59A5\r\n        messages: [\r\n          { role: 'user', content: [{ type: 'text', text: message }] }\r\n        ]\r\n      }),\r\n      signal: controller.signal\r\n    })\r\n\r\n    clearTimeout(timeoutId)\r\n\r\n    if (!response.ok) {\r\n      const errText = await response.text()\r\n      throw new Error(`Claude API\u8C03\u7528\u5931\u8D25: ${response.status} ${response.statusText} - ${errText}`)\r\n    }\r\n\r\n    const data = await response.json()\r\n    // data.content \u5F62\u5982 [{type:'text', text:'...'}]\r\n    const responseText = Array.isArray(data.content) && data.content[0]\r\n      ? (data.content[0].text || '')\r\n      : ''\r\n    \r\n    return {\r\n      response: responseText,\r\n      conversation_id: `conv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      provider: 'claude'\r\n    }\r\n  }\r\n\r\n  private async callGemini(message: string, config: any, conversationHistory?: Array<{role: string, content: string}>) {\r\n    try {\r\n    const { apiKey, model = 'gemini-pro' } = config\r\n    \r\n      if (!apiKey) {\r\n        throw new Error('Gemini API Key \u672A\u914D\u7F6E')\r\n      }\r\n      \r\n      console.log('Gemini API\u8C03\u7528\u5F00\u59CB:', { \r\n        model, \r\n        messageLength: message.length, \r\n        historyLength: conversationHistory?.length || 0,\r\n        timestamp: new Date().toISOString()\r\n      })\r\n      \r\n      // \u6784\u5EFAGemini\u7684\u591A\u8F6E\u5BF9\u8BDD\u683C\u5F0F\r\n      const contents: any[] = []\r\n      \r\n      // \u68C0\u67E5\u662F\u5426\u662F\u9996\u6B21\u5BF9\u8BDD\r\n      const isFirstMessage = !conversationHistory || conversationHistory.length === 1 // \u53EA\u6709\u5F53\u524D\u7528\u6237\u6D88\u606F\r\n      \r\n      if (isFirstMessage) {\r\n        // \u9996\u6B21\u5BF9\u8BDD\uFF0C\u4F7F\u7528\u5B8C\u6574\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\r\n        const systemPrompt = this.buildCircuitDesignPrompt(message)\r\n        contents.push({\r\n          role: 'user',\r\n          parts: [{ text: systemPrompt }]\r\n        })\r\n        console.log('\u4F7F\u7528\u5B8C\u6574\u7CFB\u7EDF\u63D0\u793A\u8BCD - \u9996\u6B21\u5BF9\u8BDD')\r\n      } else {\r\n        // \u540E\u7EED\u5BF9\u8BDD\uFF0C\u5305\u542B\u5386\u53F2\u8BB0\u5F55\r\n        console.log('\u4F7F\u7528\u5BF9\u8BDD\u5386\u53F2 - \u540E\u7EED\u5BF9\u8BDD\uFF0C\u5386\u53F2\u957F\u5EA6:', conversationHistory.length)\r\n        \r\n        // \u6DFB\u52A0\u5BF9\u8BDD\u5386\u53F2\uFF08\u6700\u8FD16\u8F6E\u5BF9\u8BDD\uFF0C\u6392\u9664\u5F53\u524D\u6D88\u606F\uFF09\r\n        const recentHistory = conversationHistory.slice(-13, -1) // \u6392\u9664\u6700\u540E\u4E00\u6761(\u5F53\u524D)\u6D88\u606F\r\n        \r\n        // \u5982\u679C\u6709\u5386\u53F2\uFF0C\u5148\u6DFB\u52A0\u4E00\u4E2A\u7B80\u5316\u7684\u4E0A\u4E0B\u6587\u63D0\u793A\r\n        if (recentHistory.length > 0) {\r\n          contents.push({\r\n            role: 'user',\r\n            parts: [{ text: '\u4F60\u662F\u4E13\u4E1A\u7684\u786C\u4EF6\u7535\u8DEF\u8BBE\u8BA1\u4E13\u5BB6\u3002\u57FA\u4E8E\u6211\u4EEC\u4E4B\u524D\u7684\u5BF9\u8BDD\uFF0C\u8BF7\u7EE7\u7EED\u4E3A\u6211\u63D0\u4F9B\u4E13\u4E1A\u7684\u6280\u672F\u652F\u6301\u3002' }]\r\n          })\r\n          \r\n          // \u6DFB\u52A0\u5386\u53F2\u5BF9\u8BDD\r\n          for (const msg of recentHistory) {\r\n            if (msg.role === 'user') {\r\n              contents.push({\r\n                role: 'user',\r\n                parts: [{ text: msg.content }]\r\n              })\r\n            } else if (msg.role === 'assistant') {\r\n              contents.push({\r\n                role: 'model',\r\n                parts: [{ text: msg.content }]\r\n              })\r\n            }\r\n          }\r\n        }\r\n        \r\n        // \u6DFB\u52A0\u5F53\u524D\u7528\u6237\u6D88\u606F\r\n        contents.push({\r\n          role: 'user',\r\n          parts: [{ text: message }]\r\n        })\r\n      }\r\n      \r\n      const requestBody = {\r\n        contents,\r\n        generationConfig: {\r\n          temperature: 0.7,\r\n          topK: 40,\r\n          topP: 0.95,\r\n          maxOutputTokens: 4096\r\n        },\r\n        safetySettings: [\r\n          {\r\n            category: \"HARM_CATEGORY_HARASSMENT\",\r\n            threshold: \"BLOCK_NONE\"\r\n          },\r\n          {\r\n            category: \"HARM_CATEGORY_HATE_SPEECH\", \r\n            threshold: \"BLOCK_NONE\"\r\n          },\r\n          {\r\n            category: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\r\n            threshold: \"BLOCK_NONE\"\r\n          },\r\n          {\r\n            category: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\r\n            threshold: \"BLOCK_NONE\"\r\n          }\r\n        ]\r\n      }\r\n      \r\n      console.log('Gemini\u8BF7\u6C42\u4F53:', JSON.stringify(requestBody, null, 2))\r\n      \r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/${model}:generateContent?key=${apiKey}`\r\n      console.log('Gemini API URL:', apiUrl)\r\n      \r\n      const response = await fetch(apiUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n        body: JSON.stringify(requestBody)\r\n      })\r\n\r\n      console.log('Gemini\u54CD\u5E94\u72B6\u6001:', response.status, response.statusText)\r\n\r\n    if (!response.ok) {\r\n        const errorText = await response.text()\r\n        console.error('Gemini API\u9519\u8BEF\u54CD\u5E94:', { \r\n          status: response.status, \r\n          statusText: response.statusText, \r\n          body: errorText,\r\n          url: apiUrl\r\n        })\r\n        throw new Error(`Gemini API\u8C03\u7528\u5931\u8D25: ${response.status} ${response.statusText} - ${errorText}`)\r\n    }\r\n\r\n          const data = await response.json()\r\n      console.log('Gemini\u54CD\u5E94\u6570\u636E\u7ED3\u6784:', Object.keys(data))\r\n      console.log('Gemini\u5B8C\u6574\u54CD\u5E94:', JSON.stringify(data, null, 2))\r\n      \r\n      // \u8BE6\u7EC6\u68C0\u67E5\u54CD\u5E94\u7ED3\u6784\r\n      if (!data.candidates) {\r\n        console.error('\u7F3A\u5C11candidates\u5B57\u6BB5:', data)\r\n        throw new Error('Gemini API\u8FD4\u56DE\u7F3A\u5C11candidates\u5B57\u6BB5')\r\n      }\r\n      \r\n      if (!Array.isArray(data.candidates) || data.candidates.length === 0) {\r\n        console.error('candidates\u4E0D\u662F\u6570\u7EC4\u6216\u4E3A\u7A7A:', data.candidates)\r\n        throw new Error('Gemini API\u8FD4\u56DEcandidates\u4E3A\u7A7A')\r\n      }\r\n      \r\n      if (!data.candidates[0]) {\r\n        console.error('candidates[0]\u4E3A\u7A7A:', data.candidates)\r\n        throw new Error('Gemini API\u8FD4\u56DEcandidates[0]\u4E3A\u7A7A')\r\n      }\r\n      \r\n      if (!data.candidates[0].content) {\r\n        console.error('candidates[0].content\u4E3A\u7A7A:', data.candidates[0])\r\n        throw new Error('Gemini API\u8FD4\u56DEcontent\u4E3A\u7A7A')\r\n      }\r\n      \r\n      // \u68C0\u67E5\u662F\u5426\u88AB\u5B89\u5168\u8FC7\u6EE4\u5668\u963B\u6B62\r\n      if (data.candidates[0].finishReason === 'SAFETY') {\r\n        console.error('\u54CD\u5E94\u88AB\u5B89\u5168\u8FC7\u6EE4\u5668\u963B\u6B62:', data.candidates[0])\r\n        throw new Error('Gemini API\u54CD\u5E94\u88AB\u5B89\u5168\u8FC7\u6EE4\u5668\u963B\u6B62\uFF0C\u8BF7\u8C03\u6574\u5B89\u5168\u8BBE\u7F6E\u6216\u4FEE\u6539\u95EE\u9898')\r\n      }\r\n      \r\n      if (!data.candidates[0].content.parts) {\r\n        console.error('candidates[0].content.parts\u4E3A\u7A7A:', data.candidates[0].content)\r\n        console.error('\u53EF\u80FD\u539F\u56E0: finishReason =', data.candidates[0].finishReason)\r\n        throw new Error(`Gemini API\u8FD4\u56DEparts\u4E3A\u7A7A\uFF0C\u539F\u56E0: ${data.candidates[0].finishReason || '\u672A\u77E5'}`)\r\n      }\r\n      \r\n      if (!Array.isArray(data.candidates[0].content.parts) || data.candidates[0].content.parts.length === 0) {\r\n        console.error('parts\u4E0D\u662F\u6570\u7EC4\u6216\u4E3A\u7A7A:', data.candidates[0].content.parts)\r\n        console.error('\u53EF\u80FD\u539F\u56E0: finishReason =', data.candidates[0].finishReason)\r\n        throw new Error(`Gemini API\u8FD4\u56DEparts\u6570\u7EC4\u4E3A\u7A7A\uFF0C\u539F\u56E0: ${data.candidates[0].finishReason || '\u672A\u77E5'}`)\r\n      }\r\n      \r\n      if (!data.candidates[0].content.parts[0]) {\r\n        console.error('parts[0]\u4E3A\u7A7A:', data.candidates[0].content.parts)\r\n        throw new Error('Gemini API\u8FD4\u56DEparts[0]\u4E3A\u7A7A')\r\n      }\r\n      \r\n      if (!data.candidates[0].content.parts[0].text) {\r\n        console.error('parts[0].text\u4E3A\u7A7A:', data.candidates[0].content.parts[0])\r\n        throw new Error('Gemini API\u8FD4\u56DEtext\u4E3A\u7A7A')\r\n      }\r\n      \r\n      const responseText = data.candidates[0].content.parts[0].text\r\n      console.log('Gemini API\u8C03\u7528\u6210\u529F\uFF0C\u54CD\u5E94\u957F\u5EA6:', responseText.length)\r\n      \r\n    return {\r\n        response: responseText,\r\n      conversation_id: `conv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      provider: 'gemini'\r\n      }\r\n    } catch (error) {\r\n      console.error('Gemini API\u8C03\u7528\u5F02\u5E38:', error)\r\n      if (error.message.includes('timeout')) {\r\n        throw new Error('Gemini API\u8C03\u7528\u8D85\u65F6\uFF0C\u8BF7\u68C0\u67E5\u7F51\u7EDC\u8FDE\u63A5\u6216\u7A0D\u540E\u91CD\u8BD5')\r\n      } else if (error.message.includes('401')) {\r\n        throw new Error('Gemini API\u5BC6\u94A5\u65E0\u6548\u6216\u5DF2\u8FC7\u671F')\r\n      } else if (error.message.includes('403')) {\r\n        throw new Error('Gemini API\u8BBF\u95EE\u88AB\u62D2\u7EDD\uFF0C\u8BF7\u68C0\u67E5API\u5BC6\u94A5\u6743\u9650')\r\n      } else if (error.message.includes('429')) {\r\n        throw new Error('Gemini API\u8BF7\u6C42\u9891\u7387\u8FC7\u9AD8\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5')\r\n      } else {\r\n        throw new Error(`Gemini API\u8C03\u7528\u5931\u8D25: ${error.message}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  private async mockResponse(message: string, history: Array<{role: string, content: string}>) {\r\n    // \u7B80\u5355\u7684mock\u54CD\u5E94\r\n    await new Promise(resolve => setTimeout(resolve, 500))\r\n    \r\n    // \u68C0\u67E5\u662F\u5426\u662F\u540E\u7EED\u5BF9\u8BDD\r\n    const isFollowUp = history.length > 1\r\n    const hasCircuitKeywords = message.includes('\u7535\u8DEF') || message.includes('\u8BBE\u8BA1') || message.includes('LED') || message.includes('\u7A33\u538B')\r\n    \r\n    let response = `Mock API \u6536\u5230\u6D88\u606F: \"${message}\"\\n\\n`\r\n    let circuit_data: any = null\r\n    let bom_data: any = null\r\n    \r\n    if (isFollowUp) {\r\n      // \u540E\u7EED\u5BF9\u8BDD\u7684\u56DE\u590D\r\n      if (message.includes('\u4F18\u5316') || message.includes('\u6539\u8FDB') || message.includes('\u4FEE\u6539')) {\r\n        response += `\u57FA\u4E8E\u524D\u9762\u7684\u8BBE\u8BA1\uFF0C\u6211\u5EFA\u8BAE\u4EE5\u4E0B\u4F18\u5316\u65B9\u6848\uFF1A\\n\\n1. \u589E\u52A0\u6EE4\u6CE2\u7535\u5BB9\u4EE5\u63D0\u9AD8\u7A33\u5B9A\u6027\\n2. \u91C7\u7528\u66F4\u7CBE\u5BC6\u7684\u7535\u963B\u4EE5\u63D0\u9AD8\u7CBE\u5EA6\\n3. \u6DFB\u52A0\u4FDD\u62A4\u7535\u8DEF\u9632\u6B62\u8FC7\u6D41\\n\\n\u8FD9\u6837\u53EF\u4EE5\u8BA9\u7535\u8DEF\u6027\u80FD\u66F4\u4F73\u3002`\r\n      } else if (message.includes('\u53C2\u6570') || message.includes('\u8BA1\u7B97')) {\r\n        response += `\u6839\u636E\u524D\u9762\u7684\u7535\u8DEF\u8BBE\u8BA1\uFF0C\u5173\u952E\u53C2\u6570\u8BA1\u7B97\u5982\u4E0B\uFF1A\\n\\n- \u9650\u6D41\u7535\u963B\uFF1AR = (Vin - Vf) / If = (5V - 2V) / 10mA = 300\u03A9\\n- \u529F\u8017\uFF1AP = I\u00B2R = (0.01A)\u00B2 \u00D7 330\u03A9 = 0.033W\\n- \u7535\u6D41\u7CBE\u5EA6\uFF1A\u00B15% (\u53D6\u51B3\u4E8E\u7535\u963B\u7CBE\u5EA6)\\n\\n\u9009\u62E9330\u03A9\u6807\u51C6\u963B\u503C\u6BD4\u8F83\u5408\u9002\u3002`\r\n      } else {\r\n        response += `\u57FA\u4E8E\u6211\u4EEC\u524D\u9762\u8BA8\u8BBA\u7684\u7535\u8DEF\uFF0C\u6211\u7406\u89E3\u60A8\u60F3\u4E86\u89E3\u66F4\u591A\u6280\u672F\u7EC6\u8282\u3002\u8BF7\u544A\u8BC9\u6211\u60A8\u5177\u4F53\u60F3\u4E86\u89E3\u54EA\u4E2A\u65B9\u9762\uFF0C\u6211\u53EF\u4EE5\u63D0\u4F9B\u66F4\u8BE6\u7EC6\u7684\u89E3\u91CA\u3002\r\n\r\n## \u6DF1\u5165\u5206\u6790\u5EFA\u8BAE\r\n\u57FA\u4E8E\u524D\u9762\u7684LED\u9A71\u52A8\u7535\u8DEF\uFF0C\u5982\u679C\u60A8\u60F3\u8FDB\u4E00\u6B65\u4E86\u89E3\uFF1A\r\n1. **\u529F\u8017\u8BA1\u7B97**\uFF1A\u5F53\u524D\u7535\u8DEF\u529F\u8017\u7EA6\u4E3A P = I\u00B2R = (0.01A)\u00B2 \u00D7 330\u03A9 = 0.033W\r\n2. **\u6563\u70ED\u8BBE\u8BA1**\uFF1A1/4W\u7535\u963B\u8DB3\u591F\uFF0C\u65E0\u9700\u989D\u5916\u6563\u70ED\r\n3. **\u53EF\u9760\u6027\u63D0\u5347**\uFF1A\u53EF\u4EE5\u5E76\u8054\u4E00\u4E2A\u5C0F\u7535\u5BB9\u6539\u5584\u7A33\u5B9A\u6027\r\n4. **\u6210\u672C\u4F18\u5316**\uFF1A\u4F7F\u7528\u6807\u51C6\u963B\u503C\u53EF\u4EE5\u964D\u4F4E\u91C7\u8D2D\u6210\u672C`\r\n      }\r\n    } else if (hasCircuitKeywords) {\r\n      // \u7B2C\u4E00\u6B21\u7535\u8DEF\u8BBE\u8BA1\u8BF7\u6C42 - \u751F\u6210\u5B8C\u6574\u7535\u8DEF\u6570\u636E\r\n      response = `\u6839\u636E\u60A8\u7684\u9700\u6C42\uFF0C\u6211\u4E3A\u60A8\u8BBE\u8BA1\u4E86\u4EE5\u4E0BLED\u9A71\u52A8\u7535\u8DEF\uFF1A\r\n\r\n## \u7535\u8DEF\u8BBE\u8BA1\r\n\r\n\\`\\`\\`\r\n     VCC\r\n      |\r\n     [R1]\r\n      |\r\n     LED1\r\n      |\r\n     GND\r\n\\`\\`\\`\r\n\r\n## \u7535\u8DEF\u8BF4\u660E\r\n**\u8BBE\u8BA1\u539F\u7406\uFF1A** \u8FD9\u662F\u4E00\u4E2A\u57FA\u672C\u7684LED\u9A71\u52A8\u7535\u8DEF\uFF0C\u901A\u8FC7\u9650\u6D41\u7535\u963BR1\u63A7\u5236\u6D41\u8FC7LED1\u7684\u7535\u6D41\uFF0C\u786E\u4FDDLED\u5B89\u5168\u5DE5\u4F5C\u3002\u7535\u8DEF\u4ECEVCC\u83B7\u53D6\u7535\u6E90\uFF0C\u7ECF\u8FC7R1\u9650\u6D41\u540E\u70B9\u4EAELED1\uFF0C\u6700\u540E\u901A\u8FC7GND\u5F62\u6210\u5B8C\u6574\u56DE\u8DEF\u3002\r\n\r\n**\u8BA1\u7B97\u65B9\u6CD5\uFF1A** \u9650\u6D41\u7535\u963B\u8BA1\u7B97\u516C\u5F0F\uFF1AR = (VCC - VF) / IF\uFF0C\u5176\u4E2DVCC=5V\uFF0CVF=2V(LED\u6B63\u5411\u538B\u964D)\uFF0CIF=10mA(LED\u5DE5\u4F5C\u7535\u6D41)\uFF0C\u56E0\u6B64R = (5-2)/0.01 = 300\u03A9\uFF0C\u9009\u62E9\u6807\u51C6\u503C330\u03A9\u3002\r\n\r\n**\u5143\u4EF6\u9009\u578B\uFF1A** R1\u9009\u62E91/4W\u529F\u7387\u7684\u91D1\u5C5E\u819C\u7535\u963B\uFF0C\u7CBE\u5EA65%\uFF1BLED1\u9009\u62E9\u6807\u51C63mm\u7EA2\u8272LED\uFF0C\u6B63\u5411\u7535\u6D4110-20mA\u3002\r\n\r\n**\u8BBE\u8BA1\u6CE8\u610F\u4E8B\u9879\uFF1A** 1.\u786E\u4FDD\u9650\u6D41\u7535\u963B\u529F\u8017\u4E0D\u8D85\u8FC7\u989D\u5B9A\u503C\uFF1B2.LED\u6781\u6027\u4E0D\u80FD\u63A5\u53CD\uFF1B3.\u7535\u6E90\u7535\u538B\u8981\u7A33\u5B9A\uFF1B4.PCB\u5E03\u7EBF\u65F6\u6CE8\u610F\u7535\u6E90\u548C\u5730\u7EBF\u56DE\u8DEF\u3002\r\n\r\n## \u5143\u4EF6\u5217\u8868\r\n| \u4F4D\u53F7 | \u7C7B\u578B | \u578B\u53F7/\u89C4\u683C | \u53C2\u6570\u503C | \u5C01\u88C5 | \u8BF4\u660E |\r\n|------|------|-----------|--------|------|------|\r\n| R1   | \u7535\u963B | 1/4W 5%   | 330\u03A9  | 0805 | \u9650\u6D41\u7535\u963B |\r\n| LED1 | LED  | \u6807\u51C6LED   | \u7EA2\u8272   | 3mm  | \u6307\u793A\u706F |\r\n\r\n## \u8FDE\u63A5\u5173\u7CFB\r\n| \u5E8F\u53F7 | \u8D77\u59CB\u5143\u4EF6 | \u8D77\u59CB\u5F15\u811A | \u76EE\u6807\u5143\u4EF6 | \u76EE\u6807\u5F15\u811A | \u8FDE\u63A5\u8BF4\u660E |\r\n|------|----------|----------|----------|----------|----------|\r\n| 1    | VCC      | +        | R1       | 1        | \u7535\u6E90\u6B63\u6781\u8FDE\u63A5\u5230\u7535\u963B |\r\n| 2    | R1       | 2        | LED1     | +        | \u7535\u963B\u8F93\u51FA\u5230LED\u6B63\u6781 |\r\n| 3    | LED1     | -        | GND      | -        | LED\u8D1F\u6781\u63A5\u5730 |\r\n\r\n## \u7269\u6599\u6E05\u5355(BOM)\r\n| \u5E8F\u53F7 | \u540D\u79F0 | \u578B\u53F7 | \u4F4D\u53F7 | \u6570\u91CF | \u5355\u4EF7(\u5143) | \u5907\u6CE8 |\r\n|------|------|------|------|------|----------|------|\r\n| 1    | \u7535\u963B | 330\u03A9/1/4W | R1 | 1 | 0.05 | \u9650\u6D41\u7535\u963B |\r\n| 2    | LED  | \u7EA2\u82723mm    | LED1 | 1 | 0.15 | \u6307\u793A\u706F |`\r\n      \r\n      circuit_data = {\r\n        ascii: `     VCC\\n      |\\n     [R1]\\n      |\\n     LED1\\n      |\\n     GND`,\r\n        description: `\u8BBE\u8BA1\u539F\u7406\uFF1A\u8FD9\u662F\u4E00\u4E2A\u57FA\u672C\u7684LED\u9A71\u52A8\u7535\u8DEF\uFF0C\u901A\u8FC7\u9650\u6D41\u7535\u963BR1\u63A7\u5236\u6D41\u8FC7LED1\u7684\u7535\u6D41\uFF0C\u786E\u4FDDLED\u5B89\u5168\u5DE5\u4F5C\u3002\u7535\u8DEF\u4ECEVCC\u83B7\u53D6\u7535\u6E90\uFF0C\u7ECF\u8FC7R1\u9650\u6D41\u540E\u70B9\u4EAELED1\uFF0C\u6700\u540E\u901A\u8FC7GND\u5F62\u6210\u5B8C\u6574\u56DE\u8DEF\u3002\r\n\r\n\u8BA1\u7B97\u65B9\u6CD5\uFF1A\u9650\u6D41\u7535\u963B\u8BA1\u7B97\u516C\u5F0F\uFF1AR = (VCC - VF) / IF\uFF0C\u5176\u4E2DVCC=5V\uFF0CVF=2V(LED\u6B63\u5411\u538B\u964D)\uFF0CIF=10mA(LED\u5DE5\u4F5C\u7535\u6D41)\uFF0C\u56E0\u6B64R = (5-2)/0.01 = 300\u03A9\uFF0C\u9009\u62E9\u6807\u51C6\u503C330\u03A9\u3002\r\n\r\n\u5143\u4EF6\u9009\u578B\uFF1AR1\u9009\u62E91/4W\u529F\u7387\u7684\u91D1\u5C5E\u819C\u7535\u963B\uFF0C\u7CBE\u5EA65%\uFF1BLED1\u9009\u62E9\u6807\u51C63mm\u7EA2\u8272LED\uFF0C\u6B63\u5411\u7535\u6D4110-20mA\u3002\r\n\r\n\u8BBE\u8BA1\u6CE8\u610F\u4E8B\u9879\uFF1A1.\u786E\u4FDD\u9650\u6D41\u7535\u963B\u529F\u8017\u4E0D\u8D85\u8FC7\u989D\u5B9A\u503C\uFF1B2.LED\u6781\u6027\u4E0D\u80FD\u63A5\u53CD\uFF1B3.\u7535\u6E90\u7535\u538B\u8981\u7A33\u5B9A\uFF1B4.PCB\u5E03\u7EBF\u65F6\u6CE8\u610F\u7535\u6E90\u548C\u5730\u7EBF\u56DE\u8DEF\u3002`,\r\n        components: [\r\n          { \r\n            id: 'R1',\r\n            name: 'R1', \r\n            type: 'resistor', \r\n            value: '1/4W 5% 330\u03A9', \r\n            reference: 'R1',\r\n            model: '1/4W 5%'\r\n          },\r\n          { \r\n            id: 'LED1',\r\n            name: 'LED1', \r\n            type: 'led', \r\n            value: '\u7EA2\u82723mm', \r\n            reference: 'LED1',\r\n            model: '\u6807\u51C6LED'\r\n          },\r\n          { \r\n            id: 'VCC',\r\n            name: 'VCC', \r\n            type: 'power', \r\n            value: '+5V', \r\n            reference: 'VCC',\r\n            model: '\u7535\u6E90'\r\n          },\r\n          { \r\n            id: 'GND',\r\n            name: 'GND', \r\n            type: 'ground', \r\n            value: '0V', \r\n            reference: 'GND',\r\n            model: '\u5730\u7EBF'\r\n          }\r\n        ],\r\n        connections: [\r\n          {\r\n            id: 'conn1',\r\n            from: { component: 'VCC' },\r\n            to: { component: 'R1' },\r\n            label: '\u7535\u6E90\u8FDE\u63A5',\r\n            description: 'VCC\u8FDE\u63A5\u5230\u9650\u6D41\u7535\u963BR1'\r\n          },\r\n          {\r\n            id: 'conn2', \r\n            from: { component: 'R1' },\r\n            to: { component: 'LED1' },\r\n            label: '\u4FE1\u53F7\u8FDE\u63A5',\r\n            description: '\u7535\u963BR1\u8FDE\u63A5\u5230LED1\u6B63\u6781'\r\n          },\r\n          {\r\n            id: 'conn3',\r\n            from: { component: 'LED1' },\r\n            to: { component: 'GND' },\r\n            label: '\u5730\u7EBF\u8FDE\u63A5',\r\n            description: 'LED1\u8D1F\u6781\u8FDE\u63A5\u5230\u5730\u7EBFGND'\r\n          }\r\n        ]\r\n      }\r\n      \r\n      bom_data = {\r\n        items: [\r\n          { component: 'R1', quantity: 1, value: '330\u03A9', package: '0805', price: 0.05 },\r\n          { component: 'LED1', quantity: 1, value: '\u7EA2\u8272LED', package: '3mm', price: 0.15 }\r\n        ],\r\n        totalCost: 0.20\r\n      }\r\n    } else {\r\n      // \u975E\u7535\u8DEF\u8BBE\u8BA1\u5BF9\u8BDD\r\n      response += `\u8FD9\u662F\u4E00\u4E2A\u6A21\u62DF\u7684AI\u54CD\u5E94\uFF0C\u7528\u4E8E\u6D4B\u8BD5\u7CFB\u7EDF\u529F\u80FD\u3002\u6211\u53EF\u4EE5\u5E2E\u60A8\u89E3\u7B54\u6280\u672F\u95EE\u9898\u6216\u8BA8\u8BBA\u7535\u8DEF\u8BBE\u8BA1\u3002`\r\n    }\r\n    \r\n    return {\r\n      response,\r\n      conversation_id: `mock_${Date.now()}`,\r\n      provider: 'mock',\r\n      circuit_data,\r\n      bom_data\r\n    }\r\n  }\r\n\r\n  // \u4ECEAI\u54CD\u5E94\u4E2D\u63D0\u53D6\u7535\u8DEF\u6570\u636E\u548CBOM\u6570\u636E - \u589E\u5F3A\u7248\r\n  private extractDataFromResponse(response: string) {\r\n    console.log('\u5F00\u59CB\u667A\u80FD\u63D0\u53D6\uFF0C\u54CD\u5E94\u524D500\u5B57\u7B26:', response.substring(0, 500))\r\n    \r\n    let circuit_data: any = null\r\n    let bom_data: any = null\r\n    \r\n    // 1. \u63D0\u53D6ASCII\u7535\u8DEF\u56FE\r\n    circuit_data = this.extractCircuitData(response)\r\n    \r\n    // 2. \u63D0\u53D6BOM\u6570\u636E - \u56DB\u5C42\u63D0\u53D6\u7B56\u7565\r\n    bom_data = this.extractBOMData(response, circuit_data)\r\n    \r\n    console.log('\u667A\u80FD\u63D0\u53D6\u5B8C\u6210:', {\r\n      hasCircuit: !!circuit_data,\r\n      circuitComponents: circuit_data?.components?.length || 0,\r\n      hasBOM: !!bom_data,\r\n      bomItems: bom_data?.items?.length || 0\r\n    })\r\n    \r\n    return { circuit_data, bom_data }\r\n  }\r\n\r\n  // \u667A\u80FD\u63D0\u53D6\u7535\u8DEF\u6570\u636E\r\n  private extractCircuitData(response: string) {\r\n    try {\r\n      // 1. \u5BFB\u627E\u4EE3\u7801\u5757\u4E2D\u7684\u7535\u8DEF\u56FE\r\n      let ascii: string | null = null\r\n      try {\r\n        const codeBlockRegex = /```([^`]*?)```/gs\r\n        const codeBlocks = Array.from(response.matchAll(codeBlockRegex))\r\n        \r\n        for (const match of codeBlocks) {\r\n          const cleanBlock = match[1].trim()\r\n          if (this.isCircuitDiagram(cleanBlock)) {\r\n            ascii = cleanBlock\r\n            break\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        console.log('\u4EE3\u7801\u5757\u63D0\u53D6\u5931\u8D25:', error.message)\r\n      }\r\n      \r\n      // 2. \u5982\u679C\u6CA1\u627E\u5230\u4EE3\u7801\u5757\uFF0C\u5BFB\u627E\u660E\u663E\u7684\u7535\u8DEF\u7ED3\u6784\r\n      if (!ascii) {\r\n        try {\r\n          ascii = this.findCircuitInText(response)\r\n        } catch (error: any) {\r\n          console.log('\u6587\u672C\u7535\u8DEF\u63D0\u53D6\u5931\u8D25:', error.message)\r\n        }\r\n      }\r\n      \r\n      // 3. \u63D0\u53D6\u7535\u8DEF\u63CF\u8FF0\u3001\u5143\u4EF6\u548C\u8FDE\u63A5\r\n      let description = ''\r\n      let components: any[] = []\r\n      let connections: any[] = []\r\n      \r\n      try {\r\n        description = this.extractDescription(response) || '\u7535\u8DEF\u8BBE\u8BA1\u8BF4\u660E'\r\n      } catch (error: any) {\r\n        console.log('\u63CF\u8FF0\u63D0\u53D6\u5931\u8D25:', error.message)\r\n        description = '\u7535\u8DEF\u8BBE\u8BA1\u8BF4\u660E'\r\n      }\r\n      \r\n      try {\r\n        components = this.extractComponents(response) || []\r\n      } catch (error: any) {\r\n        console.log('\u5143\u4EF6\u63D0\u53D6\u5931\u8D25:', error.message)\r\n        components = []\r\n      }\r\n      \r\n      try {\r\n        connections = this.extractConnections(response) || []\r\n      } catch (error: any) {\r\n        console.log('\u8FDE\u63A5\u63D0\u53D6\u5931\u8D25:', error.message)\r\n        connections = []\r\n      }\r\n      \r\n      console.log('\u7535\u8DEF\u63D0\u53D6\u7ED3\u679C:', {\r\n        hasAscii: !!ascii,\r\n        asciiLength: ascii?.length || 0,\r\n        description: description?.substring(0, 100) + '...',\r\n        componentsCount: components.length,\r\n        connectionsCount: connections.length\r\n      })\r\n      \r\n      if (ascii || components.length > 0) {\r\n        return {\r\n          ascii: ascii || '// \u7535\u8DEF\u56FE\u63D0\u53D6\u4E2D...',\r\n          description,\r\n          components,\r\n          connections\r\n        }\r\n      }\r\n      \r\n      return null\r\n    } catch (error: any) {\r\n      console.log('\u7535\u8DEF\u6570\u636E\u63D0\u53D6\u5168\u90E8\u5931\u8D25:', error.message)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // \u667A\u80FD\u63D0\u53D6BOM\u6570\u636E\r\n  private extractBOMData(response: string, circuit_data: any) {\r\n    try {\r\n      let bom_data: any = null\r\n      \r\n      // \u7B56\u75651: \u5BFB\u627E\u660E\u786E\u7684BOM\u8868\u683C\r\n      try {\r\n        bom_data = this.extractBOMFromTable(response)\r\n        if (bom_data && bom_data.items && bom_data.items.length > 0) {\r\n          console.log('\u7B56\u75651\u6210\u529F: BOM\u8868\u683C\u63D0\u53D6')\r\n          return bom_data\r\n        }\r\n      } catch (error: any) {\r\n        console.log('\u7B56\u75651\u5931\u8D25:', error.message)\r\n      }\r\n      \r\n      // \u7B56\u75652: \u4ECE\u5143\u4EF6\u6E05\u5355\u751F\u6210BOM\r\n      try {\r\n        if (circuit_data && circuit_data.components && circuit_data.components.length > 0) {\r\n          bom_data = this.generateBOMFromComponents(circuit_data.components)\r\n          if (bom_data && bom_data.items && bom_data.items.length > 0) {\r\n            console.log('\u7B56\u75652\u6210\u529F: \u5143\u4EF6\u6E05\u5355\u751F\u6210BOM')\r\n            return bom_data\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        console.log('\u7B56\u75652\u5931\u8D25:', error.message)\r\n      }\r\n      \r\n      // \u7B56\u75653: \u667A\u80FD\u6587\u672C\u5206\u6790\u63D0\u53D6\u5143\u4EF6\r\n      try {\r\n        bom_data = this.intelligentBOMExtraction(response)\r\n        if (bom_data && bom_data.items && bom_data.items.length > 0) {\r\n          console.log('\u7B56\u75653\u6210\u529F: \u667A\u80FD\u6587\u672C\u5206\u6790')\r\n          return bom_data\r\n        }\r\n      } catch (error: any) {\r\n        console.log('\u7B56\u75653\u5931\u8D25:', error.message)\r\n      }\r\n      \r\n      // \u7B56\u75654: \u6700\u540E\u624B\u6BB5 - \u6B63\u5219\u6A21\u5F0F\u5339\u914D\r\n      try {\r\n        bom_data = this.forceExtractBOM(response)\r\n        console.log('\u7B56\u75654: \u6B63\u5219\u5339\u914D\uFF0C\u7ED3\u679C:', bom_data?.items?.length || 0)\r\n        return bom_data\r\n      } catch (error: any) {\r\n        console.log('\u7B56\u75654\u5931\u8D25:', error.message)\r\n        return null\r\n      }\r\n    } catch (error: any) {\r\n      console.log('BOM\u63D0\u53D6\u5168\u90E8\u5931\u8D25:', error.message)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // \u5728\u6587\u672C\u4E2D\u5BFB\u627E\u7535\u8DEF\u7ED3\u6784\r\n  private findCircuitInText(response: string): string | null {\r\n    // \u5BFB\u627E\u5305\u542B\u7535\u8DEF\u7B26\u53F7\u7684\u6BB5\u843D\r\n    const lines = response.split('\\n')\r\n    let circuitLines: string[] = []\r\n    \r\n    for (const line of lines) {\r\n      if (this.isCircuitDiagram(line)) {\r\n        circuitLines.push(line)\r\n      }\r\n    }\r\n    \r\n    if (circuitLines.length >= 3) { // \u81F3\u5C113\u884C\u624D\u7B97\u7535\u8DEF\u56FE\r\n      return circuitLines.join('\\n')\r\n    }\r\n    \r\n    return null\r\n  }\r\n\r\n  // \uD83D\uDD25 \u4F18\u5316\uFF1A\u4ECE\u660E\u786E\u7684BOM\u8868\u683C\u4E2D\u63D0\u53D6\uFF08\u589E\u5F3A\u7248\uFF09\r\n  private extractBOMFromTable(response: string) {\r\n    console.log('\u5F00\u59CBBOM\u8868\u683C\u63D0\u53D6\uFF0C\u54CD\u5E94\u957F\u5EA6:', response.length)\r\n    \r\n    // \u589E\u5F3A\u7684BOM\u8868\u683C\u8BC6\u522B\u6A21\u5F0F\r\n    const bomPatterns = [\r\n      // \u6807\u51C6\u7269\u6599\u6E05\u5355\u8868\u683C\r\n      /## \u7269\u6599\u6E05\u5355\\(BOM\\)([\\s\\S]*?)(?=##|$)/gi,\r\n      // \u5143\u4EF6\u5217\u8868\u8868\u683C  \r\n      /## \u5143\u4EF6\u5217\u8868([\\s\\S]*?)(?=##|$)/gi,\r\n      // \u4E00\u822C\u7684BOM\u8868\u683C\r\n      /(?:BOM|\u7269\u6599\u6E05\u5355|\u5143\u4EF6\u6E05\u5355)[\\s\\S]*?\\|(.*?\\|.*?\\|.*?\\|)/gi,\r\n      // \u8868\u5934\u6A21\u5F0F\r\n      /\\|.*?\u5E8F\u53F7.*?\\|.*?\u540D\u79F0.*?\\|.*?\u578B\u53F7.*?\\|/gi,\r\n      /\\|.*?\u4F4D\u53F7.*?\\|.*?\u7C7B\u578B.*?\\|.*?\u89C4\u683C.*?\\|/gi\r\n    ]\r\n    \r\n    for (let i = 0; i < bomPatterns.length; i++) {\r\n      const pattern = bomPatterns[i]\r\n      const matches = Array.from(response.matchAll(pattern))\r\n      console.log(`BOM\u6A21\u5F0F${i + 1}\u5339\u914D\u7ED3\u679C:`, matches.length)\r\n      \r\n      if (matches.length > 0) {\r\n        const result = this.parseBOMTable(response, pattern)\r\n        if (result && result.items && result.items.length > 0) {\r\n          console.log(`BOM\u6A21\u5F0F${i + 1}\u63D0\u53D6\u6210\u529F\uFF0C\u9879\u76EE\u6570:`, result.items.length)\r\n          return result\r\n        }\r\n      }\r\n    }\r\n    \r\n    console.log('\u6240\u6709BOM\u8868\u683C\u6A21\u5F0F\u90FD\u672A\u5339\u914D\u6210\u529F')\r\n    return null\r\n  }\r\n\r\n  // \u89E3\u6790BOM\u8868\u683C\r\n  private parseBOMTable(response: string, pattern: RegExp) {\r\n    const items: any[] = []\r\n    const lines = response.split('\\n')\r\n    \r\n    let inTable = false\r\n    let itemId = 1\r\n    \r\n    for (const line of lines) {\r\n      // \u68C0\u6D4B\u8868\u683C\u5F00\u59CB\r\n      if (pattern.test(line)) {\r\n        inTable = true\r\n        continue\r\n      }\r\n      \r\n      // \u89E3\u6790\u8868\u683C\u884C\r\n      if (inTable && line.includes('|')) {\r\n        const cells = line.split('|').map(cell => cell.trim()).filter(cell => cell)\r\n        \r\n        if (cells.length >= 3) {\r\n          // \u5C1D\u8BD5\u89E3\u6790\u4E3A: \u540D\u79F0/\u4F4D\u53F7 | \u578B\u53F7/\u89C4\u683C | \u6570\u91CF | [\u5176\u4ED6]\r\n          items.push({\r\n            component: cells[0] || `COMP${itemId}`,\r\n            model: cells[1] || 'Standard',\r\n            quantity: this.extractNumber(cells[2]) || 1,\r\n            value: cells[1] || '',\r\n            package: cells[3] || 'Standard',\r\n            price: cells[4] ? this.extractNumber(cells[4]) : this.getComponentPrice('standard'),\r\n            description: cells.join(' ').substring(0, 50)\r\n          })\r\n          itemId++\r\n        }\r\n      }\r\n      \r\n      // \u68C0\u6D4B\u8868\u683C\u7ED3\u675F\r\n      if (inTable && !line.includes('|') && line.trim() === '') {\r\n        break\r\n      }\r\n    }\r\n    \r\n    return items.length > 0 ? { items, totalCost: items.reduce((sum, item) => sum + (item.price * item.quantity), 0) } : null\r\n  }\r\n\r\n  // \u667A\u80FDBOM\u63D0\u53D6\r\n  private intelligentBOMExtraction(response: string) {\r\n    const items: any[] = []\r\n    const componentMatches = new Set() // \u907F\u514D\u91CD\u590D\r\n    \r\n    // \u589E\u5F3A\u7684\u5143\u4EF6\u8BC6\u522B\u6A21\u5F0F\r\n    const patterns = [\r\n      // \u8FD0\u7B97\u653E\u5927\u5668\r\n      { pattern: /(LM\\d+|OPA\\d+|AD\\d+|TL\\d+)(\\w*)/gi, type: 'ic', getName: (match) => match[0] },\r\n      // \u7535\u963B\r\n      { pattern: /(\\d+(?:\\.\\d+)?[kKmM]?[\u03A9\\u03A9\u03A9])/gi, type: 'resistor', getName: (match) => `R(${match[1]})` },\r\n      // \u7535\u5BB9\r\n      { pattern: /(\\d+(?:\\.\\d+)?[uUnNpPmM]?F)/gi, type: 'capacitor', getName: (match) => `C(${match[1]})` },\r\n      // \u5177\u4F53IC\u578B\u53F7\r\n      { pattern: /(STM32\\w+|ESP32|555|ATmega\\w+)/gi, type: 'mcu', getName: (match) => match[0] },\r\n      // \u4E8C\u6781\u7BA1\r\n      { pattern: /(1N\\d+|BAT\\d+)/gi, type: 'diode', getName: (match) => match[0] },\r\n      // \u6676\u4F53\u7BA1\r\n      { pattern: /(2N\\d+|BC\\d+|IRLZ\\d+|IRF\\d+)/gi, type: 'transistor', getName: (match) => match[0] },\r\n    ]\r\n    \r\n    let itemId = 1\r\n    for (const { pattern, type, getName } of patterns) {\r\n      const matches = Array.from(response.matchAll(pattern))\r\n      \r\n      for (const match of matches) {\r\n        const componentName = getName(match)\r\n        const key = `${type}_${componentName}`\r\n        \r\n        if (!componentMatches.has(key)) {\r\n          componentMatches.add(key)\r\n          \r\n          items.push({\r\n            component: componentName,\r\n            model: this.getDefaultModel(type),\r\n            quantity: 1,\r\n            value: match[1] || componentName,\r\n            package: this.getDefaultPackage(type),\r\n            price: this.getComponentPrice(type),\r\n            description: this.getComponentDescription(type, componentName)\r\n          })\r\n          itemId++\r\n        }\r\n      }\r\n    }\r\n    \r\n    return items.length > 0 ? { \r\n      items, \r\n      totalCost: items.reduce((sum, item) => sum + (item.price * item.quantity), 0) \r\n    } : null\r\n  }\r\n\r\n  // \u63D0\u53D6\u6570\u5B57\r\n  private extractNumber(text: string): number {\r\n    const match = text.match(/(\\d+(?:\\.\\d+)?)/)\r\n    return match ? parseFloat(match[1]) : 0\r\n  }\r\n  \r\n  // \u5224\u65AD\u662F\u5426\u662F\u7535\u8DEF\u56FE\r\n  private isCircuitDiagram(text: string): boolean {\r\n    const circuitPatterns = [\r\n      /VCC|GND|VDD|VSS/i,\r\n      /R\\d+|C\\d+|L\\d+|U\\d+|D\\d+/,\r\n      /\\[.*?\\]|\\+.*?\\-/,\r\n      /LED|resistor|capacitor/i,\r\n      /\\||\\-|\\+/\r\n    ]\r\n    \r\n    return circuitPatterns.some(pattern => pattern.test(text))\r\n  }\r\n  \r\n  // \u4ECE\u54CD\u5E94\u4E2D\u63D0\u53D6\u7EC4\u4EF6 - \u4F18\u5148\u89E3\u6790\u8868\u683C\uFF0C\u540E\u5907ASCII\r\n  private extractComponents(response: string) {\r\n    // \u9996\u5148\u5C1D\u8BD5\u4ECE\"\u5143\u4EF6\u5217\u8868\"\u8868\u683C\u4E2D\u63D0\u53D6\r\n    const tableComponents = this.extractComponentsFromTable(response)\r\n    if (tableComponents.length > 0) {\r\n      return tableComponents\r\n    }\r\n    \r\n    // \u5982\u679C\u6CA1\u6709\u8868\u683C\uFF0C\u5219\u4ECEASCII\u7535\u8DEF\u56FE\u4E2D\u63D0\u53D6\r\n    return this.extractComponentsFromASCII(response)\r\n  }\r\n  \r\n  // \u4ECE\u5143\u4EF6\u5217\u8868\u8868\u683C\u4E2D\u63D0\u53D6\u7EC4\u4EF6\r\n  private extractComponentsFromTable(response: string) {\r\n    const components: any[] = []\r\n    const sectionMatch = response.match(/## \u5143\u4EF6\u5217\u8868([\\s\\S]*?)(?=##|$)/i)\r\n    \r\n    if (sectionMatch) {\r\n      const section = sectionMatch[1]\r\n      const lines = section.split('\\n')\r\n      \r\n      for (const line of lines) {\r\n        // \u5339\u914D\u8868\u683C\u884C\u683C\u5F0F: | \u4F4D\u53F7 | \u7C7B\u578B | \u578B\u53F7/\u89C4\u683C | \u53C2\u6570\u503C | \u5C01\u88C5 | \u8BF4\u660E |\r\n        const match = line.match(/\\|\\s*([A-Z]+\\d*)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|/)\r\n        if (match) {\r\n          const [, reference, type, model, value, pkg, description] = match\r\n          \r\n          components.push({\r\n            id: reference.trim(),\r\n            name: reference.trim(),\r\n            type: this.normalizeComponentType(type.trim()),\r\n            reference: reference.trim(),\r\n            value: value.trim(),\r\n            package: pkg.trim(),\r\n            description: description.trim()\r\n          })\r\n        }\r\n      }\r\n    }\r\n    \r\n    return components\r\n  }\r\n  \r\n  // \u4ECEASCII\u7535\u8DEF\u56FE\u4E2D\u63D0\u53D6\u7EC4\u4EF6\uFF08\u540E\u5907\u65B9\u6848\uFF09\r\n  private extractComponentsFromASCII(response: string) {\r\n    const components: any[] = []\r\n    \r\n    // \u63D0\u53D6ASCII\u7535\u8DEF\u56FE\r\n    const codeBlockMatch = response.match(/```([\\s\\S]*?)```/)\r\n    if (!codeBlockMatch) return components\r\n    \r\n    const ascii = codeBlockMatch[1]\r\n    const lines = ascii.split('\\n')\r\n    const foundComponents = new Set()\r\n    \r\n    for (const line of lines) {\r\n      const componentMatches = line.match(/\\b([RLCUD]\\d+)\\b|\\bLED\\d*\\b|\\bVCC\\b|\\bGND\\b|\\[([^\\[\\]]+)\\]/g)\r\n      if (componentMatches) {\r\n        for (let match of componentMatches) {\r\n          if (match.includes('[')) {\r\n            match = match.replace(/[\\[\\]]/g, '')\r\n          }\r\n          \r\n          if (foundComponents.has(match)) continue\r\n          foundComponents.add(match)\r\n          \r\n          let type = 'unknown'\r\n          if (match.startsWith('R')) type = 'resistor'\r\n          else if (match.startsWith('C')) type = 'capacitor'\r\n          else if (match.startsWith('L')) type = 'inductor'\r\n          else if (match.startsWith('U')) type = 'ic'\r\n          else if (match.startsWith('D')) type = 'diode'\r\n          else if (match.includes('LED')) type = 'led'\r\n          else if (match === 'VCC') type = 'power'\r\n          else if (match === 'GND') type = 'ground'\r\n          \r\n          if (type !== 'unknown') {\r\n            components.push({\r\n              id: match,\r\n              name: match,\r\n              type: type,\r\n              reference: match,\r\n              value: this.getComponentValue(match)\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return components\r\n  }\r\n  \r\n  // \u6807\u51C6\u5316\u7EC4\u4EF6\u7C7B\u578B\r\n  private normalizeComponentType(type: string): string {\r\n    const typeMap: { [key: string]: string } = {\r\n      '\u7535\u963B': 'resistor',\r\n      '\u7535\u5BB9': 'capacitor',\r\n      '\u7535\u611F': 'inductor',\r\n      'LED': 'led',\r\n      '\u4E8C\u6781\u7BA1': 'diode',\r\n      'IC': 'ic',\r\n      '\u82AF\u7247': 'ic',\r\n      '\u7535\u6E90': 'power',\r\n      '\u5730\u7EBF': 'ground'\r\n    }\r\n    \r\n    return typeMap[type] || type.toLowerCase()\r\n  }\r\n  \r\n  // \u63D0\u53D6\u7535\u8DEF\u63CF\u8FF0 - \u89E3\u6790\u7ED3\u6784\u5316\u54CD\u5E94\r\n  private extractDescription(response: string): string {\r\n    // \u67E5\u627E## \u7535\u8DEF\u8BF4\u660E\u90E8\u5206\r\n    const sectionMatch = response.match(/## \u7535\u8DEF\u8BF4\u660E([\\s\\S]*?)(?=##|$)/i)\r\n    if (sectionMatch) {\r\n      const section = sectionMatch[1]\r\n      \r\n      // \u63D0\u53D6\u5404\u4E2A\u90E8\u5206\r\n      const principleMatch = section.match(/\\*\\*\u8BBE\u8BA1\u539F\u7406\uFF1A\\*\\*(.*?)(?=\\*\\*|$)/s)\r\n      const calculationMatch = section.match(/\\*\\*\u8BA1\u7B97\u65B9\u6CD5\uFF1A\\*\\*(.*?)(?=\\*\\*|$)/s)\r\n      const selectionMatch = section.match(/\\*\\*\u5143\u4EF6\u9009\u578B\uFF1A\\*\\*(.*?)(?=\\*\\*|$)/s)\r\n      const notesMatch = section.match(/\\*\\*\u8BBE\u8BA1\u6CE8\u610F\u4E8B\u9879\uFF1A\\*\\*(.*?)(?=\\*\\*|$)/s)\r\n      \r\n      let description = ''\r\n      if (principleMatch) description += `\u8BBE\u8BA1\u539F\u7406\uFF1A${principleMatch[1].trim()}\\n\\n`\r\n      if (calculationMatch) description += `\u8BA1\u7B97\u65B9\u6CD5\uFF1A${calculationMatch[1].trim()}\\n\\n`\r\n      if (selectionMatch) description += `\u5143\u4EF6\u9009\u578B\uFF1A${selectionMatch[1].trim()}\\n\\n`\r\n      if (notesMatch) description += `\u8BBE\u8BA1\u6CE8\u610F\u4E8B\u9879\uFF1A${notesMatch[1].trim()}`\r\n      \r\n      return description.trim() || '\u6839\u636EAI\u5206\u6790\u751F\u6210\u7684\u7535\u8DEF\u8BBE\u8BA1'\r\n    }\r\n    \r\n    // \u5982\u679C\u6CA1\u6709\u627E\u5230\u7ED3\u6784\u5316\u63CF\u8FF0\uFF0C\u8FD4\u56DE\u901A\u7528\u63CF\u8FF0\r\n    return '\u6839\u636EAI\u5206\u6790\u751F\u6210\u7684\u7535\u8DEF\u8BBE\u8BA1'\r\n  }\r\n  \r\n  // \u63D0\u53D6\u8FDE\u63A5\u5173\u7CFB - \u89E3\u6790\u8FDE\u63A5\u5173\u7CFB\u8868\u683C\r\n  private extractConnections(response: string) {\r\n    const connections: any[] = []\r\n    const sectionMatch = response.match(/## \u8FDE\u63A5\u5173\u7CFB([\\s\\S]*?)(?=##|$)/i)\r\n    \r\n    if (sectionMatch) {\r\n      const section = sectionMatch[1]\r\n      const lines = section.split('\\n')\r\n      \r\n      for (const line of lines) {\r\n        // \u5339\u914D\u8868\u683C\u884C\u683C\u5F0F: | \u5E8F\u53F7 | \u8D77\u59CB\u5143\u4EF6 | \u8D77\u59CB\u5F15\u811A | \u76EE\u6807\u5143\u4EF6 | \u76EE\u6807\u5F15\u811A | \u8FDE\u63A5\u8BF4\u660E |\r\n        const match = line.match(/\\|\\s*(\\d+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|/)\r\n        if (match) {\r\n          const [, id, fromComp, fromPin, toComp, toPin, description] = match\r\n          \r\n          connections.push({\r\n            id: `conn_${id.trim()}`,\r\n            from: { \r\n              component: fromComp.trim(),\r\n              pin: fromPin.trim()\r\n            },\r\n            to: { \r\n              component: toComp.trim(),\r\n              pin: toPin.trim()\r\n            },\r\n            label: '\u8FDE\u63A5',\r\n            description: description.trim()\r\n          })\r\n        }\r\n      }\r\n    }\r\n    \r\n    return connections\r\n  }\r\n  \r\n  // \u8F85\u52A9\u65B9\u6CD5\uFF1A\u5728\u884C\u4E2D\u67E5\u627E\u7EC4\u4EF6\r\n  private findComponentInLine(line: string): string | null {\r\n    // \u5339\u914D\u6807\u51C6\u7EC4\u4EF6\u683C\u5F0F\uFF0C\u5305\u62EC\u65B9\u62EC\u53F7\u683C\u5F0F\r\n    const patterns = [\r\n      /\\b([RLCUD]\\d+)\\b/,  // \u6807\u51C6\u7EC4\u4EF6\u6807\u53F7\r\n      /\\bLED\\d*\\b/,        // LED\r\n      /\\bVCC\\b/,           // \u7535\u6E90\r\n      /\\bGND\\b/,           // \u5730\u7EBF\r\n      /\\[([^\\[\\]]+)\\]/     // \u65B9\u62EC\u53F7\u683C\u5F0F\r\n    ]\r\n    \r\n    for (const pattern of patterns) {\r\n      const match = line.match(pattern)\r\n      if (match) {\r\n        let component = match[1] || match[0]\r\n        // \u5904\u7406\u65B9\u62EC\u53F7\u683C\u5F0F\r\n        if (component.includes('[')) {\r\n          component = component.replace(/[\\[\\]]/g, '')\r\n        }\r\n        return component\r\n      }\r\n    }\r\n    \r\n    return null\r\n  }\r\n  \r\n  // \u83B7\u53D6\u7EC4\u4EF6\u503C\r\n  private getComponentValue(component: string): string {\r\n    if (component.startsWith('R')) return '330\u03A9'\r\n    if (component.includes('LED')) return '\u7EA2\u8272LED'\r\n    if (component.startsWith('C')) return '10\u00B5F'\r\n    if (component.startsWith('L')) return '10mH'\r\n    if (component === 'VCC' || component === 'VDD') return '+5V'\r\n    if (component === 'GND' || component === 'VSS') return '0V'\r\n    return ''\r\n  }\r\n  \r\n  // \u4ECE\u6587\u672C\u4E2D\u63D0\u53D6BOM\u6570\u636E - \u89E3\u6790BOM\u8868\u683C\r\n  private extractBOMFromText(response: string) {\r\n    const items: any[] = []\r\n    const sectionMatch = response.match(/## \u7269\u6599\u6E05\u5355\\(BOM\\)([\\s\\S]*?)(?=##|$)/i)\r\n    \r\n    if (sectionMatch) {\r\n      const section = sectionMatch[1]\r\n      const lines = section.split('\\n')\r\n      \r\n      for (const line of lines) {\r\n        // \u5339\u914D\u8868\u683C\u884C\u683C\u5F0F: | \u5E8F\u53F7 | \u540D\u79F0 | \u578B\u53F7 | \u4F4D\u53F7 | \u6570\u91CF | \u5355\u4EF7(\u5143) | \u5907\u6CE8 |\r\n        const match = line.match(/\\|\\s*(\\d+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*([^|]+)\\s*\\|\\s*(\\d+)\\s*\\|\\s*([\\d.]+)\\s*\\|\\s*([^|]+)\\s*\\|/)\r\n        if (match) {\r\n          const [, id, name, model, reference, quantity, price, notes] = match\r\n          \r\n          items.push({\r\n            component: reference.trim(),\r\n            quantity: parseInt(quantity.trim()) || 1,\r\n            value: model.trim(),\r\n            package: this.getDefaultPackage(reference.trim()),\r\n            price: parseFloat(price.trim()) || 0,\r\n            description: notes.trim()\r\n          })\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (items.length > 0) {\r\n      const totalCost = items.reduce((sum, item) => sum + item.price * item.quantity, 0)\r\n      return { items, totalCost }\r\n    }\r\n    \r\n    return null\r\n  }\r\n  \r\n  // \u83B7\u53D6\u7EC4\u4EF6\u4EF7\u683C\r\n  private getComponentPrice(component: string): number {\r\n    if (component.startsWith('R')) return 0.05 // \u7535\u963B\r\n    if (component.includes('LED')) return 0.15 // LED\r\n    if (component.startsWith('C')) return 0.08 // \u7535\u5BB9\r\n    if (component.startsWith('L')) return 0.12 // \u7535\u611F\r\n    if (component.startsWith('U')) return 1.50 // IC\r\n    if (component.startsWith('D')) return 0.25 // \u4E8C\u6781\u7BA1\r\n    return 0.10 // \u9ED8\u8BA4\u4EF7\u683C\r\n  }\r\n  \r\n  // \u83B7\u53D6\u9ED8\u8BA4\u5C01\u88C5\r\n  private getDefaultPackage(component: string): string {\r\n    if (component.startsWith('R')) return '0805'\r\n    if (component.includes('LED')) return '3mm'\r\n    if (component.startsWith('C')) return '0805'\r\n    if (component.startsWith('L')) return '1206'\r\n    if (component.startsWith('U')) return 'SOIC-8'\r\n    if (component.startsWith('D')) return 'SOD-123'\r\n    return 'TBD'\r\n  }\r\n  \r\n  // \u57FA\u4E8E\u7EC4\u4EF6\u751F\u6210BOM\u6570\u636E\r\n  private generateBOMFromComponents(components: any[]) {\r\n    const items: any[] = []\r\n    \r\n    for (const comp of components) {\r\n      // \u8DF3\u8FC7\u7535\u6E90\u548C\u5730\u7EBF\u8282\u70B9\r\n      if (comp.type === 'power' || comp.type === 'ground') {\r\n        continue\r\n      }\r\n      \r\n      items.push({\r\n        component: comp.reference,\r\n        quantity: 1,\r\n        value: comp.value || this.getComponentValue(comp.reference),\r\n        package: this.getDefaultPackage(comp.reference),\r\n        price: this.getComponentPrice(comp.reference)\r\n      })\r\n    }\r\n    \r\n    if (items.length > 0) {\r\n      const totalCost = items.reduce((sum, item) => sum + item.price * item.quantity, 0)\r\n      return { items, totalCost }\r\n    }\r\n    \r\n    return null\r\n  }\r\n  \r\n  // \uD83D\uDD25 \u4F18\u5316\uFF1A\u6784\u5EFA\u66F4\u4E13\u4E1A\u7684\u7535\u8DEF\u8BBE\u8BA1\u63D0\u793A\u8BCD\uFF0C\u786E\u4FDD\u7ED3\u6784\u5316\u8F93\u51FA\r\n  private buildCircuitDesignPrompt(userMessage: string): string {\r\n    return `\u4F60\u662F\u4E13\u4E1A\u7684\u786C\u4EF6\u7535\u8DEF\u8BBE\u8BA1\u5DE5\u7A0B\u5E08\u3002\u8BF7\u4E3A\u7528\u6237\u9700\u6C42\u63D0\u4F9B\u5B8C\u6574\u7684\u7535\u8DEF\u8BBE\u8BA1\u65B9\u6848\uFF1A${userMessage}\r\n\r\n**\u4E25\u683C\u6309\u7167\u4EE5\u4E0B\u683C\u5F0F\u8F93\u51FA\uFF0C\u786E\u4FDD\u6BCF\u4E2A\u90E8\u5206\u90FD\u5B8C\u6574\uFF1A**\r\n\r\n## \u7535\u8DEF\u8BBE\u8BA1\u8BF4\u660E\r\n**\u8BBE\u8BA1\u539F\u7406\uFF1A** [\u8BE6\u7EC6\u8BF4\u660E\u7535\u8DEF\u5DE5\u4F5C\u539F\u7406]\r\n**\u8BA1\u7B97\u65B9\u6CD5\uFF1A** [\u63D0\u4F9B\u5173\u952E\u53C2\u6570\u8BA1\u7B97\u8FC7\u7A0B\u548C\u516C\u5F0F]\r\n**\u5143\u4EF6\u9009\u578B\uFF1A** [\u8BF4\u660E\u4E3B\u8981\u5143\u4EF6\u7684\u9009\u62E9\u7406\u7531\u548C\u89C4\u683C\u8981\u6C42]\r\n**\u8BBE\u8BA1\u6CE8\u610F\u4E8B\u9879\uFF1A** [\u5217\u51FA\u8BBE\u8BA1\u548C\u8C03\u8BD5\u7684\u5173\u952E\u8981\u70B9]\r\n\r\n## ASCII\u7535\u8DEF\u56FE\r\n\\`\\`\\`\r\n[\u7ED8\u5236\u6E05\u6670\u7684ASCII\u7535\u8DEF\u56FE\uFF0C\u6807\u660E\u6240\u6709\u5143\u4EF6\u548C\u8FDE\u63A5\uFF0C\u4F8B\u5982\uFF1A\r\n     VCC\r\n      |\r\n     [R1]\r\n      |\r\n     LED1\r\n      |\r\n     GND\r\n]\r\n\\`\\`\\`\r\n\r\n## \u5143\u4EF6\u5217\u8868\r\n| \u4F4D\u53F7 | \u7C7B\u578B | \u578B\u53F7/\u89C4\u683C | \u53C2\u6570\u503C | \u5C01\u88C5 | \u8BF4\u660E |\r\n|------|------|-----------|--------|------|------|\r\n| R1   | \u7535\u963B | 1/4W 5%   | 330\u03A9  | 0805 | \u9650\u6D41\u7535\u963B |\r\n| LED1 | LED  | \u6807\u51C6LED   | \u7EA2\u8272   | 3mm  | \u6307\u793A\u706F |\r\n\r\n## \u8FDE\u63A5\u5173\u7CFB\r\n| \u5E8F\u53F7 | \u8D77\u59CB\u5143\u4EF6 | \u8D77\u59CB\u5F15\u811A | \u76EE\u6807\u5143\u4EF6 | \u76EE\u6807\u5F15\u811A | \u8FDE\u63A5\u8BF4\u660E |\r\n|------|----------|----------|----------|----------|----------|\r\n| 1    | VCC      | +        | R1       | 1        | \u7535\u6E90\u6B63\u6781\u8FDE\u63A5 |\r\n| 2    | R1       | 2        | LED1     | +        | \u9650\u6D41\u540E\u8FDE\u63A5LED |\r\n\r\n## \u7269\u6599\u6E05\u5355(BOM)\r\n| \u5E8F\u53F7 | \u540D\u79F0 | \u578B\u53F7 | \u4F4D\u53F7 | \u6570\u91CF | \u5355\u4EF7(\u5143) | \u5907\u6CE8 |\r\n|------|------|------|------|------|----------|------|\r\n| 1    | \u7535\u963B | 330\u03A9/1/4W | R1 | 1 | 0.05 | \u9650\u6D41\u7535\u963B |\r\n| 2    | LED  | \u7EA2\u82723mm    | LED1 | 1 | 0.15 | \u6307\u793A\u706F |\r\n\r\n\u8BF7\u786E\u4FDD\u8F93\u51FA\u5185\u5BB9\u4E13\u4E1A\u3001\u8BE6\u7EC6\u3001\u51C6\u786E\uFF0C\u5305\u542B\u6240\u6709\u5FC5\u8981\u7684\u6280\u672F\u4FE1\u606F\u3002`\r\n  }\r\n\r\n  // \u6784\u5EFA\u5305\u542B\u5386\u53F2\u7684\u63D0\u793A\u8BCD\r\n  private buildPromptWithHistory(currentMessage: string, history: Array<{role: string, content: string}>): string {\r\n    // \u5982\u679C\u662F\u7B2C\u4E00\u6761\u6D88\u606F\uFF0C\u4F7F\u7528\u5B8C\u6574\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\r\n    if (history.length <= 1) {\r\n      return this.buildCircuitDesignPrompt(currentMessage)\r\n    }\r\n\r\n    // \u6784\u5EFA\u7B80\u5316\u7684\u4E0A\u4E0B\u6587\u63D0\u793A\u8BCD\uFF0C\u5305\u542B\u5386\u53F2\u5BF9\u8BDD\r\n    let prompt = `\u4F60\u662FCircuitsAI\u7684\u8D44\u6DF1\u786C\u4EF6\u7535\u8DEF\u8BBE\u8BA1\u603B\u5DE5\u7A0B\u5E08\u3002\u8BF7\u57FA\u4E8E\u4EE5\u4E0B\u5BF9\u8BDD\u5386\u53F2\uFF0C\u7EE7\u7EED\u4E3A\u7528\u6237\u63D0\u4F9B\u4E13\u4E1A\u7684\u7535\u8DEF\u8BBE\u8BA1\u670D\u52A1\u3002\r\n\r\n## \u5BF9\u8BDD\u5386\u53F2\uFF1A\r\n`\r\n    \r\n    // \u6DFB\u52A0\u6700\u8FD1\u7684\u5BF9\u8BDD\u5386\u53F2\uFF08\u6700\u591A10\u8F6E\uFF09\r\n    const recentHistory = history.slice(-10)\r\n    for (let i = 0; i < recentHistory.length - 1; i++) { // \u4E0D\u5305\u62EC\u5F53\u524D\u7528\u6237\u6D88\u606F\r\n      const msg = recentHistory[i]\r\n      if (msg.role === 'user') {\r\n        prompt += `\\n**\u7528\u6237\uFF1A** ${msg.content}\\n`\r\n      } else if (msg.role === 'assistant') {\r\n        // \u53EA\u4FDD\u7559\u54CD\u5E94\u7684\u524D200\u5B57\u7B26\uFF0C\u907F\u514D\u63D0\u793A\u8BCD\u8FC7\u957F\r\n        const shortContent = msg.content.length > 200 ? msg.content.substring(0, 200) + '...' : msg.content\r\n        prompt += `**AI\uFF1A** ${shortContent}\\n`\r\n      }\r\n    }\r\n\r\n    prompt += `\\n## \u5F53\u524D\u7528\u6237\u8BF7\u6C42\uFF1A\r\n${currentMessage}\r\n\r\n## \u56DE\u590D\u8981\u6C42\uFF1A\r\n\u8BF7\u57FA\u4E8E\u4E0A\u8FF0\u5BF9\u8BDD\u5386\u53F2\uFF0C\u9488\u5BF9\u7528\u6237\u7684\u5F53\u524D\u8BF7\u6C42\u63D0\u4F9B\uFF1A\r\n1. \u5982\u679C\u662F\u65B0\u7684\u8BBE\u8BA1\u9700\u6C42\uFF0C\u6309\u6807\u51C6\u683C\u5F0F\u63D0\u4F9B\u5B8C\u6574\u65B9\u6848\uFF08ASCII\u56FE\u3001\u8BF4\u660E\u3001\u5143\u4EF6\u8868\u3001\u8FDE\u63A5\u5173\u7CFB\u3001BOM\uFF09\r\n2. \u5982\u679C\u662F\u5BF9\u524D\u9762\u8BBE\u8BA1\u7684\u4FEE\u6539\u6216\u4F18\u5316\uFF0C\u8BF7\u5728\u539F\u6709\u57FA\u7840\u4E0A\u8FDB\u884C\u6539\u8FDB\r\n3. \u5982\u679C\u662F\u6280\u672F\u95EE\u9898\uFF0C\u8BF7\u7ED3\u5408\u524D\u9762\u7684\u8BBE\u8BA1\u80CC\u666F\u7ED9\u51FA\u4E13\u4E1A\u89E3\u7B54\r\n\r\n\u8BF7\u4FDD\u6301\u56DE\u590D\u7684\u4E13\u4E1A\u6027\u548C\u8FDE\u8D2F\u6027\u3002`\r\n\r\n    return prompt\r\n  }\r\n\r\n  // \u6784\u5EFACustom API\u6D88\u606F\u683C\u5F0F\uFF08\u652F\u6301\u5BF9\u8BDD\u5386\u53F2\uFF09\r\n  private buildCustomAPIMessages(message: string, conversationHistory?: Array<{role: string, content: string}>) {\r\n    const messages: any[] = []\r\n    \r\n    // \u68C0\u67E5\u662F\u5426\u662F\u9996\u6B21\u5BF9\u8BDD\r\n    const isFirstMessage = !conversationHistory || conversationHistory.length <= 1\r\n    \r\n    if (isFirstMessage) {\r\n      // \u9996\u6B21\u5BF9\u8BDD\uFF0C\u4F7F\u7528\u5B8C\u6574\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\r\n      const systemPrompt = this.buildCircuitDesignPrompt(message)\r\n      messages.push({ role: 'user', content: systemPrompt })\r\n      console.log('Custom API: \u4F7F\u7528\u5B8C\u6574\u7CFB\u7EDF\u63D0\u793A\u8BCD - \u9996\u6B21\u5BF9\u8BDD')\r\n    } else {\r\n      // \u540E\u7EED\u5BF9\u8BDD\uFF0C\u5305\u542B\u5386\u53F2\u8BB0\u5F55\r\n      console.log('Custom API: \u4F7F\u7528\u5BF9\u8BDD\u5386\u53F2 - \u540E\u7EED\u5BF9\u8BDD\uFF0C\u5386\u53F2\u957F\u5EA6:', conversationHistory.length)\r\n      \r\n      // \u6DFB\u52A0\u7CFB\u7EDF\u6307\u5BFC\r\n      messages.push({ \r\n        role: 'system', \r\n        content: '\u4F60\u662FCircuitAI\u7684\u4E13\u4E1A\u786C\u4EF6\u7535\u8DEF\u8BBE\u8BA1\u5DE5\u7A0B\u5E08\u3002\u57FA\u4E8E\u5BF9\u8BDD\u5386\u53F2\uFF0C\u7EE7\u7EED\u4E3A\u7528\u6237\u63D0\u4F9B\u4E13\u4E1A\u7684\u7535\u8DEF\u8BBE\u8BA1\u670D\u52A1\u3002\u8BF7\u4FDD\u6301\u56DE\u590D\u7684\u4E13\u4E1A\u6027\u548C\u8FDE\u8D2F\u6027\u3002' \r\n      })\r\n      \r\n      // \u6DFB\u52A0\u6700\u8FD1\u7684\u5BF9\u8BDD\u5386\u53F2\uFF08\u6700\u8FD18\u8F6E\u5BF9\u8BDD\uFF0C\u6392\u9664\u5F53\u524D\u6D88\u606F\uFF09\r\n      const recentHistory = conversationHistory.slice(-9, -1) // \u6392\u9664\u6700\u540E\u4E00\u6761(\u5F53\u524D)\u6D88\u606F\r\n      for (const msg of recentHistory) {\r\n        messages.push({ \r\n          role: msg.role === 'assistant' ? 'assistant' : 'user', \r\n          content: msg.content \r\n        })\r\n      }\r\n      \r\n      // \u6DFB\u52A0\u5F53\u524D\u7528\u6237\u6D88\u606F\r\n      messages.push({ role: 'user', content: message })\r\n    }\r\n    \r\n    console.log('Custom API messages\u6784\u5EFA\u5B8C\u6210\uFF0C\u6D88\u606F\u6570\u91CF:', messages.length)\r\n    return messages\r\n  }\r\n\r\n  // \u6784\u5EFAOpenAI\u6D88\u606F\u683C\u5F0F\r\n  private buildOpenAIMessages(message: string, conversationHistory?: Array<{role: string, content: string}>) {\r\n    const messages: any[] = []\r\n    \r\n    // \u5982\u679C\u662F\u7B2C\u4E00\u6761\u6D88\u606F\uFF0C\u6DFB\u52A0\u7CFB\u7EDF\u63D0\u793A\u8BCD\r\n    if (!conversationHistory || conversationHistory.length <= 1) {\r\n      const systemPrompt = this.buildCircuitDesignPrompt(message)\r\n      messages.push({ role: 'user', content: systemPrompt })\r\n    } else {\r\n      // \u6DFB\u52A0\u7CFB\u7EDF\u6307\u5BFC\r\n      messages.push({ \r\n        role: 'system', \r\n        content: '\u4F60\u662FCircuitsAI\u7684\u8D44\u6DF1\u786C\u4EF6\u7535\u8DEF\u8BBE\u8BA1\u603B\u5DE5\u7A0B\u5E08\u3002\u57FA\u4E8E\u5BF9\u8BDD\u5386\u53F2\uFF0C\u7EE7\u7EED\u63D0\u4F9B\u4E13\u4E1A\u7684\u7535\u8DEF\u8BBE\u8BA1\u670D\u52A1\u3002' \r\n      })\r\n      \r\n      // \u6DFB\u52A0\u5BF9\u8BDD\u5386\u53F2\uFF08\u6700\u8FD18\u6761\u6D88\u606F\uFF09\r\n      const recentHistory = conversationHistory.slice(-8)\r\n      for (let i = 0; i < recentHistory.length - 1; i++) { // \u6392\u9664\u5F53\u524D\u6D88\u606F\r\n        const msg = recentHistory[i]\r\n        messages.push({ \r\n          role: msg.role === 'assistant' ? 'assistant' : 'user', \r\n          content: msg.content \r\n        })\r\n      }\r\n      \r\n      // \u6DFB\u52A0\u5F53\u524D\u7528\u6237\u6D88\u606F\r\n      messages.push({ role: 'user', content: message })\r\n    }\r\n    \r\n    return messages\r\n  }\r\n\r\n  // \u667A\u80FD\u4ECE\u4E13\u4E1A\u56DE\u7B54\u4E2D\u63D0\u53D6BOM - \u589E\u5F3A\u7248\r\n  private forceExtractBOM(response: string) {\r\n    const items: any[] = []\r\n    \r\n    // \u6269\u5C55\u7684\u5143\u4EF6\u8BC6\u522B\u6A21\u5F0F\r\n    const componentPatterns = [\r\n      // \u7535\u963B\u6A21\u5F0F\r\n      { pattern: /([RC]\\d+).*?(\\d+[kKmMuUnN]?[\u03A9\\u03A9\u03A9])/gi, type: 'resistor' },\r\n      { pattern: /(\u7535\u963B|resistor).*?(\\d+[kKmMuUnN]?[\u03A9\\u03A9\u03A9])/gi, type: 'resistor' },\r\n      \r\n      // \u7535\u5BB9\u6A21\u5F0F  \r\n      { pattern: /([LC]\\d+).*?(\\d+[uUnNpPmMfF]?F)/gi, type: 'capacitor' },\r\n      { pattern: /(\u7535\u5BB9|capacitor).*?(\\d+[uUnNpPmMfF]?F)/gi, type: 'capacitor' },\r\n      \r\n      // LED\u6A21\u5F0F\r\n      { pattern: /(LED\\d*).*?(\u7EA2\u8272|\u7EFF\u8272|\u84DD\u8272|\u767D\u8272|yellow|red|green|blue|\\d+mm)/gi, type: 'led' },\r\n      \r\n      // IC\u6A21\u5F0F - \u6269\u5C55\u5E38\u89C1\u578B\u53F7\r\n      { pattern: /(U\\d+).*?(LM\\d+|NE\\d+|74\\w+|ATmega\\w+|STM32|ESP32|AD\\d+|OPA\\d+|TL\\d+|MC\\d+)/gi, type: 'ic' },\r\n      { pattern: /(\u82AF\u7247|IC|\u8FD0\u653E|MCU).*?(LM\\d+|NE\\d+|74\\w+|ATmega\\w+|STM32|ESP32|AD\\d+|OPA\\d+|TL\\d+)/gi, type: 'ic' },\r\n      \r\n      // \u6676\u4F53\u7BA1\u6A21\u5F0F\r\n      { pattern: /(Q\\d+|M\\d+).*?(2N\\d+|BC\\d+|MOSFET|IRLZ\\d+|IRF\\d+|BSS\\d+)/gi, type: 'transistor' },\r\n      { pattern: /(MOSFET|\u6676\u4F53\u7BA1|\u4E09\u6781\u7BA1).*?(2N\\d+|BC\\d+|IRLZ\\d+|IRF\\d+|BSS\\d+)/gi, type: 'transistor' },\r\n      \r\n      // \u4E8C\u6781\u7BA1\r\n      { pattern: /(D\\d+).*?(1N\\d+|BAT\\d+|\u8096\u7279\u57FA|Schottky)/gi, type: 'diode' },\r\n      \r\n      // \u7535\u611F\r\n      { pattern: /(L\\d+).*?(\\d+[uUnNmM]?H)/gi, type: 'inductor' }\r\n    ]\r\n    \r\n    let itemId = 1\r\n    const foundComponents = new Set() // \u907F\u514D\u91CD\u590D\r\n    \r\n    componentPatterns.forEach(({ pattern, type }) => {\r\n      let match\r\n      while ((match = pattern.exec(response)) !== null) {\r\n        const [fullMatch, reference, value] = match\r\n        const componentKey = `${reference || type}_${value}`\r\n        \r\n        if (!foundComponents.has(componentKey)) {\r\n          foundComponents.add(componentKey)\r\n          \r\n          // \u5C1D\u8BD5\u4ECE\u4E0A\u4E0B\u6587\u4E2D\u63D0\u53D6\u66F4\u591A\u4FE1\u606F\r\n          const contextMatch = response.slice(Math.max(0, match.index - 100), match.index + 100)\r\n          const modelMatch = contextMatch.match(/(\u578B\u53F7|model|part).*?([A-Z0-9\\-_]+)/i)\r\n          const packageMatch = contextMatch.match(/(\u5C01\u88C5|package).*?(SOT|DIP|SOIC|TSSOP|QFN|BGA|\\d+mm)/i)\r\n          \r\n          items.push({\r\n            component: reference || `${type.toUpperCase()}${itemId}`,\r\n            quantity: 1,\r\n            value: value,\r\n            model: modelMatch ? modelMatch[2] : this.getDefaultModel(type),\r\n            package: packageMatch ? packageMatch[2] : this.getDefaultPackage(reference || type),\r\n            price: this.getComponentPrice(type),\r\n            description: this.getComponentDescription(type, value)\r\n          })\r\n          itemId++\r\n        }\r\n      }\r\n    })\r\n    \r\n    if (items.length > 0) {\r\n      const totalCost = items.reduce((sum, item) => sum + item.price * item.quantity, 0)\r\n      console.log('\u667A\u80FD\u63D0\u53D6BOM\u6210\u529F\uFF0C\u9879\u76EE\u6570:', items.length)\r\n      return { items, totalCost }\r\n    }\r\n    \r\n    console.log('\u65E0\u6CD5\u63D0\u53D6\u4EFB\u4F55BOM\u6570\u636E')\r\n    return null\r\n  }\r\n\r\n  // \u83B7\u53D6\u9ED8\u8BA4\u578B\u53F7\r\n  private getDefaultModel(type: string): string {\r\n    const models = {\r\n      'resistor': '1/4W 5%',\r\n      'capacitor': 'X7R',\r\n      'led': 'Standard LED',\r\n      'ic': 'DIP Package',\r\n      'transistor': 'TO-220',\r\n      'diode': '1N4148',\r\n      'inductor': 'Wirewound'\r\n    }\r\n    return models[type] || 'Standard'\r\n  }\r\n\r\n  // \u83B7\u53D6\u5143\u4EF6\u63CF\u8FF0\r\n  private getComponentDescription(type: string, value: string): string {\r\n    const descriptions = {\r\n      'resistor': `${value} \u7CBE\u5BC6\u7535\u963B`,\r\n      'capacitor': `${value} \u9676\u74F7\u7535\u5BB9`,\r\n      'led': `${value} LED\u6307\u793A\u706F`,\r\n      'ic': `${value} \u96C6\u6210\u7535\u8DEF`,\r\n      'transistor': `${value} \u529F\u7387\u6676\u4F53\u7BA1`,\r\n      'diode': `${value} \u6574\u6D41\u4E8C\u6781\u7BA1`,\r\n      'inductor': `${value} \u7535\u611F`\r\n    }\r\n    return descriptions[type] || `${value} \u7535\u5B50\u5143\u4EF6`\r\n  }\r\n}\r\n", "import { Hono } from 'hono'\nimport { cors } from 'hono/cors'\nimport { logger } from 'hono/logger'\n\n// AI\u670D\u52A1\u9002\u914D\u5668\nimport { AIService } from './services/AIService'\n\nconst app = new Hono()\n\n// \u4E2D\u95F4\u4EF6\napp.use('*', logger())\napp.use('*', cors({\n  origin: [\n    'https://circuitai.pages.dev', \n    'https://*.circuitai.pages.dev',\n    'https://www.circuitai.top',\n    'https://circuitai.top',\n    'https://main.circuitai.pages.dev',\n    'http://localhost:3002',\n    'http://localhost:3000'\n  ],\n  allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowHeaders: ['Content-Type', 'Authorization'],\n}))\n\n// \u5065\u5EB7\u68C0\u67E5\napp.get('/api/health', (c) => {\n  return c.json({\n    success: true,\n    message: '\u670D\u52A1\u8FD0\u884C\u6B63\u5E38',\n    data: {\n      status: 'ok',\n      timestamp: new Date().toISOString(),\n      environment: 'cloudflare-workers'\n    }\n  })\n})\n\n// AI\u804A\u5929\u63A5\u53E3\napp.post('/api/ai/chat', async (c) => {\n  try {\n    console.log('\u6536\u5230AI\u804A\u5929\u8BF7\u6C42')\n    const requestData = await c.req.json()\n    console.log('\u8BF7\u6C42\u6570\u636E\u8BE6\u60C5:', { \n      message: requestData.message?.substring(0, 100) + '...', \n      provider: requestData.provider,\n      hasApiConfig: !!requestData.apiConfig,\n      conversationId: requestData.conversation_id,\n      apiConfigKeys: requestData.apiConfig ? Object.keys(requestData.apiConfig) : 'N/A'\n    })\n    \n    const { message, conversation_id, provider, apiConfig } = requestData\n    \n    if (!message || !provider) {\n      throw new Error('\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570: message \u6216 provider')\n    }\n    \n    // \u5BF9custom provider\u8FDB\u884C\u7279\u6B8A\u9A8C\u8BC1\n    if (provider === 'custom') {\n      console.log('Custom provider\u914D\u7F6E\u9A8C\u8BC1:', {\n        hasApiConfig: !!apiConfig,\n        configKeys: apiConfig ? Object.keys(apiConfig) : 'N/A',\n        hasApiUrl: !!(apiConfig?.apiUrl),\n        hasApiKey: !!(apiConfig?.apiKey),\n        hasModel: !!(apiConfig?.model)\n      })\n      \n      if (!apiConfig || !apiConfig.apiUrl || !apiConfig.apiKey || !apiConfig.model) {\n        throw new Error('Custom provider\u9700\u8981\u5B8C\u6574\u7684API\u914D\u7F6E: apiUrl, apiKey, model')\n      }\n    }\n    \n    // \u521D\u59CB\u5316AI\u670D\u52A1\n    console.log('\u521D\u59CB\u5316AI\u670D\u52A1...')\n    const aiService = new AIService()\n    \n    // \u5904\u7406\u804A\u5929\u8BF7\u6C42\n    console.log('\u5F00\u59CB\u5904\u7406\u804A\u5929\u8BF7\u6C42\uFF0Cprovider:', provider)\n    const response = await aiService.chat(message, conversation_id, provider, apiConfig)\n    console.log('\u804A\u5929\u5904\u7406\u5B8C\u6210\uFF0C\u54CD\u5E94\u7C7B\u578B:', typeof response, '\u54CD\u5E94\u952E:', Object.keys(response || {}))\n    \n    return c.json({\n      success: true,\n      data: response\n    })\n  } catch (error: any) {\n    console.error('AI Chat error\u8BE6\u7EC6\u4FE1\u606F:', {\n      message: error.message,\n      stack: error.stack,\n      name: error.name,\n      provider: error.provider || 'unknown'\n    })\n    return c.json({\n      success: false,\n      error: `AI\u670D\u52A1\u9519\u8BEF: ${error.message}`\n    }, 500)\n  }\n})\n\n// API\u914D\u7F6E\u6D4B\u8BD5\napp.post('/api/ai/test-config', async (c) => {\n  try {\n    const config = await c.req.json()\n    \n    // \u6D4B\u8BD5API\u914D\u7F6E\n    const aiService = new AIService()\n    const result = await aiService.testConfig(config)\n    \n    return c.json({\n      success: true,\n      data: result\n    })\n  } catch (error) {\n    console.error('API Test error:', error)\n    return c.json({\n      success: false,\n      error: `\u8FDE\u63A5\u5931\u8D25: ${error.message}`\n    }, 400)\n  }\n})\n\n// 404\u5904\u7406\napp.notFound((c) => {\n  return c.json({\n    success: false,\n    error: 'Not found',\n    path: c.req.path\n  }, 404)\n})\n\nexport default app\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"E:\\\\cursor\\\\Github\\\\CirtcuitAI\\\\workers\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"E:\\\\cursor\\\\Github\\\\CirtcuitAI\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"E:\\\\cursor\\\\Github\\\\CirtcuitAI\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"E:\\\\cursor\\\\Github\\\\CirtcuitAI\\\\workers\\\\src\\\\index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"E:\\\\cursor\\\\Github\\\\CirtcuitAI\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-x5sFVe\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"E:\\\\cursor\\\\Github\\\\CirtcuitAI\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"E:\\\\cursor\\\\Github\\\\CirtcuitAI\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-x5sFVe\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"E:\\\\cursor\\\\Github\\\\CirtcuitAI\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-x5sFVe\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["raw", "app", "Node", "Node", "Hono", "Hono"]
}
