version: '3.8'

services:
  # 前端服务
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - circuitai-network

  # 后端服务
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://circuitai:password@postgres:5432/circuitai
      - REDIS_URL=redis://redis:6379
    env_file:
      - ../backend/.env
    depends_on:
      - postgres
      - redis
    volumes:
      - ../backend/logs:/app/logs
    networks:
      - circuitai-network

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=circuitai
      - POSTGRES_USER=circuitai
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - circuitai-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - circuitai-network

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # SSL证书目录
    depends_on:
      - frontend
      - backend
    networks:
      - circuitai-network

volumes:
  postgres_data:
  redis_data:

networks:
  circuitai-network:
    driver: bridge