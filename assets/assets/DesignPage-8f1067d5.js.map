{"version":3,"mappings":"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","names":["getApiBaseUrl","hostname","api","axios","aiApi","config","error","response","endTime","duration","_a","status","data","message","aiAPI","request","axiosError","errorMsg","_c","_b","_d","_e","_g","_f","model","apiKey","StatusIndicator","isConfigured","t","useI18n","jsx","Tooltip","Badge","CheckCircleOutlined","ExclamationCircleOutlined","priorityOptions","RequirementCardSidebar","visible","value","onChange","onClose","onGenerateDraft","risks","changes","form","Form","handleValuesChange","_","allValues","suggestions","useMemo","next","jsxs","Drawer","Space","Button","Input","Select","Divider","v","k","Tag","List","item","DEFAULT_API_CONFIG","getActiveAPIConfig","userConfig","getActualAPIConfig","saveUserAPIConfig","EnhancedAPISettings","lazy","TextArea","ChatPanel","onCircuitGenerated","onBomGenerated","onChatHistory","initialMessages","messages","setMessages","useState","useEffect","inputMessage","setInputMessage","isLoading","setIsLoading","selectedProvider","setSelectedProvider","showSettings","setShowSettings","apiConfigured","setApiConfigured","isTyping","setIsTyping","thinkingProgress","setThinkingProgress","thinkingSteps","setThinkingSteps","currentThinkingIndex","setCurrentThinkingIndex","quickActions","setQuickActions","currentApiConfig","setCurrentApiConfig","messagesEndRef","useRef","textAreaRef","conversationId","sidebarVisible","setSidebarVisible","requirements","setRequirements","setRisks","setChanges","availableProviders","scrollToBottom","savedReq","savedRisks","savedChanges","extractFromText","text","lower","result","inputMatch","anyV","cc","cv","gain","prios","accSection","parts","eff","ripple","cost","autoExtractRequirementsFromConversation","lastUserMessages","m","merged","extracted","prev","updateRequirementsFromAssistant","assistantText","changesList","key","newVal","oldVal","newRisks","handleRequirementsChange","diffs","prevChanges","parseThinkingProcess","content","thinkingMatch","thinking","step","mainContent","displayThinkingSteps","steps","i","resolve","handleSendMessage","userMessage","actualConfig","apiConfig","responseContent","assistantMessage","_j","_i","_h","_k","_l","errorContent","shouldShowApiSettings","errorMessage","err","_m","_n","_o","_p","_r","_q","handleKeyPress","e","clearChat","exportChat","chatText","msg","blob","url","a","handleAPIConfig","fullConfig","formatMessage","buildDraftPromptFromRequirements","req","lines","handleGenerateDraft","nextRisks","draftPrompt","r","RobotOutlined","p","DownloadOutlined","ClearOutlined","SettingOutlined","Avatar","UserOutlined","index","Spin","action","SendOutlined","Suspense","CircuitViewer","circuitData","loading","activeTab","setActiveTab","fontSize","setFontSize","darkMode","setDarkMode","showLineNumbers","setShowLineNumbers","copyToClipboard","downloadAsText","filename","renderASCIICircuit","ZoomOutOutlined","ZoomInOutlined","CopyOutlined","Empty","renderComponentsList","getComponentParameters","componentType","prop","propName","compType","component","parameters","param","paramIndex","renderConnectionsList","connection","Card","Tabs","CircuitRenderer","__publicField","symbol","symbolId","category","asciiDiagram","components","wires","wireIndex","line","lineIndex","componentMatches","match","matchIndex","componentName","x","y","wireMatches","endX","c","name","valuePatterns","pattern","bracketMatch","comp1","comp2","wire","layout","options","bounds","gridSize","showGrid","theme","scale","svg","_bounds","grid","path","position","rotation","properties","showLabels","powerComponents","passiveComponents","semiconductorComponents","analogComponents","otherComponents","layoutComponents","currentY","leftMargin","componentSpacing","rowHeight","comp","rowComponents","maxPerRow","maxX","maxY","vccComponents","gndComponents","resistors","leds","vcc","resistor","led","gnd","svgString","width","height","reject","canvas","ctx","img","circuitRenderer","VisualCircuitViewer","editable","svgRef","setScale","setLayout","renderOptions","setRenderOptions","isFullscreen","setIsFullscreen","parsedLayout","getComponentType","autoLayout","exampleLayout","compName","handleZoomIn","newScale","handleZoomOut","handleThemeChange","handleGridToggle","handleGridSizeChange","handleLabelsToggle","handlePinNumbersToggle","showPinNumbers","handleExportSVG","handleExportPNG","handleFullscreen","renderSVGContent","BgColorsOutlined","AppstoreOutlined","BorderOutlined","TagOutlined","FullscreenOutlined","Slider","Switch","EditOutlined","BOMTable","bomData","editingKey","setEditingKey","showSummary","setShowSummary","groupByType","setGroupByType","isEditing","record","edit","cancel","save","exportToCsv","csvContent","exportToPdf","openPurchaseLink","calculateTotal","total","getComponentStats","stats","type","renderSummaryCard","totalCost","totalComponents","sum","count","columns","__","references","ref","InputNumber","subtotal","SaveOutlined","ShoppingCartOutlined","Fragment","Table","range","ProjectService","project","projects","newProject","id","updates","updatedProject","filteredProjects","dataStr","file","reader","projectData","query","lowerQuery","tag","totalProjects","totalCircuits","totalBOMs","tagCounts","mostUsedTags","b","daysToKeep","cutoffDate","projectsToKeep","deletedCount","projectService","Search","ProjectManager","onLoadProject","currentProjectData","setProjects","setFilteredProjects","searchQuery","setSearchQuery","showSaveModal","setShowSaveModal","saveForm","setSaveForm","setLoading","loadProjects","filtered","projectList","handleSaveProject","handleLoadProject","handleDeleteProject","projectId","handleExportProject","handleImportProject","formatDate","date","getProjectProgress","progress","Modal","ProjectOutlined","Upload","UploadOutlined","SearchOutlined","FolderOpenOutlined","Popconfirm","DeleteOutlined","Progress","CalendarOutlined","tags","Sider","Content","Layout","DesignPage","navigate","useNavigate","setCircuitData","setBomData","isGenerating","setIsGenerating","showProjectManager","setShowProjectManager","chatHistory","setChatHistory","currentProject","setCurrentProject","handleCircuitGenerated","handleBomGenerated","convertedItems","handleChatHistory","history","getCurrentProjectData","HomeOutlined","AdSense","ADSENSE_CONFIG","Row","Col","FileTextOutlined"],"sources":["../../src/services/api.ts","../../src/components/common/StatusIndicator.tsx","../../src/components/ai/RequirementCardSidebar.tsx","../../src/config/defaultAPI.ts","../../src/components/ai/ChatPanel.tsx","../../src/components/circuit/CircuitViewer.tsx","../../src/services/circuitRenderer.ts","../../src/components/circuit/VisualCircuitViewer.tsx","../../src/components/circuit/BOMTable.tsx","../../src/services/projectService.ts","../../src/components/project/ProjectManager.tsx","../../src/pages/Design/DesignPage.tsx"],"sourcesContent":["import axios, { AxiosResponse } from 'axios'\nimport { message } from 'antd'\nimport { \n  ChatRequest, \n  ChatResponse, \n  AIModel, \n  ApiTestRequest, \n  ApiTestResponse,\n  ComponentInfo \n} from '../types'\n\n// 动态获取API基础URL\nconst getApiBaseUrl = () => {\n  // 强制使用Workers API地址，无论什么环境\n  if (typeof window !== 'undefined') {\n    // 浏览器环境\n    const hostname = window.location.hostname;\n    \n    // 本地开发环境\n    if (hostname === 'localhost' || hostname === '127.0.0.1') {\n      return 'http://localhost:3003/api';\n    }\n    \n    // 生产环境（包括Pages和其他域名）\n    return 'https://circuitai-api.peyoba660703.workers.dev/api';\n  }\n  \n  // 服务端渲染环境，默认使用Workers地址\n  return 'https://circuitai-api.peyoba660703.workers.dev/api';\n}\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: getApiBaseUrl(),\n  timeout: 60000, // 1分钟超时，更合理\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// 创建AI专用的axios实例，支持更长的超时时间\nconst aiApi = axios.create({\n  baseURL: getApiBaseUrl(),\n  timeout: 120000, // AI请求2分钟超时\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// AI专用请求拦截器\naiApi.interceptors.request.use(\n  (config) => { \n    // 添加请求时间戳\n    config.metadata = { startTime: new Date().getTime() }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  }\n)\n\n// AI专用响应拦截器，增强错误处理\naiApi.interceptors.response.use(\n  (response: AxiosResponse) => {\n    // 计算请求耗时\n    const endTime = new Date().getTime()\n    const duration = endTime - (response.config.metadata?.startTime || endTime)\n    console.log(`AI API请求耗时: ${duration}ms`)\n    \n    return response\n  },\n  (error) => {\n    // AI专用错误处理\n    const { response } = error\n    \n    if (response) {\n      const { status, data } = response\n      \n      // 不在这里显示message，让上层处理\n      console.error(`AI API错误 [${status}]:`, data?.error || response.statusText)\n    } else if (error.code === 'ECONNABORTED') {\n      console.error('AI API请求超时')\n    } else {\n      console.error('AI API网络错误:', error.message)\n    }\n    \n    return Promise.reject(error)\n  }\n)\n\n// 请求拦截器\napi.interceptors.request.use(\n  (config) => { \n    // 添加请求时间戳\n    config.metadata = { startTime: new Date().getTime() }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\napi.interceptors.response.use(\n  (response: AxiosResponse) => {\n    // 计算请求耗时\n    const endTime = new Date().getTime()\n    const duration = endTime - (response.config.metadata?.startTime || endTime)\n    console.log(`API请求耗时: ${duration}ms`)\n    \n    return response\n  },\n  (error) => {\n    // 统一错误处理\n    const { response } = error\n    \n    if (response) {\n      const { status, data } = response\n      \n      switch (status) {\n        case 400:\n          message.error(data.error || '请求参数错误')\n          break\n        case 401:\n          message.error('未授权访问，请先登录')\n          break\n        case 403:\n          message.error('访问被拒绝')\n          break\n        case 404:\n          message.error('请求的资源不存在')\n          break\n        case 429:\n          message.error('请求过于频繁，请稍后再试')\n          break\n        case 500:\n          message.error(data.error || '服务器内部错误')\n          break\n        default:\n          message.error(data.error || `请求失败 (${status})`)\n      }\n    } else if (error.code === 'ECONNABORTED') {\n      message.error('请求超时，请检查网络连接')\n    } else {\n      message.error('网络错误，请检查网络连接')\n    }\n    \n    return Promise.reject(error)\n  }\n)\n\n// AI对话API\nexport const aiAPI = {\n  // 发送聊天消息，使用AI专用实例和增强错误处理\n  async chat(request: ChatRequest): Promise<ChatResponse> {\n    try {\n      const response = await aiApi.post<ChatResponse>('/ai/chat', {\n        message: request.message,\n        conversation_id: request.conversationId,\n        provider: request.provider || 'openai',\n        apiConfig: request.apiConfig\n      })\n      return response.data\n    } catch (error: unknown) {\n      // 增强错误处理，提供更友好的错误消息\n      const axiosError = error as { code?: string; response?: { status?: number; data?: { error?: string } } }\n      \n      if (axiosError.code === 'ECONNABORTED') {\n        throw new Error('AI响应超时，请稍后重试或检查网络连接')\n      } else if (axiosError.response?.status === 500) {\n        const errorMsg = axiosError.response?.data?.error || '服务器内部错误'\n        throw new Error(`AI服务暂时不可用：${errorMsg}`)\n      } else if (axiosError.response?.status === 429) {\n        throw new Error('请求过于频繁，请稍等片刻后再试')\n      } else if (axiosError.response?.status && axiosError.response.status >= 400 && axiosError.response.status < 500) {\n        const errorMsg = axiosError.response?.data?.error || '请求参数错误'\n        throw new Error(`${errorMsg}`)\n      } else {\n        throw new Error('网络连接失败，请检查网络或稍后重试')\n      }\n    }\n  },\n\n\n\n  // 获取可用模型列表\n  async getModels(): Promise<AIModel[]> {\n    const response = await api.get<{ available_models: AIModel[] }>('/ai/models')\n    return response.data.available_models\n  },\n\n  // 测试API配置\n  async testApiConfig(config: ApiTestRequest): Promise<ApiTestResponse> {\n    try {\n      const response = await api.post<ApiTestResponse>('/ai/test-config', config)\n      return response.data\n    } catch (error) {\n      return {\n        success: false,\n        error: '测试失败，请检查配置'\n      }\n    }\n  },\n\n  // 获取支持的提供商\n  async getProviders(): Promise<Array<{ name: string, key: string, available: boolean }>> {\n    try {\n      const response = await api.get<{ success: boolean, data: Array<{ name: string, key: string, available: boolean }> }>('/ai/providers')\n      return response.data.data || []\n    } catch (error) {\n      return []\n    }\n  },\n\n  // 验证API密钥 (保持向后兼容)\n  async validateApiKey(model: string, apiKey: string): Promise<boolean> {\n    try {\n      const response = await this.testApiConfig({\n        provider: model,\n        apiKey,\n        apiUrl: '',\n        model: 'test'\n      })\n      return response.success\n    } catch (error) {\n      return false\n    }\n  }\n}\n\n// 电路设计API\nexport const circuitAPI = {\n  // 生成电路\n  async generateCircuit(requirements: {\n    description: string\n    type?: string\n    voltage?: number\n    current?: number\n  }): Promise<{\n    ascii: string\n    description: string\n    components: Array<{ name: string, type: string, value?: string }>\n  }> {\n    const response = await api.post('/circuit/generate', requirements)\n    return response.data\n  },\n\n  // 获取元件库\n  async getComponents(): Promise<ComponentInfo[]> {\n    const response = await api.get<{ components: ComponentInfo[] }>('/circuit/components')\n    return response.data.components\n  },\n\n  // 验证电路\n  async validateCircuit(circuitData: {\n    ascii: string\n    components: Array<{ name: string, type: string }>\n  }): Promise<{ isValid: boolean, issues: string[] }> {\n    const response = await api.post('/circuit/validate', circuitData)\n    return response.data\n  },\n\n  // 优化电路\n  async optimizeCircuit(circuitData: {\n    ascii: string\n    components: Array<{ name: string, type: string }>\n  }, aspect: string): Promise<{ suggestions: string[] }> {\n    const response = await api.post('/circuit/optimize', { circuitData, aspect })\n    return response.data\n  }\n}\n\n// 用户API\nexport const userAPI = {\n  // 获取用户资料\n  async getProfile(): Promise<{\n    id: string\n    name: string\n    email: string\n    preferences: Record<string, unknown>\n  }> {\n    const response = await api.get('/user/profile')\n    return response.data\n  },\n\n  // 更新用户资料\n  async updateProfile(profile: {\n    name?: string\n    email?: string\n    preferences?: Record<string, unknown>\n  }): Promise<{\n    id: string\n    name: string\n    email: string\n    preferences: Record<string, unknown>\n  }> {\n    const response = await api.put('/user/profile', profile)\n    return response.data\n  },\n\n  // 获取用户设计历史\n  async getDesignHistory(): Promise<Array<{\n    id: string\n    name: string\n    description?: string\n    createdAt: string\n    updatedAt: string\n  }>> {\n    const response = await api.get('/user/designs')\n    return response.data\n  },\n\n  // 保存设计\n  async saveDesign(design: {\n    name: string\n    description?: string\n    circuitData: Record<string, unknown>\n    bomData?: Record<string, unknown>\n  }): Promise<{\n    id: string\n    name: string\n    createdAt: string\n  }> {\n    const response = await api.post('/user/designs', design)\n    return response.data\n  }\n}\n\n// 工具函数\nexport const utils = {\n  // 健康检查\n  async healthCheck(): Promise<boolean> {\n    try {\n      const response = await api.get('/health')\n      return response.status === 200 && response.data.status === 'ok'\n    } catch (error) {\n      return false\n    }\n  },\n\n  // 获取API统计信息\n  async getStats(): Promise<{\n    totalRequests: number\n    totalTokens: number\n    avgResponseTime: number\n  }> {\n    const response = await api.get('/stats')\n    return response.data\n  }\n}\n\n// 导出默认实例\nexport default api\n\n// 为兼容性导出类型\ndeclare module 'axios' {\n  interface AxiosRequestConfig {\n    metadata?: {\n      startTime: number\n    }\n  }\n}","import { Badge, Tooltip } from 'antd'\nimport { useI18n } from '../../i18n/I18nProvider'\nimport { CheckCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\n\ninterface StatusIndicatorProps {\n  model: string\n  isConfigured: boolean\n}\n\nconst StatusIndicator = ({ model, isConfigured }: StatusIndicatorProps) => {\n  const { t } = useI18n()\n  if (isConfigured) {\n    return (\n      <Tooltip title={t('settings_title')}>\n        <Badge \n          status=\"success\" \n          text={<span><CheckCircleOutlined style={{ marginRight: 4 }} />{`${model} (Configured)`}</span>}\n        />\n      </Tooltip>\n    )\n  }\n\n  return (\n    <Tooltip title={t('api_settings')}>\n      <Badge \n        status=\"warning\" \n        text={<span><ExclamationCircleOutlined style={{ marginRight: 4 }} />{`${model} (Mock)`}</span>}\n      />\n    </Tooltip>\n  )\n}\n\nexport default StatusIndicator","import React, { useMemo } from 'react'\r\nimport { Drawer, Form, Input, Select, Button, Divider, Space, Tag, List } from 'antd'\r\nimport { useI18n } from '../../i18n/I18nProvider'\r\n\r\nexport interface Requirements {\r\n  type: string\r\n  inputPower: string\r\n  outputTarget: string\r\n  load: string\r\n  priorities: string[]\r\n  environment: string\r\n  preferences: string\r\n  acceptanceCriteria: string\r\n}\r\n\r\ninterface RequirementCardSidebarProps {\r\n  visible: boolean\r\n  value: Requirements\r\n  onChange: (next: Requirements) => void\r\n  onClose: () => void\r\n  onGenerateDraft: () => void\r\n  risks?: string[]\r\n  changes?: string[]\r\n}\r\n\r\nconst priorityOptions = [\r\n  { label: '成本', value: '成本' },\r\n  { label: '体积', value: '体积' },\r\n  { label: '效率', value: '效率' },\r\n  { label: '噪声', value: '噪声' },\r\n  { label: '精度', value: '精度' }\r\n]\r\n\r\nconst RequirementCardSidebar: React.FC<RequirementCardSidebarProps> = ({ visible, value, onChange, onClose, onGenerateDraft, risks = [], changes = [] }) => {\r\n  const [form] = Form.useForm<Requirements>()\r\n  const { t } = useI18n()\r\n\r\n  const handleValuesChange = (_: Partial<Requirements>, allValues: Requirements) => {\r\n    onChange(allValues)\r\n  }\r\n\r\n  const suggestions = useMemo(() => {\r\n    const next: string[] = []\r\n    if (!value.type) next.push('你要做哪类电路？例如：电源稳压/LED驱动/放大器/音频功放')\r\n    if (!value.inputPower) next.push('输入电源是多少？例如：5V/12V/电池3.7V（范围也可以）')\r\n    if (!value.outputTarget) next.push('目标输出是什么？例如：恒压5V/恒流10mA/增益20dB')\r\n    if (!value.load) next.push('负载是什么？例如：单颗LED/8Ω喇叭/传感器输入，典型参数是多少？')\r\n    if (!value.priorities || value.priorities.length === 0) next.push('以下哪个更重要：成本/体积/效率/噪声/精度（选1-2项）')\r\n    if (!value.environment) next.push('工作环境与安规要求？例如：室内/户外/EMC/是否电池设备')\r\n    if (!value.preferences) next.push('元件偏好或禁用？例如：贴片0805/禁用某型号/偏好常见货源')\r\n    if (!value.acceptanceCriteria) next.push('验收标准是？例如：纹波≤X、效率≥Y、成本≤Z')\r\n    return next.slice(0, 5)\r\n  }, [value])\r\n\r\n  return (\r\n    <Drawer\r\n      title={t('req_card_title')}\r\n      placement=\"right\"\r\n      width={420}\r\n      onClose={onClose}\r\n      open={visible}\r\n      destroyOnClose\r\n      extra={\r\n        <Space>\r\n          <Button onClick={() => form.resetFields()}>{t('reset')}</Button>\r\n          <Button type=\"primary\" onClick={onGenerateDraft}>{t('generate_draft')}</Button>\r\n        </Space>\r\n      }\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        initialValues={value}\r\n        onValuesChange={handleValuesChange}\r\n      >\r\n        <Form.Item label={t('field_circuit_type')} name=\"type\">\r\n          <Input placeholder=\"例如：LED驱动 / 电源稳压 / 放大器\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item label={t('field_input_power')} name=\"inputPower\">\r\n          <Input placeholder=\"例如：5V / 12V / 电池3.7V\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item label={t('field_output_target')} name=\"outputTarget\">\r\n          <Input placeholder=\"例如：恒流10mA / 恒压5V / 增益20dB\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item label={t('field_load')} name=\"load\">\r\n          <Input placeholder=\"例如：单颗LED / 扬声器8Ω / 传感器输入\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item label={t('field_priorities')} name=\"priorities\">\r\n          <Select mode=\"multiple\" options={priorityOptions} placeholder=\"选择最重要的1-2项\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item label={t('field_environment')} name=\"environment\">\r\n          <Input.TextArea rows={2} placeholder=\"例如：室温/户外/EMC要求/电池设备\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item label={t('field_preferences')} name=\"preferences\">\r\n          <Input.TextArea rows={2} placeholder=\"例如：优先贴片0805、禁用某型号等\" />\r\n        </Form.Item>\r\n\r\n        <Divider />\r\n\r\n        <Form.Item label={t('field_acceptance_criteria')} name=\"acceptanceCriteria\">\r\n          <Input.TextArea rows={3} placeholder=\"例如：纹波≤X，效率≥Y，成本≤Z\" />\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <Divider />\r\n      <div className=\"text-xs text-gray-500\">\r\n        <span>{t('confirmed_items')}：</span>\r\n        <Space size={[4, 8]} wrap>\r\n          {Object.entries(value).filter(([, v]) => (Array.isArray(v) ? v.length > 0 : !!v)).map(([k]) => (\r\n            <Tag key={k} color=\"blue\">{k}</Tag>\r\n          ))}\r\n        </Space>\r\n      </div>\r\n\r\n      <Divider />\r\n      <div>\r\n        <div className=\"text-sm text-gray-700 mb-2\">{t('suggestions_title')}</div>\r\n        <List\r\n          size=\"small\"\r\n          dataSource={suggestions}\r\n          locale={{ emptyText: '看起来信息比较完整，可以直接生成草案。' }}\r\n          renderItem={(item) => <List.Item style={{ padding: '4px 0' }}>• {item}</List.Item>}\r\n        />\r\n      </div>\r\n\r\n      <Divider />\r\n      <div>\r\n        <div className=\"text-sm text-gray-700 mb-2\">{t('risks_title')}</div>\r\n        <List\r\n          size=\"small\"\r\n          dataSource={risks}\r\n          locale={{ emptyText: '暂无显著风险。' }}\r\n          renderItem={(item) => <List.Item style={{ padding: '4px 0' }}>• {item}</List.Item>}\r\n        />\r\n      </div>\r\n\r\n      <Divider />\r\n      <div>\r\n        <div className=\"text-sm text-gray-700 mb-2\">{t('changes_title')}</div>\r\n        <List\r\n          size=\"small\"\r\n          dataSource={changes}\r\n          locale={{ emptyText: '暂无变更记录。' }}\r\n          renderItem={(item) => <List.Item style={{ padding: '4px 0' }}>• {item}</List.Item>}\r\n        />\r\n      </div>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default RequirementCardSidebar\r\n","// 前端默认API配置\r\n// 前端只保存显示信息，实际配置由后端处理\r\n\r\nexport interface DefaultAPIConfig {\r\n  provider: string\r\n  apiKey: string\r\n  apiUrl: string\r\n  model: string\r\n  maxTokens?: number\r\n  temperature?: number\r\n  displayName: string\r\n  description: string\r\n  isDefault?: boolean\r\n  requestFormat?: 'openai' | 'claude' | 'custom'\r\n  responseFormat?: 'openai' | 'claude' | 'custom'\r\n  customHeaders?: Record<string, string>\r\n}\r\n\r\n// 前端显示的默认AI配置（不包含真实API密钥）\r\nexport const DEFAULT_API_CONFIG: DefaultAPIConfig = {\r\n  provider: 'default', // 特殊标识，后端会识别并使用内置配置\r\n  apiKey: '', // 前端不保存实际密钥\r\n  apiUrl: '', // 前端不保存实际URL\r\n  model: '智能AI助手',\r\n  maxTokens: 4000,\r\n  temperature: 0.7,\r\n  displayName: '智能AI助手',\r\n  description: '系统内置AI，开箱即用',\r\n  isDefault: true\r\n}\r\n\r\n// 检查是否有用户自定义的API配置\r\nexport const hasUserAPIConfig = (): boolean => {\r\n  try {\r\n    const userConfig = localStorage.getItem('circuitsai_api_config')\r\n    if (!userConfig) return false\r\n    \r\n    const config = JSON.parse(userConfig)\r\n    // 如果用户配置的是默认配置，认为没有用户配置\r\n    return config.provider !== 'default' && !!config.apiKey\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n// 获取当前激活的API配置\r\nexport const getActiveAPIConfig = (): DefaultAPIConfig => {\r\n  try {\r\n    const userConfig = localStorage.getItem('circuitsai_api_config')\r\n    if (userConfig) {\r\n      const config = JSON.parse(userConfig)\r\n      // 如果用户选择的是默认配置，返回默认配置\r\n      if (config.provider === 'default' || !config.apiKey) {\r\n        return DEFAULT_API_CONFIG\r\n      }\r\n      return config\r\n    }\r\n  } catch (error) {\r\n    console.warn('Failed to load user API config, using default:', error)\r\n  }\r\n  \r\n  return DEFAULT_API_CONFIG\r\n}\r\n\r\n// 获取用于发送到后端的API配置\r\nexport const getActualAPIConfig = (config: DefaultAPIConfig): DefaultAPIConfig => {\r\n  if (config.provider === 'default') {\r\n    // 对于默认配置，只发送provider标识，后端会使用内置配置\r\n    return {\r\n      provider: 'default',\r\n      model: 'default',\r\n      apiKey: '', // 后端会忽略\r\n      apiUrl: '', // 后端会忽略\r\n      displayName: config.displayName,\r\n      description: config.description,\r\n      maxTokens: config.maxTokens,\r\n      temperature: config.temperature,\r\n      requestFormat: config.requestFormat,\r\n      responseFormat: config.responseFormat,\r\n      customHeaders: config.customHeaders\r\n    }\r\n  }\r\n  // 对于用户配置，发送完整配置\r\n  return config\r\n}\r\n\r\n// 保存用户自定义API配置\r\nexport const saveUserAPIConfig = (config: DefaultAPIConfig): void => {\r\n  try {\r\n    localStorage.setItem('circuitsai_api_config', JSON.stringify(config))\r\n  } catch (error) {\r\n    console.error('Failed to save API config:', error)\r\n  }\r\n}\r\n\r\n// 切换到默认AI\r\nexport const useDefaultAPI = (): void => {\r\n  saveUserAPIConfig(DEFAULT_API_CONFIG)\r\n}\r\n\r\n// 清除用户配置，恢复到默认配置\r\nexport const resetToDefaultAPI = (): void => {\r\n  saveUserAPIConfig(DEFAULT_API_CONFIG)\r\n}","import { useState, useRef, useEffect, lazy, Suspense } from 'react'\nimport { Input, Button, Avatar, message, Spin, Select } from 'antd'\nimport { SendOutlined, UserOutlined, RobotOutlined, ClearOutlined, DownloadOutlined, SettingOutlined } from '@ant-design/icons'\nimport { ChatMessage } from '../../types'\nimport { aiAPI } from '../../services/api'\nimport StatusIndicator from '../common/StatusIndicator'\nimport RequirementCardSidebar, { Requirements } from './RequirementCardSidebar'\nimport { useI18n } from '../../i18n/I18nProvider'\nimport { getActiveAPIConfig, getActualAPIConfig, saveUserAPIConfig, DefaultAPIConfig } from '../../config/defaultAPI'\n\n// 懒加载设置组件\nconst EnhancedAPISettings = lazy(() => import('../settings/EnhancedAPISettings'))\n\nconst { TextArea } = Input\n\ninterface CircuitData {\n  ascii?: string\n  description?: string\n  components?: Array<{\n    name: string\n    type: string\n    value?: string\n    reference?: string\n  }>\n  connections?: Array<{\n    id: string\n    from: {\n      component: string\n      pin?: string\n    }\n    to: {\n      component: string\n      pin?: string\n    }\n    label?: string\n    description?: string\n  }>\n  properties?: Array<{\n    name: string\n    value: string\n    unit?: string\n  }>\n}\n\ninterface BOMData {\n  items?: Array<{\n    component: string\n    quantity: number\n    value?: string\n    package?: string\n    price?: number\n  }>\n  totalCost?: number\n}\n\ninterface ChatPanelProps {\n  onCircuitGenerated?: (circuitData: CircuitData) => void\n  onBomGenerated?: (bomData: BOMData) => void\n  onChatHistory?: (history: ChatMessage[]) => void\n  initialMessages?: ChatMessage[]\n}\n\nconst ChatPanel = ({ \n  onCircuitGenerated, \n  onBomGenerated, \n  onChatHistory,\n  initialMessages \n}: ChatPanelProps) => {\n  const { t } = useI18n()\n  const [messages, setMessages] = useState<ChatMessage[]>([{\n    id: '1', role: 'assistant', content: '', timestamp: new Date()\n  }])\n  useEffect(() => {\n    // 初始化首条欢迎语（依赖语言）\n    setMessages([{ id: '1', role: 'assistant', content: t('assistant_welcome'), timestamp: new Date() }])\n  }, [t])\n  const [inputMessage, setInputMessage] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [selectedProvider, setSelectedProvider] = useState('deepseek')\n  const [showSettings, setShowSettings] = useState(false)\n  const [apiConfigured, setApiConfigured] = useState(false)\n  const [isTyping, setIsTyping] = useState(false)\n  const [thinkingProgress, setThinkingProgress] = useState(0) // 新增：思考进度\n  const [thinkingSteps, setThinkingSteps] = useState<string[]>([]) // 新增：思考步骤数组\n  const [currentThinkingIndex, setCurrentThinkingIndex] = useState(0) // 新增：当前思考步骤索引\n  const [quickActions, setQuickActions] = useState<string[]>([])\n  useEffect(() => {\n    setQuickActions([\n      t('quick_action_5v_regulator'),\n      t('quick_action_led_blink'),\n      t('quick_action_opamp_amplifier'),\n      t('quick_action_audio_amp')\n    ])\n  }, [t])\n  const [currentApiConfig, setCurrentApiConfig] = useState<DefaultAPIConfig | null>(null)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  const textAreaRef = useRef<HTMLTextAreaElement>(null)\n  const conversationId = useRef<string>(`conv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`)\n\n  const [sidebarVisible, setSidebarVisible] = useState(false)\n  const [requirements, setRequirements] = useState<Requirements>({\n    type: '',\n    inputPower: '',\n    outputTarget: '',\n    load: '',\n    priorities: [],\n    environment: '',\n    preferences: '',\n    acceptanceCriteria: ''\n  })\n  const [risks, setRisks] = useState<string[]>([])\n  const [changes, setChanges] = useState<string[]>([])\n\n  const availableProviders = [\n    { value: 'openai', label: 'OpenAI GPT', icon: '🤖' },\n    { value: 'claude', label: 'Claude', icon: '🧠' },\n    { value: 'gemini', label: 'Google Gemini', icon: '⭐' },\n    { value: 'doubao', label: 'Doubao', icon: '🐯' },\n    { value: 'siliconflow', label: 'SiliconFlow', icon: '⚡' },\n    { value: 'qwen', label: 'Qwen', icon: '🌿' },\n    { value: 'perplexity', label: 'Perplexity', icon: '🔎' },\n    { value: 'custom', label: 'Custom API', icon: '⚙️' }\n  ]\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  useEffect(() => {\n    // 加载持久化的需求卡片/风险/变更\n    try {\n      const savedReq = localStorage.getItem('circuitsai_requirements')\n      const savedRisks = localStorage.getItem('circuitsai_requirements_risks')\n      const savedChanges = localStorage.getItem('circuitsai_requirements_changes')\n      if (savedReq) setRequirements(JSON.parse(savedReq))\n      if (savedRisks) setRisks(JSON.parse(savedRisks))\n      if (savedChanges) setChanges(JSON.parse(savedChanges))\n    } catch (error) {\n      console.warn('Failed to load requirements:', error)\n    }\n  }, [])\n\n  useEffect(() => {\n    // 加载API配置 - 优先使用默认配置\n    const config = getActiveAPIConfig()\n    console.log('加载的API配置:', config)\n    setCurrentApiConfig(config)\n    setApiConfigured(true) // 默认配置总是可用的\n    setSelectedProvider(config.provider)\n  }, [])\n\n  // 初始化聊天历史\n  useEffect(() => {\n    if (initialMessages && initialMessages.length > 0) {\n      setMessages(initialMessages)\n    }\n  }, [initialMessages])\n\n  // 当messages变化时，通知父组件\n  useEffect(() => {\n    if (onChatHistory && messages.length > 1) { // 跳过初始欢迎消息\n      onChatHistory(messages)\n    }\n  }, [messages, onChatHistory])\n\n  // 持久化需求卡片/风险/变更\n  useEffect(() => {\n    try {\n      localStorage.setItem('circuitsai_requirements', JSON.stringify(requirements))\n    } catch (error) {\n      console.warn('Failed to save requirements:', error)\n    }\n  }, [requirements])\n  useEffect(() => {\n    try {\n      localStorage.setItem('circuitsai_requirements_risks', JSON.stringify(risks))\n    } catch (error) {\n      console.warn('Failed to save risks:', error)\n    }\n  }, [risks])\n  useEffect(() => {\n    try {\n      localStorage.setItem('circuitsai_requirements_changes', JSON.stringify(changes))\n    } catch (error) {\n      console.warn('Failed to save changes:', error)\n    }\n  }, [changes])\n\n  const extractFromText = (text: string) => {\n    const lower = text.toLowerCase()\n    const result: Partial<Requirements> = {}\n\n    // 类型\n    if (/稳压|恒压/.test(text)) result.type = '电源稳压'\n    else if (/led/.test(lower) || /发光|灯/.test(text)) result.type = 'LED驱动'\n    else if (/放大|运放/.test(text)) result.type = '放大器'\n    else if (/音频|功放/.test(text)) result.type = '音频功放'\n\n    // 输入电源\n    const inputMatch = text.match(/(输入|供电|电源|VCC)[^\\d]{0,6}(\\d+(?:\\.\\d+)?\\s*(?:V|伏))/i)\n    const anyV = text.match(/(\\d+(?:\\.\\d+)?\\s*(?:V|伏))(?:\\s*-\\s*(\\d+(?:\\.\\d+)?\\s*(?:V|伏)))?/i)\n    if (inputMatch) result.inputPower = inputMatch[2]\n    else if (anyV) result.inputPower = anyV[0]\n\n    // 目标输出\n    const cc = text.match(/恒流\\s*(\\d+(?:\\.\\d+)?\\s*mA)/i)\n    const cv = text.match(/恒压\\s*(\\d+(?:\\.\\d+)?\\s*V)/i)\n    const gain = text.match(/增益\\s*(\\d+(?:\\.\\d+)?\\s*dB)/i)\n    if (cc) result.outputTarget = `恒流 ${cc[1]}`\n    else if (cv) result.outputTarget = `恒压 ${cv[1]}`\n    else if (gain) result.outputTarget = `增益 ${gain[1]}`\n\n    // 负载\n    if (/LED\\s*\\d*/i.test(text) || /发光二极管|指示灯/.test(text)) result.load = 'LED'\n    else if (/扬声器|喇叭|8Ω|8 Ohm/i.test(text)) result.load = '扬声器/8Ω'\n    else if (/电机|马达/.test(text)) result.load = '电机'\n    else if (/传感器/.test(text)) result.load = '传感器'\n\n    // 优先级\n    const prios: string[] = []\n    if (/成本/.test(text)) prios.push('成本')\n    if (/体积/.test(text)) prios.push('体积')\n    if (/效率/.test(text)) prios.push('效率')\n    if (/噪声/.test(text)) prios.push('噪声')\n    if (/精度/.test(text)) prios.push('精度')\n    if (prios.length) result.priorities = Array.from(new Set(prios))\n\n    // 验收标准（抓取“验收标准”小节或典型约束）\n    const accSection = text.match(/##\\s*验收标准([\\s\\S]*?)(?=##|$)/i)\n    if (accSection) {\n      result.acceptanceCriteria = accSection[1].trim().slice(0, 300)\n    } else {\n      const parts: string[] = []\n      const eff = text.match(/效率\\s*[≥>=]\\s*([\\d.]+%)/)\n      const ripple = text.match(/纹波\\s*[≤<=]\\s*([\\d.]+\\s*(?:mV|V))/)\n      const cost = text.match(/成本\\s*[≤<=]\\s*([\\d.]+\\s*元?)/)\n      if (eff) parts.push(`效率≥${eff[1]}`)\n      if (ripple) parts.push(`纹波≤${ripple[1]}`)\n      if (cost) parts.push(`成本≤${cost[1]}`)\n      if (parts.length) result.acceptanceCriteria = parts.join('，')\n    }\n\n    return result\n  }\n\n  const autoExtractRequirementsFromConversation = () => {\n    const lastUserMessages = messages.filter(m => m.role === 'user').slice(-5)\n    if (lastUserMessages.length === 0) return\n    const merged = lastUserMessages.map(m => m.content).join('\\n')\n    const extracted = extractFromText(merged)\n    setRequirements(prev => ({\n      ...prev,\n      ...extracted,\n    }))\n  }\n\n  const updateRequirementsFromAssistant = (assistantText: string) => {\n    const extracted = extractFromText(assistantText)\n    const next: Requirements = { ...requirements }\n    const changesList: string[] = []\n\n    ;(['type','inputPower','outputTarget','load','acceptanceCriteria'] as const).forEach((key) => {\n      const newVal = extracted[key]\n      if (newVal && next[key] !== newVal) {\n        const oldVal = next[key] || '未设置'\n        changesList.push(`${key}: ${oldVal} -> ${newVal}`)\n        next[key] = newVal\n      }\n    })\n\n    if (extracted.priorities && extracted.priorities.length) {\n      const merged = Array.from(new Set([...(next.priorities || []), ...extracted.priorities]))\n      if (merged.length !== (next.priorities || []).length) {\n        changesList.push(`priorities -> ${merged.join('、')}`)\n      }\n      next.priorities = merged\n    }\n\n    if (changesList.length) {\n      setRequirements(next)\n      setChanges(prev => [...prev, ...changesList])\n    }\n\n    // 简单风险评估占位\n    const newRisks: string[] = []\n    if (!next.inputPower) newRisks.push('输入电源未明确，可能影响器件耐压与效率选型')\n    if (!next.outputTarget) newRisks.push('输出目标未明确，无法进行参数计算与校核')\n    if (!next.load) newRisks.push('负载特性未明确，驱动/功率预算存在不确定性')\n    if (!next.priorities || next.priorities.length === 0) newRisks.push('未设置优先级，难以在方案间做取舍')\n    setRisks(newRisks)\n  }\n\n  const handleRequirementsChange = (next: Requirements) => {\n    // 记录变更\n    const diffs: string[] = []\n    const prev = requirements\n    ;(['type','inputPower','outputTarget','load','environment','preferences','acceptanceCriteria'] as const).forEach((key) => {\n      if (prev[key] !== next[key]) {\n        const oldVal = prev[key] || '未设置'\n        const newVal = next[key] || '未设置'\n        diffs.push(`${key}: ${oldVal} -> ${newVal}`)\n      }\n    })\n    if (JSON.stringify(prev.priorities) !== JSON.stringify(next.priorities)) {\n      diffs.push(`priorities: ${(prev.priorities||[]).join('、')||'未设置'} -> ${(next.priorities||[]).join('、')||'未设置'}`)\n    }\n    if (diffs.length) setChanges(prevChanges => [...prevChanges, ...diffs])\n\n    setRequirements(next)\n  }\n\n  // 解析AI返回内容中的思考过程\n  const parseThinkingProcess = (content: string): { thinking: string[], mainContent: string } => {\n    // 确保 content 是字符串类型\n    if (!content || typeof content !== 'string') {\n      return { thinking: [], mainContent: content || '' }\n    }\n    \n    const thinkingMatch = content.match(/<thinking>([\\s\\S]*?)<\\/thinking>/i)\n    if (!thinkingMatch) {\n      return { thinking: [], mainContent: content }\n    }\n    \n    const thinkingText = thinkingMatch[1]?.trim() || ''\n    const thinking = thinkingText\n      .split(/\\d+\\.\\s*/)\n      .filter(step => step.trim())\n      .map(step => step.trim())\n    \n    const mainContent = content.replace(/<thinking>[\\s\\S]*?<\\/thinking>/i, '').trim()\n    return { thinking, mainContent }\n  }\n\n  // 分步显示思考过程\n  const displayThinkingSteps = async (steps: string[]): Promise<void> => {\n    setThinkingSteps(steps)\n    setCurrentThinkingIndex(0)\n    \n    for (let i = 0; i < steps.length; i++) {\n      setCurrentThinkingIndex(i)\n      setThinkingProgress((i + 1) / steps.length * 100)\n      await new Promise(resolve => setTimeout(resolve, 800 + Math.random() * 400))\n    }\n  }\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return\n\n    const userMessage: ChatMessage = {\n      id: Date.now().toString(),\n      role: 'user',\n      content: inputMessage.trim(),\n      timestamp: new Date()\n    }\n\n    setMessages(prev => [...prev, userMessage])\n    setInputMessage('')\n    setIsLoading(true)\n\n    try {\n      // 调用后端API\n      console.log('发送到后端的配置:', {\n        provider: selectedProvider,\n        apiConfig: currentApiConfig || undefined\n      })\n      \n      // 获取实际的API配置（处理默认配置映射）\n      const actualConfig = currentApiConfig ? getActualAPIConfig(currentApiConfig) : undefined\n      \n      // 转换为 APIConfig 格式\n      const apiConfig = actualConfig ? {\n        provider: actualConfig.provider,\n        model: actualConfig.model,\n        apiKey: actualConfig.apiKey,\n        apiUrl: actualConfig.apiUrl,\n        temperature: actualConfig.temperature,\n        maxTokens: actualConfig.maxTokens,\n        requestFormat: actualConfig.requestFormat,\n        responseFormat: actualConfig.responseFormat,\n        customHeaders: actualConfig.customHeaders\n      } : undefined\n      \n      const response = await aiAPI.chat({\n        message: userMessage.content,\n        conversationId: conversationId.current,\n        provider: apiConfig?.provider || selectedProvider,\n        apiConfig: apiConfig || undefined\n      })\n\n      // 更新会话ID\n      if (response.data?.conversationId) {\n        conversationId.current = response.data.conversationId\n      }\n      \n      // 解析AI返回的内容，提取思考过程\n      const responseContent = response?.data?.response || ''\n      const { thinking, mainContent } = parseThinkingProcess(responseContent)\n      \n      // 如果有思考过程，先显示思考步骤\n      if (thinking.length > 0) {\n        await displayThinkingSteps(thinking)\n      }\n      \n      // 清除思考状态，开始显示最终答案\n      setThinkingProgress(0)\n      setThinkingSteps([])\n      setCurrentThinkingIndex(0)\n      setIsTyping(true)\n      \n      const assistantMessage: ChatMessage = {\n        id: (Date.now() + 1).toString(),\n        role: 'assistant',\n        content: mainContent || responseContent, // 使用解析后的内容或原内容\n        timestamp: new Date()\n      }\n\n      // 添加短暂延迟模拟打字效果\n      setTimeout(() => {\n        setMessages(prev => [...prev, assistantMessage])\n        setIsTyping(false)\n        updateRequirementsFromAssistant(responseContent)\n      }, 500)\n\n      // 检查是否包含电路图或BOM数据，添加调试日志\n      console.log('检查响应数据:', {\n        hasCircuitData: !!response.data?.circuit_data,\n        hasBomData: !!response.data?.bom_data,\n        circuitComponents: response.data?.circuit_data?.components?.length || 0,\n        bomItems: response.data?.bom_data?.items?.length || 0\n      })\n      \n      if (response.data?.circuit_data && onCircuitGenerated) {\n        console.log('传递电路数据到父组件:', response.data.circuit_data)\n        onCircuitGenerated(response.data.circuit_data)\n      }\n      if (response.data?.bom_data && onBomGenerated) {\n        console.log('传递BOM数据到父组件:', response.data.bom_data)\n        onBomGenerated(response.data.bom_data)\n      }\n\n    } catch (error: unknown) {\n      console.error('发送消息失败:', error)\n      \n      // 清除思考状态\n      setThinkingProgress(0)\n      setThinkingSteps([])\n      setCurrentThinkingIndex(0)\n      setIsTyping(false)\n      \n      let errorContent = '抱歉，我现在无法回复。'\n      let shouldShowApiSettings = false\n      \n      // 根据错误类型提供更具体的错误信息\n      if (error instanceof Error) {\n        const errorMessage = error.message\n        \n        if (errorMessage.includes('AI响应超时')) {\n          errorContent = '⏱️ AI响应超时，可能是网络较慢或AI服务繁忙，请稍后重试。'\n        } else if (errorMessage.includes('AI服务暂时不可用')) {\n          errorContent = '🔧 AI服务暂时不可用，请检查API配置或稍后重试。'\n          shouldShowApiSettings = true\n        } else if (errorMessage.includes('请求过于频繁')) {\n          errorContent = '⏳ 请求过于频繁，请等待片刻后再试。'\n        } else if (errorMessage.includes('网络连接失败')) {\n          errorContent = '🌐 网络连接失败，请检查网络连接后重试。'\n        } else {\n          errorContent = `❌ ${errorMessage}`\n        }\n      } else {\n        // 处理传统的错误对象\n        const err = error as { \n          response?: { status?: number; data?: { error?: string } }; \n          code?: string; \n          message?: string \n        }\n        \n        if (err?.response?.status === 401) {\n          errorContent = '❌ API密钥无效或未配置，请在设置中检查您的AI服务配置。'\n          shouldShowApiSettings = true\n        } else if (err?.response?.status === 429) {\n          errorContent = '⏳ API请求频率过高，请稍等片刻后再试。'\n        } else if (err?.response?.status === 503) {\n          errorContent = '🔌 AI服务连接失败，请检查网络连接或API地址配置。'\n          shouldShowApiSettings = true\n        } else if (err?.code === 'ECONNABORTED') {\n          errorContent = '⏱️ 请求超时，AI服务响应时间过长，请稍后重试。'\n        } else if (err?.message?.includes('Network Error')) {\n          errorContent = '🌐 网络连接错误，请检查您的网络连接。'\n        } else if (err?.response?.data?.error) {\n          errorContent = `❌ ${err.response.data.error}`\n        }\n      }\n      \n      const errorMessage: ChatMessage = {\n        id: (Date.now() + 1).toString(),\n        role: 'assistant',\n        content: errorContent,\n        timestamp: new Date()\n      }\n      setMessages(prev => [...prev, errorMessage])\n      \n      // 显示错误提示\n      message.error(errorContent)\n      \n      // 如果需要，自动打开API设置\n      if (shouldShowApiSettings && !apiConfigured) {\n        setTimeout(() => {\n          setShowSettings(true)\n        }, 1000)\n      }\n    } finally {\n      setIsLoading(false)\n      setThinkingProgress(0)\n      setThinkingSteps([])\n      setCurrentThinkingIndex(0)\n    }\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      handleSendMessage()\n    }\n  }\n\n  const clearChat = () => {\n    setMessages([{\n      id: '1',\n      role: 'assistant',\n      content: '对话已清空。请告诉我您想要设计什么样的电路？',\n      timestamp: new Date()\n    }])\n  }\n\n  const exportChat = () => {\n    const chatText = messages.map(msg => \n      `${msg.role === 'user' ? '用户' : 'AI助手'} (${msg.timestamp.toLocaleString()}):\\n${msg.content}\\n\\n`\n    ).join('')\n    \n    const blob = new Blob([chatText], { type: 'text/plain;charset=utf-8' })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = `CircuitsAI_Chat_${new Date().toISOString().split('T')[0]}.txt`\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }\n\n  const handleAPIConfig = (config: {\n    provider: string\n    apiKey: string\n    apiUrl: string\n    model: string\n    maxTokens?: number\n    temperature?: number\n    requestFormat?: 'openai' | 'claude' | 'custom'\n    responseFormat?: 'openai' | 'claude' | 'custom'\n    customHeaders?: Record<string, string>\n  }) => {\n    console.log('API配置已更新:', config)\n    \n    const fullConfig: DefaultAPIConfig = {\n      ...config,\n      displayName: config.provider === 'default' ? '智能AI助手' : `${config.provider} - ${config.model}`,\n      description: config.provider === 'default' ? '系统内置AI，无需配置即可使用' : '用户自定义配置',\n      isDefault: config.provider === 'default',\n      maxTokens: config.maxTokens || 4000,\n      temperature: config.temperature || 0.7\n    }\n    \n    // 使用默认配置系统保存\n    saveUserAPIConfig(fullConfig)\n    \n    setCurrentApiConfig(fullConfig)\n    setSelectedProvider(config.provider)\n    setApiConfigured(true) // 任何配置都是有效的\n    message.success('API配置已更新')\n  }\n\n  const formatMessage = (content: string) => {\n    // 简单的markdown格式化\n    return content\n      .replace(/```([\\s\\S]*?)```/g, '<pre style=\"背景: #f5f5f5; padding: 10px; border-radius: 4px; overflow-x: auto;\"><code>$1</code></pre>')\n      .replace(/`([^`]+)`/g, '<code style=\"background: #f0f0f0; padding: 2px 4px; border-radius: 2px;\">$1</code>')\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n      .replace(/\\n/g, '<br/>')\n  }\n\n  const buildDraftPromptFromRequirements = (req: Requirements) => {\n    const lines: string[] = []\n    lines.push('请根据以下“需求卡片”生成电路草案，包含：电路说明、ASCII电路图、元件列表、连接关系、BOM、关键参数计算与注意事项。')\n    lines.push('如果信息缺失，请用合理的行业默认值，并在“风险与待确认”中标注。')\n    lines.push('')\n    lines.push('【需求卡片】')\n    lines.push(`类型: ${req.type || '未指定'}`)\n    lines.push(`输入电源: ${req.inputPower || '未指定'}`)\n    lines.push(`目标输出: ${req.outputTarget || '未指定'}`)\n    lines.push(`负载特性: ${req.load || '未指定'}`)\n    lines.push(`优先级: ${(req.priorities || []).join('、') || '未指定'}`)\n    lines.push(`环境/安规: ${req.environment || '未指定'}`)\n    lines.push(`元件偏好/禁用: ${req.preferences || '未指定'}`)\n    lines.push(`验收标准: ${req.acceptanceCriteria || '未指定'}`)\n    lines.push('')\n    lines.push('请按标准格式输出各部分，并确保BOM非空。')\n    return lines.join('\\n')\n  }\n\n  const handleGenerateDraft = async () => {\n    autoExtractRequirementsFromConversation()\n    setSidebarVisible(true)\n    const hasAny = Object.values(requirements).some((v) => (Array.isArray(v) ? v.length > 0 : !!v))\n    if (!hasAny) {\n      message.info('已从最近对话尝试提取信息，请补充关键项后再生成草案。')\n      return\n    }\n\n    // 生成前更新风险\n    const nextRisks: string[] = []\n    if (!requirements.inputPower) nextRisks.push('输入电源未明确')\n    if (!requirements.outputTarget) nextRisks.push('输出目标未明确')\n    if (!requirements.load) nextRisks.push('负载特性未明确')\n    if (!requirements.acceptanceCriteria) nextRisks.push('未设置验收标准')\n    setRisks(nextRisks)\n\n    const draftPrompt = buildDraftPromptFromRequirements(requirements)\n    setInputMessage(draftPrompt)\n    await new Promise((r) => setTimeout(r))\n    handleSendMessage()\n  }\n\n  return (\n    <div className=\"flex flex-col h-full bg-white\">\n      {/* 头部（两行布局，避免窄侧栏拥挤换行） */}\n      <div className=\"p-3 border-b bg-gray-50\">\n        <div className=\"flex items-center justify-between gap-2\">\n          <div className=\"flex items-center gap-2 min-w-0\">\n            <RobotOutlined className=\"text-blue-500 text-lg flex-shrink-0\" />\n            <div className=\"min-w-0\">\n              <h3 className=\"text-base font-semibold text-gray-800 truncate\">{t('ai_assistant')}</h3>\n              <StatusIndicator \n                model={availableProviders.find(p => p.value === selectedProvider)?.label || selectedProvider}\n                isConfigured={apiConfigured}\n              />\n            </div>\n          </div>\n          <div className=\"flex items-center\">\n            <Select\n              value={selectedProvider}\n              onChange={setSelectedProvider}\n              size=\"small\"\n              style={{ minWidth: 160 }}\n              options={availableProviders.map(p => ({ value: p.value, label: `${p.icon} ${p.label}` }))}\n            />\n          </div>\n        </div>\n        <div className=\"mt-2 flex flex-wrap items-center gap-1\">\n          <Button icon={<DownloadOutlined />} onClick={exportChat} size=\"small\" type=\"text\" title={t('export_chat')} />\n          <Button \n            icon={<ClearOutlined />} \n            onClick={clearChat}\n            size=\"small\"\n            type=\"text\"\n            title={t('clear_chat')}\n          />\n          <Button \n            icon={<SettingOutlined />} \n            onClick={() => setShowSettings(true)}\n            size=\"small\"\n            type=\"text\"\n            title={t('api_settings')}\n          />\n          <Button \n            onClick={() => { autoExtractRequirementsFromConversation(); setSidebarVisible(true) }}\n            size=\"small\"\n            type=\"primary\"\n          >{t('requirements_card')}</Button>\n          <Button \n            onClick={handleGenerateDraft}\n            size=\"small\"\n          >{t('generate_draft')}</Button>\n        </div>\n      </div>\n\n      {/* 消息列表 */}\n      <div className=\"flex-1 p-4 overflow-y-auto space-y-4\" style={{ maxHeight: 'calc(100vh - 200px)' }}>\n        {messages.map((msg) => (\n          <div key={msg.id} className={`flex gap-3 ${msg.role === 'user' ? 'flex-row-reverse' : ''}`}>\n            <Avatar \n              icon={msg.role === 'user' ? <UserOutlined /> : <RobotOutlined />}\n              className={msg.role === 'user' ? 'bg-blue-500' : 'bg-green-500'}\n            />\n            <div className={`max-w-[80%] ${msg.role === 'user' ? 'text-right' : ''}`}>\n              <div \n                className={`p-3 rounded-lg ${\n                  msg.role === 'user' \n                    ? 'bg-blue-500 text-white' \n                    : 'bg-gray-100 text-gray-800'\n                }`}\n                dangerouslySetInnerHTML={{ __html: formatMessage(msg.content) }}\n              />\n              <div className=\"text-xs text-gray-500 mt-1\">\n                {msg.timestamp.toLocaleTimeString()}\n              </div>\n            </div>\n          </div>\n        ))}\n        \n        {isLoading && (\n          <div className=\"flex gap-3\">\n            <Avatar icon={<RobotOutlined />} className=\"bg-green-500\" />\n            <div className=\"bg-gray-100 p-3 rounded-lg min-w-[200px] max-w-[80%]\">\n              {thinkingSteps.length > 0 ? (\n                <div className=\"space-y-3\">\n                  <div className=\"text-sm font-semibold text-gray-800 mb-2\">\n                    🤔 AI思考过程：\n                  </div>\n                  \n                  {/* 显示所有思考步骤 */}\n                  {thinkingSteps.map((step, index) => (\n                    <div \n                      key={index}\n                      className={`flex items-start gap-2 p-2 rounded ${\n                        index < currentThinkingIndex \n                          ? 'bg-green-50 border border-green-200' \n                          : index === currentThinkingIndex \n                          ? 'bg-blue-50 border border-blue-200' \n                          : 'bg-gray-50 opacity-50'\n                      }`}\n                    >\n                      <div className={`flex-shrink-0 w-5 h-5 rounded-full flex items-center justify-center text-xs font-bold ${\n                        index < currentThinkingIndex \n                          ? 'bg-green-500 text-white' \n                          : index === currentThinkingIndex \n                          ? 'bg-blue-500 text-white animate-pulse' \n                          : 'bg-gray-300 text-gray-500'\n                      }`}>\n                        {index < currentThinkingIndex ? '✓' : index + 1}\n                      </div>\n                      <div className={`text-sm flex-1 ${\n                        index <= currentThinkingIndex ? 'text-gray-700' : 'text-gray-400'\n                      }`}>\n                        {step}\n                        {index === currentThinkingIndex && (\n                          <Spin size=\"small\" className=\"ml-2\" />\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                  \n                  {/* 进度条 */}\n                  <div className=\"mt-3\">\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-gradient-to-r from-green-400 to-blue-500 h-2 rounded-full transition-all duration-500\"\n                        style={{ width: `${thinkingProgress}%` }}\n                      ></div>\n                    </div>\n                    <div className=\"text-xs text-gray-500 mt-1 text-center\">\n                      思考中... {Math.round(thinkingProgress)}%\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex items-center gap-2\">\n                  <Spin size=\"small\" />\n                  <span className=\"text-sm text-gray-700\">正在分析您的需求...</span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {isTyping && (\n          <div className=\"flex gap-3\">\n            <Avatar icon={<RobotOutlined />} className=\"bg-green-500\" />\n            <div className=\"bg-gray-100 p-3 rounded-lg flex items-center gap-2\">\n              <div className=\"flex space-x-1\">\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n              </div>\n              <span className=\"text-sm text-gray-600\">{t('typing_hint')}</span>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* 快捷操作 */}\n      {messages.length <= 1 && (\n        <div className=\"border-t p-4 bg-white\">\n          <div className=\"text-sm text-gray-600 mb-3\">💡 {t('quick_start')}：</div>\n          <div className=\"flex flex-wrap gap-2\">\n            {quickActions.map((action, index) => (\n              <Button\n                key={index}\n                size=\"small\"\n                type=\"dashed\"\n                onClick={() => {\n                  setInputMessage(action)\n                  textAreaRef.current?.focus()\n                }}\n                className=\"text-blue-600 border-blue-300 hover:border-blue-500 hover:text-blue-700\"\n              >\n                {action}\n              </Button>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* 输入区域 */}\n      <div className=\"border-t p-4 bg-gray-50\">\n        <div className=\"flex gap-2\">\n          <TextArea\n            ref={textAreaRef}\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder={t('input_placeholder')}\n            rows={3}\n            disabled={isLoading}\n            className=\"flex-1\"\n          />\n          <Button \n            type=\"primary\" \n            icon={<SendOutlined />}\n            onClick={handleSendMessage}\n            disabled={!inputMessage.trim() || isLoading}\n            className=\"h-20\"\n          >\n            {t('send')}\n          </Button>\n        </div>\n        <div className=\"text-xs text-gray-500 mt-2\">\n          按 Enter 发送，Shift + Enter 换行\n        </div>\n      </div>\n\n      {/* API设置弹窗 */}\n      {showSettings && (\n        <Suspense fallback={<Spin size=\"large\" />}>\n          <EnhancedAPISettings\n            visible={showSettings}\n            onClose={() => setShowSettings(false)}\n            onSave={handleAPIConfig}\n          />\n        </Suspense>\n      )}\n\n      <RequirementCardSidebar\n        visible={sidebarVisible}\n        value={requirements}\n        onChange={handleRequirementsChange}\n        onClose={() => setSidebarVisible(false)}\n        onGenerateDraft={handleGenerateDraft}\n        risks={risks}\n        changes={changes}\n      />\n    </div>\n  )\n}\n\nexport default ChatPanel","import { useState } from 'react'\nimport { Card, Tabs, Button, message, Spin, Empty } from 'antd'\nimport { useI18n } from '../../i18n/I18nProvider'\nimport { CopyOutlined, DownloadOutlined, ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons'\n\ninterface Component {\n  name: string\n  type: string\n  value?: string\n  reference?: string\n  package?: string\n  description?: string\n}\n\ninterface Connection {\n  id: string\n  from: {\n    component: string\n    pin?: string\n  }\n  to: {\n    component: string\n    pin?: string\n  }\n  label?: string\n  description?: string\n}\n\ninterface Property {\n  name: string\n  value: string\n  unit?: string\n  description?: string\n}\n\ninterface CircuitData {\n  ascii?: string\n  description?: string\n  components?: Component[]\n  connections?: Connection[]\n  properties?: Property[]\n}\n\ninterface CircuitViewerProps {\n  circuitData?: CircuitData\n  loading?: boolean\n}\n\nconst CircuitViewer = ({ circuitData, loading = false }: CircuitViewerProps) => {\n  const { t } = useI18n()\n  const [activeTab, setActiveTab] = useState('ascii')\n  const [fontSize, setFontSize] = useState(12)\n  const [darkMode, setDarkMode] = useState(true)\n  const [showLineNumbers, setShowLineNumbers] = useState(false)\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text)\n      message.success(t('copied'))\n    } catch (error) {\n      message.error(t('copy_failed'))\n    }\n  }\n\n  const downloadAsText = (content: string, filename: string) => {\n    const blob = new Blob([content], { type: 'text/plain;charset=utf-8' })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = filename\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }\n\n  const renderASCIICircuit = () => {\n    if (!circuitData?.ascii) {\n      return (\n        <Empty \n          description={t('no_schematic')}\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\n        >\n          <p className=\"text-gray-500\">{t('schematic_hint')}</p>\n        </Empty>\n      )\n    }\n\n    return (\n      <div className=\"relative\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"flex gap-2 items-center\">\n            <Button\n              icon={<ZoomOutOutlined />}\n              onClick={() => setFontSize(Math.max(8, fontSize - 1))}\n              size=\"small\"\n            />\n            <span className=\"text-sm text-gray-600 min-w-[40px] text-center\">{fontSize}px</span>\n            <Button\n              icon={<ZoomInOutlined />}\n              onClick={() => setFontSize(Math.min(20, fontSize + 1))}\n              size=\"small\"\n            />\n            <div className=\"h-4 w-px bg-gray-300 mx-2\" />\n            <Button\n              onClick={() => setShowLineNumbers(!showLineNumbers)}\n              size=\"small\"\n              type={showLineNumbers ? 'primary' : 'default'}\n            >{t('line_numbers')}</Button>\n            <Button\n              onClick={() => setDarkMode(!darkMode)}\n              size=\"small\"\n              type={darkMode ? 'primary' : 'default'}\n            >\n              {darkMode ? '🌙' : '☀️'}\n            </Button>\n          </div>\n          <div className=\"flex gap-2\">\n            <Button\n              icon={<CopyOutlined />}\n              onClick={() => copyToClipboard(circuitData.ascii || '')}\n              size=\"small\"\n            >{t('copy')}</Button>\n            <Button\n              icon={<DownloadOutlined />}\n              onClick={() => downloadAsText(circuitData.ascii || '', 'circuit.txt')}\n              size=\"small\"\n            >{t('download')}</Button>\n          </div>\n        </div>\n        \n        <div \n          className={`p-4 rounded-lg overflow-auto font-mono relative ${\n            darkMode \n              ? 'bg-gray-900 text-green-400 border border-gray-700' \n              : 'bg-white text-gray-800 border border-gray-300'\n          }`}\n          style={{ \n            maxHeight: '400px',\n          }}\n        >\n          {showLineNumbers ? (\n            <div className=\"flex\">\n              <div className={`pr-4 text-right select-none ${darkMode ? 'text-gray-500' : 'text-gray-400'} border-r ${darkMode ? 'border-gray-700' : 'border-gray-300'} mr-4`}>\n                {circuitData.ascii?.split('\\n').map((_, index) => (\n                  <div key={index} style={{ fontSize: `${fontSize}px`, lineHeight: 1.2 }}>\n                    {index + 1}\n                  </div>\n                ))}\n              </div>\n              <div className=\"flex-1\">\n                <pre \n                  className=\"whitespace-pre\"\n                  style={{ \n                    fontSize: `${fontSize}px`,\n                    lineHeight: 1.2,\n                    margin: 0\n                  }}\n                >\n                  {circuitData.ascii}\n                </pre>\n              </div>\n            </div>\n          ) : (\n            <pre \n              className=\"whitespace-pre\"\n              style={{ \n                fontSize: `${fontSize}px`,\n                lineHeight: 1.2,\n                margin: 0\n              }}\n            >\n              {circuitData.ascii}\n            </pre>\n          )}\n        </div>\n        \n        {circuitData.description && (\n          <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n            <h4 className=\"text-sm font-semibold text-blue-800 mb-2\">{t('description')}</h4>\n            <p className=\"text-sm text-blue-700\">{circuitData.description}</p>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  const renderComponentsList = () => {\n    if (!circuitData?.components || circuitData.components.length === 0) {\n      return (\n        <Empty \n          description={t('no_component_info')}\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\n        />\n      )\n    }\n\n    // 从电路参数中提取与组件相关的参数信息\n    const getComponentParameters = (componentType: string) => {\n      if (!circuitData?.properties) return []\n      \n      return circuitData.properties.filter(prop => {\n        // 匹配组件相关的参数\n        const propName = prop.name.toLowerCase()\n        const compType = componentType.toLowerCase()\n        \n        return propName.includes(compType) || \n               propName.includes('电阻') && compType.includes('resistor') ||\n               propName.includes('电容') && compType.includes('capacitor') ||\n               propName.includes('电压') || propName.includes('电流') || propName.includes('功率')\n      })\n    }\n\n    return (\n      <div className=\"space-y-4\">\n        {circuitData.components.map((component, index) => {\n          const parameters = getComponentParameters(component.type)\n          \n          return (\n            <div key={index} className=\"border rounded-lg p-4 hover:bg-gray-50 transition-colors\">\n              {/* 元件基本信息 */}\n              <div className=\"flex justify-between items-start mb-3\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center gap-3 mb-2\">\n                    <h4 className=\"text-lg font-semibold text-gray-800\">{component.name}</h4>\n                    {component.reference && (\n                      <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-sm font-mono rounded\">\n                        {component.reference}\n                      </span>\n                    )}\n                  </div>\n                  \n                  {/* 详细参数表格 */}\n                  <div className=\"grid grid-cols-2 gap-x-6 gap-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">{t('type')}:</span>\n                      <span className=\"font-mono text-gray-800\">{component.type}</span>\n                    </div>\n                    \n                    {component.value && (\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">{t('table_value')}:</span>\n                        <span className=\"font-mono text-blue-600 font-semibold\">{component.value}</span>\n                      </div>\n                    )}\n                    \n                    {component.reference && (\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">{t('table_ref')}:</span>\n                        <span className=\"font-mono text-gray-800\">{component.reference}</span>\n                      </div>\n                    )}\n                    \n                    {component.package && (\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">{t('table_package')}:</span>\n                        <span className=\"font-mono text-gray-800\">{component.package}</span>\n                      </div>\n                    )}\n                    \n                    {/* 显示相关的电路参数 */}\n                    {parameters.slice(0, 4).map((param, paramIndex) => (\n                      <div key={paramIndex} className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">{param.name}:</span>\n                        <span className=\"font-mono text-green-600\">\n                          {param.value}{param.unit}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              \n              {/* 描述信息 */}\n              {component.description && (\n                <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                  <p className=\"text-sm text-gray-600\">{component.description}</p>\n                </div>\n              )}\n            </div>\n          )\n        })}\n        \n        {/* 显示通用电路参数 */}\n        {circuitData?.properties && circuitData.properties.length > 0 && (\n          <div className=\"border rounded-lg p-4 bg-blue-50\">\n            <h4 className=\"text-lg font-semibold text-blue-800 mb-3\">{t('circuit_properties')}</h4>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n              {circuitData.properties.map((prop, index) => (\n                <div key={index} className=\"flex flex-col\">\n                  <span className=\"text-sm text-blue-600 font-medium\">{prop.name}</span>\n                  <span className=\"text-lg font-mono text-blue-800\">\n                    {prop.value}{prop.unit}\n                  </span>\n                  {prop.description && (\n                    <span className=\"text-xs text-blue-500\">{prop.description}</span>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  const renderConnectionsList = () => {\n    if (!circuitData?.connections || circuitData.connections.length === 0) {\n      return (\n        <Empty \n          description={t('no_connection_info')}\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\n        />\n      )\n    }\n\n    return (\n      <div className=\"space-y-2\">\n        {circuitData.connections.map((connection, index) => (\n          <div key={index} className=\"p-3 bg-gray-50 rounded-lg\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <span className=\"px-2 py-1 bg-blue-100 text-blue-800 rounded text-sm font-medium\">\n                {connection.from.component}\n              </span>\n              {connection.from.pin && (\n                <span className=\"text-xs text-blue-600\">({connection.from.pin})</span>\n              )}\n              <span className=\"text-gray-400 font-bold\">→</span>\n              <span className=\"px-2 py-1 bg-green-100 text-green-800 rounded text-sm font-medium\">\n                {connection.to.component}\n              </span>\n              {connection.to.pin && (\n                <span className=\"text-xs text-green-600\">({connection.to.pin})</span>\n              )}\n            </div>\n            {connection.label && (\n              <div className=\"text-xs text-gray-600\">{connection.label}</div>\n            )}\n            {connection.description && (\n              <div className=\"text-xs text-gray-500 mt-1\">{connection.description}</div>\n            )}\n          </div>\n        ))}\n      </div>\n    )\n  }\n\n\n  if (loading) {\n    return (\n      <Card className=\"h-full\">\n        <div className=\"flex items-center justify-center h-96\">\n          <Spin size=\"large\" />\n          <span className=\"ml-3\">Generating circuit...</span>\n        </div>\n      </Card>\n    )\n  }\n\n  return (\n    <Card \n      title={t('circuit_design')} \n      className=\"h-full\"\n      styles={{ body: { padding: 0, height: 'calc(100% - 57px)' } }}\n    >\n      <Tabs \n        activeKey={activeTab} \n        onChange={setActiveTab}\n        className=\"h-full\"\n        tabBarStyle={{ paddingLeft: 16, paddingRight: 16, marginBottom: 0 }}\n        items={[\n          {\n            key: 'ascii',\n            label: t('schematic_tab'),\n            children: (\n              <div className=\"h-full overflow-auto p-4\">\n                {renderASCIICircuit()}\n              </div>\n            )\n          },\n          {\n            key: 'components',\n            label: t('components_tab'),\n            children: (\n              <div className=\"h-full overflow-auto p-4\">\n                {renderComponentsList()}\n              </div>\n            )\n          },\n          {\n            key: 'connections',\n            label: t('connections_tab'),\n            children: (\n              <div className=\"h-full overflow-auto p-4\">\n                {renderConnectionsList()}\n              </div>\n            )\n          }\n        ]}\n      />\n    </Card>\n  )\n}\n\nexport default CircuitViewer","// 电路渲染服务 - 负责将电路数据转换为可视化图形\n\nexport interface Point {\n  x: number\n  y: number\n}\n\nexport interface ComponentSymbol {\n  id: string\n  name: string\n  type: string\n  svgPath: string\n  width: number\n  height: number\n  pins: Pin[]\n  category: string\n}\n\nexport interface Pin {\n  id: string\n  name: string\n  position: Point\n  direction: 'input' | 'output' | 'bidirectional'\n  type: 'power' | 'signal' | 'ground'\n}\n\nexport interface CircuitComponent {\n  id: string\n  type: string\n  position: Point\n  rotation: number\n  properties: { [key: string]: string | number }\n  symbol: ComponentSymbol\n}\n\nexport interface Wire {\n  id: string\n  points: Point[]\n  netName?: string\n  color?: string\n}\n\nexport interface CircuitLayout {\n  components: CircuitComponent[]\n  wires: Wire[]\n  bounds: {\n    width: number\n    height: number\n  }\n}\n\nexport interface RenderOptions {\n  gridSize: number\n  showGrid: boolean\n  theme: 'light' | 'dark'\n  scale: number\n  showLabels: boolean\n  showPinNumbers: boolean\n}\n\nclass CircuitRenderer {\n  private symbols: Map<string, ComponentSymbol> = new Map()\n  \n  constructor() {\n    this.initializeSymbols()\n  }\n\n  private initializeSymbols() {\n    // 基础电路符号定义\n    this.addSymbol({\n      id: 'resistor',\n      name: '电阻',\n      type: 'resistor',\n      category: 'passive',\n      width: 60,\n      height: 20,\n      svgPath: `\n        <rect x=\"10\" y=\"5\" width=\"40\" height=\"10\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"0\" y1=\"10\" x2=\"10\" y2=\"10\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"50\" y1=\"10\" x2=\"60\" y2=\"10\" stroke=\"currentColor\" stroke-width=\"2\"/>\n      `,\n      pins: [\n        { id: '1', name: '1', position: { x: 0, y: 10 }, direction: 'bidirectional', type: 'signal' },\n        { id: '2', name: '2', position: { x: 60, y: 10 }, direction: 'bidirectional', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'capacitor',\n      name: '电容',\n      type: 'capacitor',\n      category: 'passive',\n      width: 60,\n      height: 30,\n      svgPath: `\n        <line x1=\"25\" y1=\"5\" x2=\"25\" y2=\"25\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"35\" y1=\"5\" x2=\"35\" y2=\"25\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"0\" y1=\"15\" x2=\"25\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"35\" y1=\"15\" x2=\"60\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\"/>\n      `,\n      pins: [\n        { id: '1', name: '+', position: { x: 0, y: 15 }, direction: 'bidirectional', type: 'signal' },\n        { id: '2', name: '-', position: { x: 60, y: 15 }, direction: 'bidirectional', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'inductor',\n      name: '电感',\n      type: 'inductor', \n      category: 'passive',\n      width: 60,\n      height: 20,\n      svgPath: `\n        <path d=\"M 10 10 Q 15 0 20 10 Q 25 20 30 10 Q 35 0 40 10 Q 45 20 50 10\" \n              fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"0\" y1=\"10\" x2=\"10\" y2=\"10\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"50\" y1=\"10\" x2=\"60\" y2=\"10\" stroke=\"currentColor\" stroke-width=\"2\"/>\n      `,\n      pins: [\n        { id: '1', name: '1', position: { x: 0, y: 10 }, direction: 'bidirectional', type: 'signal' },\n        { id: '2', name: '2', position: { x: 60, y: 10 }, direction: 'bidirectional', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'diode',\n      name: '二极管',\n      type: 'diode',\n      category: 'semiconductor',\n      width: 60,\n      height: 30,\n      svgPath: `\n        <polygon points=\"30,5 45,15 30,25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"45\" y1=\"5\" x2=\"45\" y2=\"25\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"0\" y1=\"15\" x2=\"30\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"45\" y1=\"15\" x2=\"60\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\"/>\n      `,\n      pins: [\n        { id: 'A', name: 'A', position: { x: 0, y: 15 }, direction: 'input', type: 'signal' },\n        { id: 'K', name: 'K', position: { x: 60, y: 15 }, direction: 'output', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'led',\n      name: 'LED',\n      type: 'led',\n      category: 'semiconductor',\n      width: 60,\n      height: 40,\n      svgPath: `\n        <polygon points=\"30,10 45,20 30,30\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"45\" y1=\"10\" x2=\"45\" y2=\"30\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"0\" y1=\"20\" x2=\"30\" y2=\"20\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"45\" y1=\"20\" x2=\"60\" y2=\"20\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <!-- 发光箭头 -->\n        <path d=\"M 48 8 L 52 4 M 48 8 L 44 8 M 48 8 L 48 4\" \n              stroke=\"currentColor\" stroke-width=\"1\" fill=\"none\"/>\n        <path d=\"M 52 12 L 56 8 M 52 12 L 48 12 M 52 12 L 52 8\" \n              stroke=\"currentColor\" stroke-width=\"1\" fill=\"none\"/>\n      `,\n      pins: [\n        { id: 'A', name: 'A', position: { x: 0, y: 20 }, direction: 'input', type: 'signal' },\n        { id: 'K', name: 'K', position: { x: 60, y: 20 }, direction: 'output', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'npn_transistor',\n      name: 'NPN晶体管',\n      type: 'transistor',\n      category: 'semiconductor',\n      width: 60,\n      height: 60,\n      svgPath: `\n        <circle cx=\"30\" cy=\"30\" r=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"20\" y1=\"30\" x2=\"40\" y2=\"30\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"35\" y1=\"20\" x2=\"35\" y2=\"40\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"0\" y1=\"30\" x2=\"20\" y2=\"30\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"35\" y1=\"20\" x2=\"55\" y2=\"5\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"35\" y1=\"40\" x2=\"55\" y2=\"55\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"55\" y1=\"5\" x2=\"60\" y2=\"0\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"55\" y1=\"55\" x2=\"60\" y2=\"60\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <!-- 发射极箭头 -->\n        <polygon points=\"50,50 55,45 55,55\" fill=\"currentColor\"/>\n      `,\n      pins: [\n        { id: 'B', name: 'B', position: { x: 0, y: 30 }, direction: 'input', type: 'signal' },\n        { id: 'C', name: 'C', position: { x: 60, y: 0 }, direction: 'output', type: 'signal' },\n        { id: 'E', name: 'E', position: { x: 60, y: 60 }, direction: 'output', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'opamp',\n      name: '运算放大器',\n      type: 'opamp',\n      category: 'analog_ic',\n      width: 80,\n      height: 60,\n      svgPath: `\n        <polygon points=\"10,10 70,30 10,50\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"0\" y1=\"20\" x2=\"10\" y2=\"20\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"0\" y1=\"40\" x2=\"10\" y2=\"40\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"70\" y1=\"30\" x2=\"80\" y2=\"30\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <text x=\"15\" y=\"25\" font-family=\"Arial\" font-size=\"12\" fill=\"currentColor\">+</text>\n        <text x=\"15\" y=\"45\" font-family=\"Arial\" font-size=\"12\" fill=\"currentColor\">-</text>\n      `,\n      pins: [\n        { id: 'IN+', name: '+', position: { x: 0, y: 20 }, direction: 'input', type: 'signal' },\n        { id: 'IN-', name: '-', position: { x: 0, y: 40 }, direction: 'input', type: 'signal' },\n        { id: 'OUT', name: 'OUT', position: { x: 80, y: 30 }, direction: 'output', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'ground',\n      name: '地',\n      type: 'ground',\n      category: 'power',\n      width: 30,\n      height: 30,\n      svgPath: `\n        <line x1=\"15\" y1=\"0\" x2=\"15\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"5\" y1=\"15\" x2=\"25\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"8\" y1=\"20\" x2=\"22\" y2=\"20\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"11\" y1=\"25\" x2=\"19\" y2=\"25\" stroke=\"currentColor\" stroke-width=\"2\"/>\n      `,\n      pins: [\n        { id: 'GND', name: 'GND', position: { x: 15, y: 0 }, direction: 'input', type: 'ground' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'vcc',\n      name: '电源',\n      type: 'power',\n      category: 'power',\n      width: 30,\n      height: 30,\n      svgPath: `\n        <line x1=\"15\" y1=\"15\" x2=\"15\" y2=\"30\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"5\" y1=\"15\" x2=\"25\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"10\" y1=\"10\" x2=\"20\" y2=\"10\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"12\" y1=\"5\" x2=\"18\" y2=\"5\" stroke=\"currentColor\" stroke-width=\"2\"/>\n      `,\n      pins: [\n        { id: 'VCC', name: 'VCC', position: { x: 15, y: 30 }, direction: 'output', type: 'power' }\n      ]\n    })\n\n    // 添加更多常用电路符号\n    this.addSymbol({\n      id: 'voltage_source',\n      name: '电压源',\n      type: 'voltage_source',\n      category: 'power',\n      width: 60,\n      height: 60,\n      svgPath: `\n        <circle cx=\"30\" cy=\"30\" r=\"25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"0\" y1=\"30\" x2=\"5\" y2=\"30\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"55\" y1=\"30\" x2=\"60\" y2=\"30\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"20\" y1=\"30\" x2=\"40\" y2=\"30\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"30\" y1=\"20\" x2=\"30\" y2=\"25\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <text x=\"18\" y=\"25\" font-family=\"Arial\" font-size=\"16\" fill=\"currentColor\">+</text>\n        <text x=\"35\" y=\"40\" font-family=\"Arial\" font-size=\"16\" fill=\"currentColor\">-</text>\n      `,\n      pins: [\n        { id: '+', name: '+', position: { x: 0, y: 30 }, direction: 'output', type: 'power' },\n        { id: '-', name: '-', position: { x: 60, y: 30 }, direction: 'input', type: 'power' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'switch',\n      name: '开关',\n      type: 'switch',\n      category: 'passive',\n      width: 60,\n      height: 30,\n      svgPath: `\n        <line x1=\"0\" y1=\"15\" x2=\"20\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"40\" y1=\"15\" x2=\"60\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"20\" y1=\"15\" x2=\"35\" y2=\"5\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <circle cx=\"20\" cy=\"15\" r=\"2\" fill=\"currentColor\"/>\n        <circle cx=\"40\" cy=\"15\" r=\"2\" fill=\"currentColor\"/>\n      `,\n      pins: [\n        { id: '1', name: '1', position: { x: 0, y: 15 }, direction: 'bidirectional', type: 'signal' },\n        { id: '2', name: '2', position: { x: 60, y: 15 }, direction: 'bidirectional', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'fuse',\n      name: '保险丝',\n      type: 'fuse',\n      category: 'passive',\n      width: 60,\n      height: 20,\n      svgPath: `\n        <rect x=\"15\" y=\"5\" width=\"30\" height=\"10\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"0\" y1=\"10\" x2=\"15\" y2=\"10\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"45\" y1=\"10\" x2=\"60\" y2=\"10\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"20\" y1=\"10\" x2=\"40\" y2=\"10\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      `,\n      pins: [\n        { id: '1', name: '1', position: { x: 0, y: 10 }, direction: 'bidirectional', type: 'signal' },\n        { id: '2', name: '2', position: { x: 60, y: 10 }, direction: 'bidirectional', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'crystal',\n      name: '晶振',\n      type: 'crystal',\n      category: 'passive',\n      width: 60,\n      height: 40,\n      svgPath: `\n        <rect x=\"20\" y=\"10\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"15\" y1=\"8\" x2=\"15\" y2=\"32\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"45\" y1=\"8\" x2=\"45\" y2=\"32\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"0\" y1=\"20\" x2=\"15\" y2=\"20\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"45\" y1=\"20\" x2=\"60\" y2=\"20\" stroke=\"currentColor\" stroke-width=\"2\"/>\n      `,\n      pins: [\n        { id: '1', name: '1', position: { x: 0, y: 20 }, direction: 'bidirectional', type: 'signal' },\n        { id: '2', name: '2', position: { x: 60, y: 20 }, direction: 'bidirectional', type: 'signal' }\n      ]\n    })\n\n    this.addSymbol({\n      id: 'mosfet_n',\n      name: 'N-MOSFET',\n      type: 'mosfet',\n      category: 'semiconductor',\n      width: 80,\n      height: 80,\n      svgPath: `\n        <line x1=\"30\" y1=\"10\" x2=\"30\" y2=\"70\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <line x1=\"35\" y1=\"15\" x2=\"35\" y2=\"25\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"35\" y1=\"35\" x2=\"35\" y2=\"45\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"35\" y1=\"55\" x2=\"35\" y2=\"65\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"0\" y1=\"40\" x2=\"30\" y2=\"40\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"35\" y1=\"20\" x2=\"60\" y2=\"5\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"35\" y1=\"60\" x2=\"60\" y2=\"75\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"60\" y1=\"5\" x2=\"65\" y2=\"0\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <line x1=\"60\" y1=\"75\" x2=\"65\" y2=\"80\" stroke=\"currentColor\" stroke-width=\"2\"/>\n        <!-- 箭头指向源极 -->\n        <polygon points=\"40,58 45,53 45,63\" fill=\"currentColor\"/>\n      `,\n      pins: [\n        { id: 'G', name: 'G', position: { x: 0, y: 40 }, direction: 'input', type: 'signal' },\n        { id: 'D', name: 'D', position: { x: 65, y: 0 }, direction: 'output', type: 'signal' },\n        { id: 'S', name: 'S', position: { x: 65, y: 80 }, direction: 'output', type: 'signal' }\n      ]\n    })\n  }\n\n  addSymbol(symbol: ComponentSymbol) {\n    this.symbols.set(symbol.id, symbol)\n  }\n\n  getSymbol(symbolId: string): ComponentSymbol | undefined {\n    return this.symbols.get(symbolId)\n  }\n\n  getAllSymbols(): ComponentSymbol[] {\n    return Array.from(this.symbols.values())\n  }\n\n  getSymbolsByCategory(category: string): ComponentSymbol[] {\n    return Array.from(this.symbols.values()).filter(symbol => symbol.category === category)\n  }\n\n  // 将ASCII电路数据解析为组件和连接\n  parseASCIICircuit(asciiDiagram?: string): CircuitLayout {\n    if (!asciiDiagram) {\n      // 返回示例电路\n      return this.getExampleCircuit()\n    }\n\n    const components: CircuitComponent[] = []\n    const wires: Wire[] = []\n    const lines = asciiDiagram.split('\\n')\n    \n    let wireIndex = 0\n\n    // 解析组件\n    lines.forEach((line, lineIndex) => {\n      // 查找方括号内的组件标识\n      const componentMatches = line.match(/\\[([^\\]]+)\\]/g)\n      if (componentMatches) {\n        componentMatches.forEach((match, matchIndex) => {\n          const componentName = match.replace(/[[\\]]/g, '')\n          const componentType = this.inferComponentType(componentName)\n          const symbol = this.getSymbol(componentType) || this.getSymbol('resistor')!\n          \n          // 计算组件位置 (基于ASCII图中的位置)\n          const charIndex = line.indexOf(match)\n          const x = 50 + charIndex * 8 + matchIndex * 120\n          const y = 50 + lineIndex * 30\n          \n          components.push({\n            id: componentName,\n            type: componentType,\n            position: { x, y },\n            rotation: 0,\n            properties: { \n              reference: componentName,\n              value: this.extractComponentValue(componentName, asciiDiagram)\n            },\n            symbol\n          })\n        })\n      }\n    })\n\n    // 解析连接线 (简单的线条识别)\n    lines.forEach((line, lineIndex) => {\n      const wireMatches = line.match(/[-+|]{3,}/g)\n      if (wireMatches) {\n        wireMatches.forEach(() => {\n          const startX = 50\n          const endX = line.length * 8\n          const y = 50 + lineIndex * 30\n          \n          wires.push({\n            id: `wire${wireIndex++}`,\n            points: [\n              { x: startX, y },\n              { x: endX, y }\n            ],\n            color: '#22c55e'\n          })\n        })\n      }\n    })\n\n    // 智能连接相邻组件\n    this.connectAdjacentComponents(components, wires)\n\n    return {\n      components,\n      wires,\n      bounds: {\n        width: Math.max(600, Math.max(...components.map(c => c.position.x)) + 200),\n        height: Math.max(400, Math.max(...components.map(c => c.position.y)) + 200)\n      }\n    }\n  }\n\n  private getExampleCircuit(): CircuitLayout {\n    return {\n      components: [\n        {\n          id: 'VCC',\n          type: 'vcc',\n          position: { x: 100, y: 50 },\n          rotation: 0,\n          properties: { value: '+5V' },\n          symbol: this.getSymbol('vcc')!\n        },\n        {\n          id: 'R1',\n          type: 'resistor', \n          position: { x: 100, y: 120 },\n          rotation: 90,\n          properties: { value: '220Ω' },\n          symbol: this.getSymbol('resistor')!\n        },\n        {\n          id: 'LED1',\n          type: 'led',\n          position: { x: 100, y: 220 },\n          rotation: 90,\n          properties: { color: 'red' },\n          symbol: this.getSymbol('led')!\n        },\n        {\n          id: 'GND',\n          type: 'ground',\n          position: { x: 100, y: 300 },\n          rotation: 0,\n          properties: {},\n          symbol: this.getSymbol('ground')!\n        }\n      ],\n      wires: [\n        {\n          id: 'wire1',\n          points: [\n            { x: 115, y: 80 },\n            { x: 115, y: 120 }\n          ],\n          color: '#22c55e'\n        },\n        {\n          id: 'wire2', \n          points: [\n            { x: 115, y: 180 },\n            { x: 115, y: 220 }\n          ],\n          color: '#22c55e'\n        },\n        {\n          id: 'wire3',\n          points: [\n            { x: 115, y: 280 },\n            { x: 115, y: 300 }\n          ],\n          color: '#22c55e'\n        }\n      ],\n      bounds: {\n        width: 300,\n        height: 400\n      }\n    }\n  }\n\n  private inferComponentType(componentName: string): string {\n    const name = componentName.toLowerCase()\n    \n    if (name.match(/^r\\d+$/) || name.includes('电阻')) return 'resistor'\n    if (name.match(/^c\\d+$/) || name.includes('电容')) return 'capacitor' \n    if (name.match(/^l\\d+$/) || name.includes('电感')) return 'inductor'\n    if (name.match(/^d\\d+$/) || name.includes('二极管')) return 'diode'\n    if (name.includes('led') || name.includes('发光')) return 'led'\n    if (name.match(/^q\\d+$/) || name.includes('晶体管')) return 'npn_transistor'\n    if (name.includes('运放') || name.includes('opamp')) return 'opamp'\n    if (name.includes('开关') || name.includes('switch')) return 'switch'\n    if (name.includes('vcc') || name.includes('电源')) return 'vcc'\n    if (name.includes('gnd') || name.includes('地')) return 'ground'\n    if (name.includes('晶振') || name.includes('crystal')) return 'crystal'\n    \n    return 'resistor'\n  }\n\n  private extractComponentValue(componentName: string, asciiDiagram: string): string {\n    // 在ASCII图中查找组件值的简单算法\n    const lines = asciiDiagram.split('\\n')\n    \n    // 查找包含组件名称和可能值的行\n    for (const line of lines) {\n      if (line.includes(componentName)) {\n        // 查找常见的值模式\n        const valuePatterns = [\n          /(\\d+(?:\\.\\d+)?)\\s*(Ω|ohm|欧)/i,    // 电阻值\n          /(\\d+(?:\\.\\d+)?)\\s*(μF|nF|pF|uF)/i, // 电容值\n          /(\\d+(?:\\.\\d+)?)\\s*(mH|μH|H)/i,     // 电感值\n          /(\\d+(?:\\.\\d+)?)\\s*(V|伏)/i,        // 电压值\n          /(\\d+(?:\\.\\d+)?)\\s*(mA|A|安)/i      // 电流值\n        ]\n        \n        for (const pattern of valuePatterns) {\n          const match = line.match(pattern)\n          if (match) {\n            return match[1] + match[2]\n          }\n        }\n        \n        // 查找括号内的值\n        const bracketMatch = line.match(/\\(([^)]+)\\)/)\n        if (bracketMatch) {\n          return bracketMatch[1]\n        }\n      }\n    }\n    \n    return ''\n  }\n\n  private connectAdjacentComponents(components: CircuitComponent[], wires: Wire[]) {\n    // 智能连接相邻的组件\n    for (let i = 0; i < components.length - 1; i++) {\n      const comp1 = components[i]\n      const comp2 = components[i + 1]\n      \n      // 计算组件间距离\n      const distance = Math.sqrt(\n        Math.pow(comp2.position.x - comp1.position.x, 2) +\n        Math.pow(comp2.position.y - comp1.position.y, 2)\n      )\n      \n      // 如果距离合适,添加连接线\n      if (distance < 150) {\n        const wire: Wire = {\n          id: `auto_wire_${i}`,\n          points: [\n            { \n              x: comp1.position.x + comp1.symbol.width / 2, \n              y: comp1.position.y + comp1.symbol.height / 2 \n            },\n            { \n              x: comp2.position.x + comp2.symbol.width / 2, \n              y: comp2.position.y + comp2.symbol.height / 2 \n            }\n          ],\n          color: '#22c55e'\n        }\n        wires.push(wire)\n      }\n    }\n  }\n\n  // 渲染电路到SVG\n  renderToSVG(layout: CircuitLayout, options: RenderOptions): string {\n    const { bounds } = layout\n    const { gridSize, showGrid, theme, scale } = options\n    \n    let svg = `<svg width=\"${bounds.width * scale}\" height=\"${bounds.height * scale}\" \n                    viewBox=\"0 0 ${bounds.width} ${bounds.height}\" \n                    xmlns=\"http://www.w3.org/2000/svg\" \n                    style=\"background: ${theme === 'dark' ? '#1a1a1a' : '#ffffff'}; color: ${theme === 'dark' ? '#ffffff' : '#000000'};\">`\n\n    // 添加网格\n    if (showGrid) {\n      svg += this.renderGrid(bounds, gridSize, theme)\n    }\n\n    // 渲染导线\n    for (const wire of layout.wires) {\n      svg += this.renderWire(wire, theme)\n    }\n\n    // 渲染组件\n    for (const component of layout.components) {\n      svg += this.renderComponent(component, options)\n    }\n\n    svg += '</svg>'\n    return svg\n  }\n\n  private renderGrid(_bounds: { width: number; height: number }, gridSize: number, theme: string): string {\n    let grid = '<defs><pattern id=\"grid\" width=\"' + gridSize + '\" height=\"' + gridSize + '\" patternUnits=\"userSpaceOnUse\">'\n    grid += '<path d=\"M ' + gridSize + ' 0 L 0 0 0 ' + gridSize + '\" fill=\"none\" stroke=\"' + \n            (theme === 'dark' ? '#333' : '#ddd') + '\" stroke-width=\"1\"/></pattern></defs>'\n    grid += '<rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\"/>'\n    return grid\n  }\n\n  private renderWire(wire: Wire, theme: string): string {\n    if (wire.points.length < 2) return ''\n    \n    let path = `<path d=\"M ${wire.points[0].x} ${wire.points[0].y}`\n    for (let i = 1; i < wire.points.length; i++) {\n      path += ` L ${wire.points[i].x} ${wire.points[i].y}`\n    }\n    path += `\" stroke=\"${wire.color || (theme === 'dark' ? '#4ade80' : '#22c55e')}\" stroke-width=\"2\" fill=\"none\"/>`\n    \n    return path\n  }\n\n  private renderComponent(component: CircuitComponent, options: RenderOptions): string {\n    const { position, rotation, symbol, properties } = component\n    const { showLabels } = options\n    \n    let svg = `<g transform=\"translate(${position.x}, ${position.y}) rotate(${rotation})\">`\n    svg += symbol.svgPath\n    \n    if (showLabels) {\n      svg += `<text x=\"${symbol.width / 2}\" y=\"${symbol.height + 15}\" \n                    text-anchor=\"middle\" font-family=\"Arial\" font-size=\"12\" fill=\"currentColor\">\n                ${component.id}\n              </text>`\n      \n      if (properties.value) {\n        svg += `<text x=\"${symbol.width / 2}\" y=\"${symbol.height + 30}\" \n                      text-anchor=\"middle\" font-family=\"Arial\" font-size=\"10\" fill=\"currentColor\">\n                  ${properties.value}\n                </text>`\n      }\n    }\n    \n    svg += '</g>'\n    return svg\n  }\n\n  // 智能自动布局算法\n  autoLayout(components: CircuitComponent[]): CircuitLayout {\n    if (components.length === 0) {\n      return {\n        components: [],\n        wires: [],\n        bounds: { width: 400, height: 300 }\n      }\n    }\n\n    // 分类组件\n    const powerComponents = components.filter(c => c.symbol.category === 'power')\n    const passiveComponents = components.filter(c => c.symbol.category === 'passive')\n    const semiconductorComponents = components.filter(c => c.symbol.category === 'semiconductor')\n    const analogComponents = components.filter(c => c.symbol.category === 'analog_ic')\n    const otherComponents = components.filter(c => \n      !['power', 'passive', 'semiconductor', 'analog_ic'].includes(c.symbol.category)\n    )\n\n    const layoutComponents: CircuitComponent[] = []\n    const wires: Wire[] = []\n    let currentY = 80\n    const leftMargin = 80\n    const componentSpacing = 120\n    const rowHeight = 100\n\n    // 1. 布局电源组件 (顶部)\n    if (powerComponents.length > 0) {\n      let x = leftMargin\n      powerComponents.forEach((comp) => {\n        comp.position = { x, y: currentY }\n        layoutComponents.push(comp)\n        x += componentSpacing\n      })\n      currentY += rowHeight\n    }\n\n    // 2. 布局模拟IC (中心区域)\n    if (analogComponents.length > 0) {\n      let x = leftMargin + componentSpacing\n      analogComponents.forEach((comp) => {\n        comp.position = { x, y: currentY }\n        layoutComponents.push(comp)\n        x += componentSpacing * 1.5 // 给IC更多空间\n      })\n      currentY += rowHeight * 1.2\n    }\n\n    // 3. 布局半导体器件 (中下区域)  \n    if (semiconductorComponents.length > 0) {\n      let x = leftMargin\n      let rowComponents = 0\n      const maxPerRow = 3\n      \n      semiconductorComponents.forEach((comp) => {\n        comp.position = { x, y: currentY }\n        layoutComponents.push(comp)\n        \n        rowComponents++\n        if (rowComponents >= maxPerRow) {\n          currentY += rowHeight\n          x = leftMargin\n          rowComponents = 0\n        } else {\n          x += componentSpacing\n        }\n      })\n      \n      if (rowComponents > 0) {\n        currentY += rowHeight\n      }\n    }\n\n    // 4. 布局被动组件 (填充剩余空间)\n    if (passiveComponents.length > 0) {\n      let x = leftMargin\n      let rowComponents = 0\n      const maxPerRow = 4\n      \n      passiveComponents.forEach((comp) => {\n        comp.position = { x, y: currentY }\n        layoutComponents.push(comp)\n        \n        rowComponents++\n        if (rowComponents >= maxPerRow) {\n          currentY += rowHeight * 0.8 // 被动组件行高较小\n          x = leftMargin\n          rowComponents = 0\n        } else {\n          x += componentSpacing * 0.8 // 被动组件间距较小\n        }\n      })\n      \n      if (rowComponents > 0) {\n        currentY += rowHeight * 0.8\n      }\n    }\n\n    // 5. 布局其他组件\n    if (otherComponents.length > 0) {\n      let x = leftMargin\n      otherComponents.forEach((comp) => {\n        comp.position = { x, y: currentY }\n        layoutComponents.push(comp)\n        x += componentSpacing\n      })\n      currentY += rowHeight\n    }\n\n    // 自动连接具有电路逻辑关系的组件\n    this.createSmartConnections(layoutComponents, wires)\n\n    const maxX = Math.max(...layoutComponents.map(c => c.position.x + c.symbol.width))\n    const maxY = Math.max(...layoutComponents.map(c => c.position.y + c.symbol.height))\n\n    return {\n      components: layoutComponents,\n      wires,\n      bounds: {\n        width: Math.max(600, maxX + 100),\n        height: Math.max(400, maxY + 100)\n      }\n    }\n  }\n\n  // 创建智能连接\n  private createSmartConnections(components: CircuitComponent[], wires: Wire[]) {\n    // 典型的电路连接模式\n    const vccComponents = components.filter(c => c.type === 'vcc')\n    const gndComponents = components.filter(c => c.type === 'ground')\n    const resistors = components.filter(c => c.type === 'resistor')\n    const leds = components.filter(c => c.type === 'led')\n    \n    // 创建电源到电阻的连接\n    if (vccComponents.length > 0 && resistors.length > 0) {\n      const vcc = vccComponents[0]\n      const resistor = resistors[0]\n      \n      wires.push({\n        id: 'power_to_resistor',\n        points: [\n          { x: vcc.position.x + vcc.symbol.width/2, y: vcc.position.y + vcc.symbol.height },\n          { x: resistor.position.x + resistor.symbol.width/2, y: resistor.position.y }\n        ],\n        color: '#ef4444' // 红色表示电源线\n      })\n    }\n    \n    // 创建电阻到LED的连接\n    if (resistors.length > 0 && leds.length > 0) {\n      const resistor = resistors[0]\n      const led = leds[0]\n      \n      wires.push({\n        id: 'resistor_to_led',\n        points: [\n          { x: resistor.position.x + resistor.symbol.width/2, y: resistor.position.y + resistor.symbol.height },\n          { x: led.position.x + led.symbol.width/2, y: led.position.y }\n        ],\n        color: '#22c55e' // 绿色表示信号线\n      })\n    }\n    \n    // 创建LED到地的连接\n    if (leds.length > 0 && gndComponents.length > 0) {\n      const led = leds[0]\n      const gnd = gndComponents[0]\n      \n      wires.push({\n        id: 'led_to_ground',\n        points: [\n          { x: led.position.x + led.symbol.width/2, y: led.position.y + led.symbol.height },\n          { x: gnd.position.x + gnd.symbol.width/2, y: gnd.position.y }\n        ],\n        color: '#000000' // 黑色表示地线\n      })\n    }\n  }\n\n  // 导出为PNG (需要在浏览器环境中使用)\n  exportToPNG(svgString: string, width: number, height: number): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n      const canvas = document.createElement('canvas')\n      const ctx = canvas.getContext('2d')\n      \n      if (!ctx) {\n        reject(new Error('无法获取Canvas上下文'))\n        return\n      }\n\n      canvas.width = width\n      canvas.height = height\n\n      const img = new Image()\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0)\n        canvas.toBlob((blob) => {\n          if (blob) {\n            resolve(blob)\n          } else {\n            reject(new Error('PNG导出失败'))\n          }\n        }, 'image/png')\n      }\n      \n      img.onerror = () => reject(new Error('SVG加载失败'))\n      img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)))\n    })\n  }\n}\n\nexport const circuitRenderer = new CircuitRenderer()\nexport default circuitRenderer","import { useState, useRef, useEffect } from 'react'\nimport { Card, Button, Space, Switch, Slider, Select, Tooltip, message } from 'antd'\nimport { useI18n } from '../../i18n/I18nProvider'\nimport { \n  ZoomInOutlined, \n  ZoomOutOutlined, \n  DownloadOutlined, \n  FullscreenOutlined,\n  BgColorsOutlined,\n  BorderOutlined,\n  AppstoreOutlined,\n  TagOutlined,\n  EditOutlined\n} from '@ant-design/icons'\nimport { circuitRenderer, CircuitLayout, RenderOptions } from '../../services/circuitRenderer'\n\n\ninterface VisualCircuitViewerProps {\n  circuitData?: {\n    ascii?: string\n    components?: Array<{\n      name?: string\n      type?: string\n      value?: string\n      reference?: string\n    }>\n    connections?: Array<{\n      id: string\n      from: {\n        component: string\n        pin?: string\n      }\n      to: {\n        component: string\n        pin?: string\n      }\n      label?: string\n      description?: string\n    }>\n  }\n  loading?: boolean\n  editable?: boolean\n}\n\nconst VisualCircuitViewer = ({ \n  circuitData, \n  loading = false, \n  editable = false\n}: VisualCircuitViewerProps) => {\n  const { t } = useI18n()\n  const svgRef = useRef<HTMLDivElement>(null)\n  const [scale, setScale] = useState(1)\n  const [layout, setLayout] = useState<CircuitLayout | null>(null)\n  const [renderOptions, setRenderOptions] = useState<RenderOptions>({\n    gridSize: 20,\n    showGrid: true,\n    theme: 'light',\n    scale: 1,\n    showLabels: true,\n    showPinNumbers: false\n  })\n  const [isFullscreen, setIsFullscreen] = useState(false)\n\n  useEffect(() => {\n    if (circuitData?.ascii) {\n      // 将ASCII电路数据转换为可视化布局\n      const parsedLayout = circuitRenderer.parseASCIICircuit(circuitData.ascii)\n      setLayout(parsedLayout)\n    } else if (circuitData?.components && circuitData.components.length > 0) {\n      // 使用自动布局\n      const components = circuitData.components.map((comp, index) => ({\n        id: comp.reference || `COMP${index + 1}`,\n        type: getComponentType(comp.type || comp.name || ''),\n        position: { x: 100 + (index % 3) * 120, y: 100 + Math.floor(index / 3) * 80 },\n        rotation: 0,\n        properties: { \n          value: comp.value || '',\n          reference: comp.reference || `COMP${index + 1}`\n        },\n        symbol: circuitRenderer.getSymbol(getComponentType(comp.type || comp.name || '')) || circuitRenderer.getSymbol('resistor')!\n      }))\n      \n      const autoLayout = circuitRenderer.autoLayout(components)\n      setLayout(autoLayout)\n    } else {\n      // 显示示例电路\n      const exampleLayout = circuitRenderer.parseASCIICircuit()\n      setLayout(exampleLayout)\n    }\n  }, [circuitData])\n\n  const getComponentType = (compName: string): string => {\n    const name = compName.toLowerCase()\n    \n    // 电阻类\n    if (name.includes('电阻') || name.includes('resistor') || name.match(/^r\\d+$/)) return 'resistor'\n    \n    // 电容类  \n    if (name.includes('电容') || name.includes('capacitor') || name.match(/^c\\d+$/)) return 'capacitor'\n    \n    // 电感类\n    if (name.includes('电感') || name.includes('inductor') || name.match(/^l\\d+$/)) return 'inductor'\n    \n    // 二极管类\n    if (name.includes('二极管') || name.includes('diode') || name.match(/^d\\d+$/)) return 'diode'\n    \n    // LED类\n    if (name.includes('led') || name.includes('发光二极管')) return 'led'\n    \n    // 晶体管类\n    if (name.includes('晶体管') || name.includes('transistor') || name.match(/^q\\d+$/)) return 'npn_transistor'\n    \n    // MOSFET类\n    if (name.includes('mosfet') || name.includes('场效应管') || name.includes('mos')) return 'mosfet_n'\n    \n    // 运放类\n    if (name.includes('运放') || name.includes('opamp') || name.includes('op-amp') || name.includes('lm358') || name.includes('lm741')) return 'opamp'\n    \n    // 开关类\n    if (name.includes('开关') || name.includes('switch') || name.includes('按键')) return 'switch'\n    \n    // 保险丝类\n    if (name.includes('保险丝') || name.includes('fuse') || name.includes('熔断器')) return 'fuse'\n    \n    // 晶振类\n    if (name.includes('晶振') || name.includes('crystal') || name.includes('振荡器')) return 'crystal'\n    \n    // 电源类\n    if (name.includes('电压源') || name.includes('voltage_source') || name.includes('电池')) return 'voltage_source'\n    if (name.includes('电源') || name.includes('vcc') || name.includes('power') || name.includes('+5v') || name.includes('+3.3v')) return 'vcc'\n    \n    // 地线类\n    if (name.includes('地') || name.includes('gnd') || name.includes('ground')) return 'ground'\n    \n    // 集成电路类\n    if (name.includes('ic') || name.includes('芯片') || name.match(/^u\\d+$/)) return 'opamp' // 暂时用运放符号代替\n    \n    return 'resistor' // 默认\n  }\n\n  const handleZoomIn = () => {\n    const newScale = Math.min(scale * 1.2, 3)\n    setScale(newScale)\n    setRenderOptions(prev => ({ ...prev, scale: newScale }))\n  }\n\n  const handleZoomOut = () => {\n    const newScale = Math.max(scale / 1.2, 0.3)\n    setScale(newScale)\n    setRenderOptions(prev => ({ ...prev, scale: newScale }))\n  }\n\n  const handleThemeChange = (theme: 'light' | 'dark') => {\n    setRenderOptions(prev => ({ ...prev, theme }))\n  }\n\n  const handleGridToggle = (showGrid: boolean) => {\n    setRenderOptions(prev => ({ ...prev, showGrid }))\n  }\n\n  const handleGridSizeChange = (gridSize: number) => {\n    setRenderOptions(prev => ({ ...prev, gridSize }))\n  }\n\n  const handleLabelsToggle = (showLabels: boolean) => {\n    setRenderOptions(prev => ({ ...prev, showLabels }))\n  }\n\n  const handlePinNumbersToggle = (showPinNumbers: boolean) => {\n    setRenderOptions(prev => ({ ...prev, showPinNumbers }))\n  }\n\n  const handleExportSVG = () => {\n    if (!layout) {\n      message.warning('No schematic to export')\n      return\n    }\n\n    const svgString = circuitRenderer.renderToSVG(layout, renderOptions)\n    const blob = new Blob([svgString], { type: 'image/svg+xml' })\n    const url = URL.createObjectURL(blob)\n    \n    const a = document.createElement('a')\n    a.href = url\n    a.download = `circuit_${Date.now()}.svg`\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n    \n    message.success('SVG exported')\n  }\n\n  const handleExportPNG = async () => {\n    if (!layout) {\n      message.warning('No schematic to export')\n      return\n    }\n\n    try {\n      const svgString = circuitRenderer.renderToSVG(layout, renderOptions)\n      const blob = await circuitRenderer.exportToPNG(\n        svgString, \n        layout.bounds.width * renderOptions.scale, \n        layout.bounds.height * renderOptions.scale\n      )\n      \n      const url = URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `circuit_${Date.now()}.png`\n      document.body.appendChild(a)\n      a.click()\n      document.body.removeChild(a)\n      URL.revokeObjectURL(url)\n      \n      message.success('PNG exported')\n    } catch (error) {\n      message.error('PNG export failed: ' + (error as Error).message)\n    }\n  }\n\n  const handleFullscreen = () => {\n    if (!isFullscreen && svgRef.current) {\n      svgRef.current.requestFullscreen?.()\n      setIsFullscreen(true)\n    } else if (document.fullscreenElement) {\n      document.exitFullscreen()\n      setIsFullscreen(false)\n    }\n  }\n\n  const renderSVGContent = () => {\n    if (!layout) return null\n    \n    const svgString = circuitRenderer.renderToSVG(layout, renderOptions)\n    return (\n      <div \n        dangerouslySetInnerHTML={{ __html: svgString }}\n        style={{ \n          transform: `scale(${scale})`,\n          transformOrigin: 'top left',\n          transition: 'transform 0.3s ease'\n        }}\n      />\n    )\n  }\n\n  return (\n    <Card\n      title={\n        <div className=\"flex items-center gap-2\">\n          <BgColorsOutlined className=\"text-purple-600\" />\n          <span>{t('tab_visual')}</span>\n          {layout && (\n            <span className=\"text-sm text-gray-500\">\n              ({layout.components.length} {t('components')})\n            </span>\n          )}\n        </div>\n      }\n      className=\"h-full\"\n      extra={\n        <Space>\n          {/* 主题切换 */}\n          <Select\n            value={renderOptions.theme}\n            onChange={handleThemeChange}\n            size=\"small\"\n            style={{ width: 80 }}\n            options={[\n              { value: 'light', label: t('theme_light') },\n              { value: 'dark', label: t('theme_dark') },\n            ]}\n          />\n\n          {/* 网格控制 */}\n          <Tooltip title={t('toggle_grid')}>\n            <Button\n              icon={renderOptions.showGrid ? <AppstoreOutlined /> : <BorderOutlined />}\n              onClick={() => handleGridToggle(!renderOptions.showGrid)}\n              size=\"small\"\n              type={renderOptions.showGrid ? 'primary' : 'default'}\n            />\n          </Tooltip>\n\n          {/* 标签控制 */}\n          <Tooltip title={t('toggle_labels')}>\n            <Button\n              icon={<TagOutlined />}\n              onClick={() => handleLabelsToggle(!renderOptions.showLabels)}\n              size=\"small\"\n              type={renderOptions.showLabels ? 'primary' : 'default'}\n            />\n          </Tooltip>\n\n          {/* 缩放控制 */}\n          <Space.Compact>\n            <Button\n              icon={<ZoomOutOutlined />}\n              onClick={handleZoomOut}\n              size=\"small\"\n              disabled={scale <= 0.3}\n            />\n            <span className=\"px-2 text-xs leading-6 bg-gray-100 border-y\">\n              {Math.round(scale * 100)}%\n            </span>\n            <Button\n              icon={<ZoomInOutlined />}\n              onClick={handleZoomIn}\n              size=\"small\"\n              disabled={scale >= 3}\n            />\n          </Space.Compact>\n\n          {/* 全屏 */}\n          <Tooltip title={t('fullscreen')}>\n            <Button\n              icon={<FullscreenOutlined />}\n              onClick={handleFullscreen}\n              size=\"small\"\n            />\n          </Tooltip>\n\n          {/* 导出功能 */}\n          <Button.Group size=\"small\">\n            <Button\n              icon={<DownloadOutlined />}\n              onClick={handleExportSVG}\n              disabled={!layout}\n            >\n              {t('export_svg')}\n            </Button>\n            <Button\n              icon={<DownloadOutlined />}\n              onClick={handleExportPNG}\n              disabled={!layout}\n            >\n              {t('export_png')}\n            </Button>\n          </Button.Group>\n        </Space>\n      }\n      styles={{ body: { padding: 0, height: 'calc(100% - 60px)' } }}\n    >\n      <div className=\"p-4\">\n        {/* 设置面板 */}\n        <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n            <div>\n              <label className=\"block text-gray-600 mb-1\">{t('grid_size')}</label>\n              <Slider\n                min={10}\n                max={50}\n                value={renderOptions.gridSize}\n                onChange={handleGridSizeChange}\n              />\n            </div>\n            <div className=\"flex items-center\">\n              <Switch\n                checked={renderOptions.showLabels}\n                onChange={handleLabelsToggle}\n                size=\"small\"\n              />\n              <span className=\"ml-2\">{t('show_labels')}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Switch\n                checked={renderOptions.showPinNumbers}\n                onChange={handlePinNumbersToggle}\n                size=\"small\"\n              />\n              <span className=\"ml-2\">{t('show_pin_numbers')}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Switch\n                checked={editable}\n                size=\"small\"\n                disabled\n              />\n              <span className=\"ml-2 text-gray-400\">{t('edit_mode')}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* 主要显示区域 */}\n        <div \n          ref={svgRef}\n          className={`border rounded-lg overflow-auto ${\n            renderOptions.theme === 'dark' ? 'border-gray-600' : 'border-gray-300'\n          }`}\n          style={{ \n            height: '500px',\n            backgroundColor: renderOptions.theme === 'dark' ? '#1a1a1a' : '#ffffff'\n          }}\n        >\n          {loading ? (\n            <div className=\"flex items-center justify-center h-full\">\n              <div className=\"text-center\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n                <p className=\"text-gray-500\">{t('generating_schematic')}</p>\n              </div>\n            </div>\n          ) : layout && layout.components.length > 0 ? (\n            <div className=\"p-4\">\n              {renderSVGContent()}\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-full text-gray-500\">\n              <div className=\"text-center\">\n                <BgColorsOutlined className=\"text-4xl mb-4 text-gray-300\" />\n                <p>{t('no_schematic')}</p>\n                <p className=\"text-sm\">{t('visual_schematic_hint')}</p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* 组件库面板 - 如果是编辑模式 */}\n        {editable && (\n          <div className=\"mt-4 p-3 border rounded-lg\">\n            <h4 className=\"text-sm font-semibold mb-2 flex items-center gap-2\">\n              <EditOutlined />\n              {t('component_library')}\n            </h4>\n            <div className=\"grid grid-cols-4 md:grid-cols-8 gap-2\">\n              {circuitRenderer.getAllSymbols().map((symbol) => (\n                <Tooltip key={symbol.id} title={symbol.name}>\n                  <div \n                    className=\"p-2 border rounded cursor-pointer hover:bg-blue-50 hover:border-blue-300 text-center\"\n                    onClick={() => {\n                      // TODO: 添加组件到电路\n                      message.info(t('selected_symbol', { name: symbol.name }))\n                    }}\n                  >\n                    <div \n                      dangerouslySetInnerHTML={{ \n                        __html: `<svg width=\"30\" height=\"20\" viewBox=\"0 0 ${symbol.width} ${symbol.height}\">${symbol.svgPath}</svg>` \n                      }}\n                    />\n                    <div className=\"text-xs mt-1 text-gray-600\">{symbol.name}</div>\n                  </div>\n                </Tooltip>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* 状态栏 */}\n        {layout && (\n          <div className=\"mt-4 flex justify-between items-center text-xs text-gray-500 border-t pt-2\">\n            <div>\n              {t('canvas_size')}: {layout.bounds.width} × {layout.bounds.height} px\n            </div>\n            <div>\n              {t('scale_label')}: {Math.round(scale * 100)}% | \n              {t('grid_label')}: {renderOptions.showGrid ? t('status_on') : t('status_off')} | \n              {t('theme_label')}: {renderOptions.theme === 'dark' ? t('theme_dark') : t('theme_light')}\n            </div>\n          </div>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nexport default VisualCircuitViewer","import { useState } from 'react'\nimport { Card, Table, Button, Space, Tag, message, InputNumber, Input } from 'antd'\nimport { DownloadOutlined, ShoppingCartOutlined, EditOutlined, SaveOutlined } from '@ant-design/icons'\nimport type { ColumnsType } from 'antd/es/table'\nimport { useI18n } from '../../i18n/I18nProvider'\n\ninterface BOMItem {\n  id: string\n  reference: string[]\n  component: string\n  value: string\n  package?: string\n  quantity: number\n  manufacturer?: string\n  partNumber?: string\n  supplier?: string\n  price?: number\n  description?: string\n}\n\ninterface BOMTableProps {\n  bomData?: BOMItem[]\n  loading?: boolean\n  editable?: boolean\n}\n\nconst BOMTable = ({ bomData = [], loading = false, editable = false }: BOMTableProps) => {\n  const { t } = useI18n()\n  const [data] = useState<BOMItem[]>(bomData)\n  const [editingKey, setEditingKey] = useState('')\n  const [showSummary, setShowSummary] = useState(true)\n  const [groupByType, setGroupByType] = useState(false)\n\n  const isEditing = (record: BOMItem) => record.id === editingKey\n\n  const edit = (record: BOMItem) => {\n    setEditingKey(record.id)\n  }\n\n  const cancel = () => {\n    setEditingKey('')\n  }\n\n  const save = async () => {\n    setEditingKey('')\n    message.success(t('saved_success'))\n  }\n\n  const exportToCsv = () => {\n    if (data.length === 0) {\n      message.warning(t('no_data_to_export'))\n      return\n    }\n\n    const headers = ['序号', '标号', '元件名称', '参数值', '封装', '数量', '制造商', '型号', '供应商', '单价', '小计', '描述']\n    const csvContent = [\n      headers.join(','),\n      ...data.map((item, index) => [\n        index + 1,\n        `\"${item.reference.join(', ')}\"`,\n        `\"${item.component}\"`,\n        `\"${item.value}\"`,\n        `\"${item.package || ''}\"`,\n        item.quantity,\n        `\"${item.manufacturer || ''}\"`,\n        `\"${item.partNumber || ''}\"`,\n        `\"${item.supplier || ''}\"`,\n        item.price || 0,\n        (item.price || 0) * item.quantity,\n        `\"${item.description || ''}\"`\n      ].join(','))\n    ].join('\\n')\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8' })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = `BOM_${new Date().toISOString().split('T')[0]}.csv`\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n    message.success(t('exported_bom_csv'))\n  }\n\n  const exportToPdf = () => {\n    // TODO: 实现PDF导出功能\n    message.info(t('pdf_export_wip'))\n  }\n\n  const openPurchaseLink = (item: BOMItem) => {\n    // TODO: 集成采购链接\n    message.info(t('purchasing_lookup', { name: item.component }))\n  }\n\n  const calculateTotal = () => {\n    return data.reduce((total, item) => total + (item.price || 0) * item.quantity, 0)\n  }\n\n  const getComponentStats = () => {\n    const stats: { [key: string]: number } = {}\n    data.forEach(item => {\n      const type = getComponentType(item.component)\n      stats[type] = (stats[type] || 0) + item.quantity\n    })\n    return stats\n  }\n\n  const getComponentType = (component: string) => {\n    const lower = component.toLowerCase()\n    if (lower.includes('电阻') || lower.includes('resistor')) return '电阻'\n    if (lower.includes('电容') || lower.includes('capacitor')) return '电容'\n    if (lower.includes('电感') || lower.includes('inductor')) return '电感'\n    if (lower.includes('二极管') || lower.includes('diode')) return '二极管'\n    if (lower.includes('晶体管') || lower.includes('transistor')) return '晶体管'\n    if (lower.includes('集成电路') || lower.includes('ic') || lower.includes('芯片')) return '集成电路'\n    return '其他'\n  }\n\n  const renderSummaryCard = () => {\n    if (!showSummary || data.length === 0) return null\n    \n    const stats = getComponentStats()\n    const totalCost = calculateTotal()\n    const totalComponents = data.reduce((sum, item) => sum + item.quantity, 0)\n    \n    return (\n      <Card className=\"mb-4\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">{data.length}</div>\n            <div className=\"text-sm text-gray-500\">{t('kinds_of_components')}</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">{totalComponents}</div>\n            <div className=\"text-sm text-gray-500\">{t('total_quantity')}</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-purple-600\">¥{totalCost.toFixed(2)}</div>\n            <div className=\"text-sm text-gray-500\">{t('estimated_cost')}</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-orange-600\">{Object.keys(stats).length}</div>\n            <div className=\"text-sm text-gray-500\">{t('component_categories')}</div>\n          </div>\n        </div>\n        <div className=\"mt-4 pt-4 border-t\">\n          <div className=\"flex flex-wrap gap-2\">\n            {Object.entries(stats).map(([type, count]) => (\n              <Tag key={type} color=\"geekblue\" className=\"mb-1\">\n                {type}: {count}\n              </Tag>\n            ))}\n          </div>\n        </div>\n      </Card>\n    )\n  }\n\n  const columns: ColumnsType<BOMItem> = [\n    {\n      title: t('table_index'),\n      dataIndex: 'index',\n      key: 'index',\n      width: 60,\n      render: (_, __, index) => index + 1\n    },\n    {\n      title: t('table_ref'),\n      dataIndex: 'reference',\n      key: 'reference',\n      width: 120,\n      render: (references: string[]) => (\n        <div className=\"flex flex-wrap gap-1\">\n          {references.map((ref, index) => (\n            <Tag key={index} color=\"blue\" className=\"text-xs\">\n              {ref}\n            </Tag>\n          ))}\n        </div>\n      )\n    },\n    {\n      title: t('table_component'),\n      dataIndex: 'component',\n      key: 'component',\n      width: 120,\n      render: (text, record) => (\n        <div>\n          <div className=\"font-semibold\">{text}</div>\n          {record.description && (\n            <div className=\"text-xs text-gray-500\">{record.description}</div>\n          )}\n        </div>\n      )\n    },\n    {\n      title: t('table_value'),\n      dataIndex: 'value',\n      key: 'value',\n      width: 100,\n      render: (text) => (\n        <span className=\"font-mono text-blue-600\">{text}</span>\n      )\n    },\n    {\n      title: t('table_package'),\n      dataIndex: 'package',\n      key: 'package',\n      width: 80\n    },\n    {\n      title: t('table_qty'),\n      dataIndex: 'quantity',\n      key: 'quantity',\n      width: 80,\n      render: (text, record) => {\n        const editing = isEditing(record)\n        return editing ? (\n          <InputNumber\n            min={1}\n            defaultValue={text}\n            size=\"small\"\n            style={{ width: '100%' }}\n          />\n        ) : (\n          <span className=\"font-semibold\">{text}</span>\n        )\n      }\n    },\n    {\n      title: t('table_manufacturer'),\n      dataIndex: 'manufacturer',\n      key: 'manufacturer',\n      width: 100,\n      render: (text, record) => {\n        const editing = isEditing(record)\n        return editing ? (\n          <Input\n            defaultValue={text}\n            size=\"small\"\n            placeholder={t('table_manufacturer')}\n          />\n        ) : (\n          <span>{text || '-'}</span>\n        )\n      }\n    },\n    {\n      title: t('table_partnumber'),\n      dataIndex: 'partNumber',\n      key: 'partNumber',\n      width: 120,\n      render: (text, record) => {\n        const editing = isEditing(record)\n        return editing ? (\n          <Input\n            defaultValue={text}\n            size=\"small\"\n            placeholder={t('table_partnumber')}\n          />\n        ) : (\n          <span className=\"font-mono\">{text || '-'}</span>\n        )\n      }\n    },\n    {\n      title: t('table_supplier'),\n      dataIndex: 'supplier',\n      key: 'supplier',\n      width: 100\n    },\n    {\n      title: t('table_price'),\n      dataIndex: 'price',\n      key: 'price',\n      width: 80,\n      render: (text, record) => {\n        const editing = isEditing(record)\n        return editing ? (\n          <InputNumber\n            min={0}\n            precision={2}\n            defaultValue={text}\n            size=\"small\"\n            style={{ width: '100%' }}\n          />\n        ) : (\n          <span className=\"text-green-600\">\n            {text ? `¥${text.toFixed(2)}` : '-'}\n          </span>\n        )\n      }\n    },\n    {\n      title: t('table_subtotal'),\n      key: 'subtotal',\n      width: 80,\n      render: (_, record) => {\n        const subtotal = (record.price || 0) * record.quantity\n        return (\n          <span className=\"text-green-600 font-semibold\">\n            {subtotal > 0 ? `¥${subtotal.toFixed(2)}` : '-'}\n          </span>\n        )\n      }\n    }\n  ]\n\n  if (editable) {\n    columns.push({\n      title: t('actions'),\n      key: 'action',\n      width: 120,\n      render: (_, record) => {\n        const editing = isEditing(record)\n        return editing ? (\n          <Space>\n            <Button\n              icon={<SaveOutlined />}\n              onClick={() => save()}\n              size=\"small\"\n              type=\"primary\"\n            />\n            <Button onClick={cancel} size=\"small\">{t('cancel_text')}</Button>\n          </Space>\n        ) : (\n          <Space>\n            <Button\n              icon={<EditOutlined />}\n              onClick={() => edit(record)}\n              size=\"small\"\n            />\n            <Button\n              icon={<ShoppingCartOutlined />}\n              onClick={() => openPurchaseLink(record)}\n              size=\"small\"\n              type=\"text\"\n            />\n          </Space>\n        )\n      }\n    })\n  }\n\n  const totalCost = calculateTotal()\n\n  return (\n    <div className=\"h-full\">\n      <Card \n        title={t('bom_title')}\n        className=\"h-full\"\n        extra={\n          <Space>\n            <Button\n              onClick={() => setShowSummary(!showSummary)}\n              size=\"small\"\n              type={showSummary ? 'primary' : 'default'}\n            >\n              {t('stats')}\n            </Button>\n            <Button\n              onClick={() => setGroupByType(!groupByType)}\n              size=\"small\"\n              type={groupByType ? 'primary' : 'default'}\n            >\n              {t('group')}\n            </Button>\n            <Button\n              icon={<DownloadOutlined />}\n              onClick={exportToCsv}\n              size=\"small\"\n            >\n              {t('export_csv')}\n            </Button>\n            <Button\n              icon={<DownloadOutlined />}\n              onClick={exportToPdf}\n              size=\"small\"\n              type=\"primary\"\n            >\n              {t('export_pdf')}\n            </Button>\n          </Space>\n        }\n      styles={{ body: { padding: 0 } }}\n    >\n      <div className=\"p-4\">\n        {renderSummaryCard()}\n        {data.length === 0 ? (\n          <div className=\"text-center py-20 text-gray-500\">\n            <ShoppingCartOutlined className=\"text-4xl mb-4\" />\n            <p>{t('no_bom')}</p>\n            <p className=\"text-sm\">{t('bom_hint')}</p>\n          </div>\n        ) : (\n          <>\n            <Table\n              columns={columns}\n              dataSource={data}\n              rowKey=\"id\"\n              loading={loading}\n              scroll={{ x: 1200, y: 400 }}\n              size=\"small\"\n              pagination={{\n                showSizeChanger: true,\n                showQuickJumper: true,\n                showTotal: (total, range) => t('show_total_range', { start: range[0], end: range[1], total })\n              }}\n            />\n            \n            {totalCost > 0 && (\n              <div className=\"mt-4 p-3 bg-green-50 rounded-lg flex justify-between items-center\">\n                <span className=\"text-green-700\">{t('total_cost_estimate')}</span>\n                <span className=\"text-2xl font-bold text-green-600\">\n                  ¥{totalCost.toFixed(2)}\n                </span>\n              </div>\n            )}\n            \n            <div className=\"mt-2 text-xs text-gray-500\">{t('price_disclaimer')}</div>\n          </>\n        )}\n      </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default BOMTable","export interface Project {\n  id: string\n  name: string\n  description?: string\n  circuitData?: {\n    ascii?: string\n    description?: string\n    components?: Array<{\n      name: string\n      type: string\n      value?: string\n      reference?: string\n    }>\n  }\n  bomData?: Array<{\n    id: string\n    reference: string[]\n    component: string\n    value: string\n    package?: string\n    quantity: number\n    manufacturer?: string\n    partNumber?: string\n    supplier?: string\n    price?: number\n    description?: string\n  }>\n  chatHistory?: Array<{\n    id: string\n    role: 'user' | 'assistant'\n    content: string\n    timestamp: Date\n  }>\n  createdAt: Date\n  updatedAt: Date\n  tags?: string[]\n}\n\nclass ProjectService {\n  private storageKey = 'circuitsai_projects'\n\n  // 获取所有项目\n  getProjects(): Project[] {\n    try {\n      const data = localStorage.getItem(this.storageKey)\n      if (!data) return []\n      \n      const projects = JSON.parse(data)\n      return projects.map((project: Project) => ({\n        ...project,\n        createdAt: new Date(project.createdAt),\n        updatedAt: new Date(project.updatedAt),\n        chatHistory: project.chatHistory?.map((msg: { timestamp: string | number | Date }) => ({\n          ...msg,\n          timestamp: new Date(msg.timestamp)\n        })) || []\n      }))\n    } catch (error) {\n      console.error('Failed to load projects:', error)\n      return []\n    }\n  }\n\n  // 保存项目\n  saveProject(project: Omit<Project, 'id' | 'createdAt' | 'updatedAt'>): Project {\n    const projects = this.getProjects()\n    \n    const newProject: Project = {\n      ...project,\n      id: Date.now().toString(),\n      createdAt: new Date(),\n      updatedAt: new Date()\n    }\n    \n    projects.push(newProject)\n    this.saveProjects(projects)\n    \n    return newProject\n  }\n\n  // 更新项目\n  updateProject(id: string, updates: Partial<Project>): Project | null {\n    const projects = this.getProjects()\n    const index = projects.findIndex(p => p.id === id)\n    \n    if (index === -1) return null\n    \n    const updatedProject: Project = {\n      ...projects[index],\n      ...updates,\n      updatedAt: new Date()\n    }\n    \n    projects[index] = updatedProject\n    this.saveProjects(projects)\n    \n    return updatedProject\n  }\n\n  // 删除项目\n  deleteProject(id: string): boolean {\n    const projects = this.getProjects()\n    const filteredProjects = projects.filter(p => p.id !== id)\n    \n    if (filteredProjects.length === projects.length) return false\n    \n    this.saveProjects(filteredProjects)\n    return true\n  }\n\n  // 根据ID获取项目\n  getProject(id: string): Project | null {\n    const projects = this.getProjects()\n    return projects.find(p => p.id === id) || null\n  }\n\n  // 导出项目\n  exportProject(project: Project): void {\n    const dataStr = JSON.stringify(project, null, 2)\n    const blob = new Blob([dataStr], { type: 'application/json' })\n    const url = URL.createObjectURL(blob)\n    \n    const a = document.createElement('a')\n    a.href = url\n    a.download = `${project.name.replace(/[^a-zA-Z0-9]/g, '_')}_${project.id}.json`\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }\n\n  // 导入项目\n  async importProject(file: File): Promise<Project> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      \n      reader.onload = (e) => {\n        try {\n          const content = e.target?.result as string\n          const projectData = JSON.parse(content)\n          \n          // 验证项目数据格式\n          if (!projectData.name) {\n            throw new Error('Invalid project format: missing name')\n          }\n          \n          // 创建新项目（重新生成ID和时间戳）\n          const newProject = this.saveProject({\n            name: projectData.name,\n            description: projectData.description,\n            circuitData: projectData.circuitData,\n            bomData: projectData.bomData,\n            chatHistory: projectData.chatHistory,\n            tags: projectData.tags\n          })\n          \n          resolve(newProject)\n        } catch (error) {\n          reject(new Error('Failed to parse project file: ' + (error as Error).message))\n        }\n      }\n      \n      reader.onerror = () => reject(new Error('Failed to read file'))\n      reader.readAsText(file)\n    })\n  }\n\n  // 搜索项目\n  searchProjects(query: string): Project[] {\n    const projects = this.getProjects()\n    const lowerQuery = query.toLowerCase()\n    \n    return projects.filter(project => \n      project.name.toLowerCase().includes(lowerQuery) ||\n      project.description?.toLowerCase().includes(lowerQuery) ||\n      project.tags?.some(tag => tag.toLowerCase().includes(lowerQuery))\n    )\n  }\n\n  // 获取项目统计\n  getProjectStats() {\n    const projects = this.getProjects()\n    \n    const totalProjects = projects.length\n    const totalCircuits = projects.filter(p => p.circuitData?.ascii).length\n    const totalBOMs = projects.filter(p => p.bomData && p.bomData.length > 0).length\n    \n    const tagCounts: { [key: string]: number } = {}\n    projects.forEach(project => {\n      project.tags?.forEach(tag => {\n        tagCounts[tag] = (tagCounts[tag] || 0) + 1\n      })\n    })\n    \n    const mostUsedTags = Object.entries(tagCounts)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 5)\n      .map(([tag, count]) => ({ tag, count }))\n    \n    return {\n      totalProjects,\n      totalCircuits,\n      totalBOMs,\n      mostUsedTags,\n      recentProjects: projects\n        .sort((a, b) => b.updatedAt.getTime() - a.updatedAt.getTime())\n        .slice(0, 5)\n    }\n  }\n\n  private saveProjects(projects: Project[]): void {\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(projects))\n    } catch (error) {\n      console.error('Failed to save projects:', error)\n      throw new Error('Failed to save project: storage quota exceeded')\n    }\n  }\n\n  // 清理存储空间（删除旧项目）\n  cleanupOldProjects(daysToKeep: number = 90): number {\n    const projects = this.getProjects()\n    const cutoffDate = new Date()\n    cutoffDate.setDate(cutoffDate.getDate() - daysToKeep)\n    \n    const projectsToKeep = projects.filter(p => p.updatedAt >= cutoffDate)\n    const deletedCount = projects.length - projectsToKeep.length\n    \n    if (deletedCount > 0) {\n      this.saveProjects(projectsToKeep)\n    }\n    \n    return deletedCount\n  }\n}\n\nexport const projectService = new ProjectService()\nexport default projectService","import { useState, useEffect } from 'react'\nimport { \n  Modal, \n  Button, \n  Input, \n  Card, \n  List, \n  Tag, \n  Space, \n  message, \n  Tooltip,\n  Popconfirm,\n  Upload,\n  Progress,\n  Empty\n} from 'antd'\nimport { \n  SaveOutlined, \n  FolderOpenOutlined, \n  DeleteOutlined, \n  DownloadOutlined,\n  UploadOutlined,\n  SearchOutlined,\n  ProjectOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons'\nimport { projectService, Project } from '../../services/projectService'\n\nconst { TextArea } = Input\nconst { Search } = Input\n\ninterface ProjectManagerProps {\n  visible: boolean\n  onClose: () => void\n  onLoadProject?: (project: Project) => void\n  currentProjectData?: {\n    name?: string\n    description?: string\n    circuitData?: unknown\n    bomData?: unknown\n    chatHistory?: unknown[]\n  }\n}\n\nconst ProjectManager = ({ \n  visible, \n  onClose, \n  onLoadProject, \n  currentProjectData \n}: ProjectManagerProps) => {\n  const [projects, setProjects] = useState<Project[]>([])\n  const [filteredProjects, setFilteredProjects] = useState<Project[]>([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [showSaveModal, setShowSaveModal] = useState(false)\n  const [saveForm, setSaveForm] = useState({\n    name: '',\n    description: '',\n    tags: [] as string[]\n  })\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (visible) {\n      loadProjects()\n    }\n  }, [visible])\n\n  useEffect(() => {\n    if (searchQuery.trim()) {\n      const filtered = projectService.searchProjects(searchQuery)\n      setFilteredProjects(filtered)\n    } else {\n      setFilteredProjects(projects)\n    }\n  }, [searchQuery, projects])\n\n  const loadProjects = () => {\n    try {\n      const projectList = projectService.getProjects()\n      setProjects(projectList)\n      setFilteredProjects(projectList)\n    } catch (error) {\n      message.error('加载项目列表失败')\n    }\n  }\n\n  const handleSaveProject = async () => {\n    if (!saveForm.name.trim()) {\n      message.error('请输入项目名称')\n      return\n    }\n\n    if (!currentProjectData?.circuitData && !currentProjectData?.chatHistory?.length) {\n      message.error('当前没有可保存的内容')\n      return\n    }\n\n    setLoading(true)\n    try {\n      projectService.saveProject({\n        name: saveForm.name,\n        description: saveForm.description,\n        circuitData: currentProjectData.circuitData as Project['circuitData'],\n        bomData: currentProjectData.bomData as Project['bomData'],\n        chatHistory: currentProjectData.chatHistory as Project['chatHistory'],\n        tags: saveForm.tags\n      })\n\n      message.success('项目保存成功')\n      setShowSaveModal(false)\n      setSaveForm({ name: '', description: '', tags: [] })\n      loadProjects()\n    } catch (error) {\n      message.error('保存项目失败：' + (error as Error).message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleLoadProject = (project: Project) => {\n    if (onLoadProject) {\n      onLoadProject(project)\n      message.success(`已加载项目：${project.name}`)\n      onClose()\n    }\n  }\n\n  const handleDeleteProject = (projectId: string) => {\n    try {\n      projectService.deleteProject(projectId)\n      message.success('项目删除成功')\n      loadProjects()\n    } catch (error) {\n      message.error('删除项目失败')\n    }\n  }\n\n  const handleExportProject = (project: Project) => {\n    try {\n      projectService.exportProject(project)\n      message.success('项目导出成功')\n    } catch (error) {\n      message.error('导出项目失败')\n    }\n  }\n\n  const handleImportProject = async (file: File) => {\n    setLoading(true)\n    try {\n      await projectService.importProject(file)\n      message.success('项目导入成功')\n      loadProjects()\n    } catch (error) {\n      message.error('导入项目失败：' + (error as Error).message)\n    } finally {\n      setLoading(false)\n    }\n    return false // 阻止自动上传\n  }\n\n  const formatDate = (date: Date) => {\n    return date.toLocaleDateString('zh-CN', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  const getProjectProgress = (project: Project) => {\n    let progress = 0\n    if (project.circuitData?.ascii) progress += 40\n    if (project.bomData && project.bomData.length > 0) progress += 30\n    if (project.chatHistory && project.chatHistory.length > 2) progress += 30\n    return Math.min(progress, 100)\n  }\n\n  const stats = projectService.getProjectStats()\n\n  return (\n    <>\n      <Modal\n        title={\n          <div className=\"flex items-center gap-2\">\n            <ProjectOutlined />\n            项目管理\n          </div>\n        }\n        open={visible}\n        onCancel={onClose}\n        width={900}\n        footer={\n          <div className=\"flex justify-between\">\n            <Space>\n              <Upload\n                accept=\".json\"\n                showUploadList={false}\n                beforeUpload={handleImportProject}\n              >\n                <Button icon={<UploadOutlined />} loading={loading}>\n                  导入项目\n                </Button>\n              </Upload>\n              <Button \n                type=\"primary\" \n                icon={<SaveOutlined />}\n                onClick={() => setShowSaveModal(true)}\n                disabled={!currentProjectData?.circuitData && !currentProjectData?.chatHistory?.length}\n              >\n                保存当前项目\n              </Button>\n            </Space>\n            <Button onClick={onClose}>关闭</Button>\n          </div>\n        }\n      >\n        <div className=\"mb-4\">\n          {/* 统计信息 */}\n          <div className=\"grid grid-cols-3 gap-4 mb-4\">\n            <Card size=\"small\" className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{stats.totalProjects}</div>\n              <div className=\"text-sm text-gray-500\">总项目数</div>\n            </Card>\n            <Card size=\"small\" className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{stats.totalCircuits}</div>\n              <div className=\"text-sm text-gray-500\">已设计电路</div>\n            </Card>\n            <Card size=\"small\" className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">{stats.totalBOMs}</div>\n              <div className=\"text-sm text-gray-500\">已生成BOM</div>\n            </Card>\n          </div>\n\n          {/* 搜索框 */}\n          <Search\n            placeholder=\"搜索项目名称、描述或标签...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            style={{ marginBottom: 16 }}\n            prefix={<SearchOutlined />}\n          />\n        </div>\n\n        <div style={{ maxHeight: 500, overflowY: 'auto' }}>\n          {filteredProjects.length === 0 ? (\n            <Empty \n              description=\"暂无项目\" \n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            >\n              <Button \n                type=\"primary\" \n                onClick={() => setShowSaveModal(true)}\n                disabled={!currentProjectData?.circuitData && !currentProjectData?.chatHistory?.length}\n              >\n                保存第一个项目\n              </Button>\n            </Empty>\n          ) : (\n            <List\n              dataSource={filteredProjects.sort((a, b) => b.updatedAt.getTime() - a.updatedAt.getTime())}\n              renderItem={(project) => (\n                <List.Item\n                  actions={[\n                    <Tooltip title=\"加载项目\">\n                      <Button \n                        icon={<FolderOpenOutlined />} \n                        onClick={() => handleLoadProject(project)}\n                        size=\"small\"\n                      />\n                    </Tooltip>,\n                    <Tooltip title=\"导出项目\">\n                      <Button \n                        icon={<DownloadOutlined />} \n                        onClick={() => handleExportProject(project)}\n                        size=\"small\"\n                      />\n                    </Tooltip>,\n                    <Popconfirm\n                      title=\"确定要删除这个项目吗？\"\n                      description=\"此操作不可恢复\"\n                      onConfirm={() => handleDeleteProject(project.id)}\n                      okText=\"删除\"\n                      cancelText=\"取消\"\n                      okType=\"danger\"\n                    >\n                      <Button \n                        icon={<DeleteOutlined />} \n                        danger \n                        size=\"small\"\n                      />\n                    </Popconfirm>\n                  ]}\n                >\n                  <List.Item.Meta\n                    title={\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"font-semibold\">{project.name}</span>\n                        <Progress \n                          percent={getProjectProgress(project)} \n                          size=\"small\" \n                          style={{ width: 100 }}\n                          format={() => ''}\n                        />\n                      </div>\n                    }\n                    description={\n                      <div>\n                        {project.description && (\n                          <p className=\"text-gray-600 mb-2\">{project.description}</p>\n                        )}\n                        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                          <div className=\"flex items-center gap-4\">\n                            <span><CalendarOutlined /> 更新于 {formatDate(project.updatedAt)}</span>\n                            {project.circuitData?.ascii && <span>📋 有电路图</span>}\n                            {project.bomData && project.bomData.length > 0 && <span>📦 有BOM表</span>}\n                          </div>\n                          {project.tags && project.tags.length > 0 && (\n                            <div className=\"flex gap-1\">\n                              {project.tags.map(tag => (\n                                <Tag key={tag} color=\"blue\">\n                                  {tag}\n                                </Tag>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    }\n                  />\n                </List.Item>\n              )}\n            />\n          )}\n        </div>\n      </Modal>\n\n      {/* 保存项目弹窗 */}\n      <Modal\n        title=\"保存项目\"\n        open={showSaveModal}\n        onCancel={() => setShowSaveModal(false)}\n        onOk={handleSaveProject}\n        confirmLoading={loading}\n      >\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              项目名称 *\n            </label>\n            <Input\n              placeholder=\"输入项目名称\"\n              value={saveForm.name}\n              onChange={(e) => setSaveForm({ ...saveForm, name: e.target.value })}\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              项目描述\n            </label>\n            <TextArea\n              placeholder=\"描述项目的用途和特点\"\n              value={saveForm.description}\n              onChange={(e) => setSaveForm({ ...saveForm, description: e.target.value })}\n              rows={3}\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              标签 (用逗号分隔)\n            </label>\n            <Input\n              placeholder=\"如：电源, LED, 放大器\"\n              onChange={(e) => {\n                const tags = e.target.value.split(',').map(tag => tag.trim()).filter(tag => tag)\n                setSaveForm({ ...saveForm, tags })\n              }}\n            />\n          </div>\n\n          <div className=\"text-sm text-gray-500\">\n            将保存当前的电路设计、BOM表格和对话历史\n          </div>\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default ProjectManager","import { Layout, Row, Col, Button, Space, message, Tabs } from 'antd'\nimport { useState } from 'react'\nimport { SaveOutlined, FolderOpenOutlined, HomeOutlined, FileTextOutlined, BgColorsOutlined } from '@ant-design/icons'\nimport { useNavigate } from 'react-router-dom'\nimport { useI18n } from '../../i18n/I18nProvider'\nimport ChatPanel from '../../components/ai/ChatPanel'\nimport CircuitViewer from '../../components/circuit/CircuitViewer'\nimport VisualCircuitViewer from '../../components/circuit/VisualCircuitViewer'\nimport BOMTable from '../../components/circuit/BOMTable'\nimport ProjectManager from '../../components/project/ProjectManager'\nimport AdSense from '../../components/common/AdSense'\nimport { ADSENSE_CONFIG } from '../../config/adsense'\nimport { Project } from '../../services/projectService'\n\nconst { Sider, Content } = Layout\n\ninterface Component {\n  name: string\n  type: string\n  value?: string\n  reference?: string\n  package?: string\n  description?: string\n}\n\ninterface Connection {\n  id: string\n  from: {\n    component: string\n    pin?: string\n  }\n  to: {\n    component: string\n    pin?: string\n  }\n  label?: string\n  description?: string\n}\n\ninterface Property {\n  name: string\n  value: string\n  unit?: string\n  description?: string\n}\n\ninterface CircuitData {\n  ascii?: string\n  description?: string\n  components?: Component[]\n  connections?: Connection[]\n  properties?: Property[]\n}\n\ninterface BOMItem {\n  id: string\n  reference: string[]\n  component: string\n  value: string\n  package?: string\n  quantity: number\n  manufacturer?: string\n  partNumber?: string\n  supplier?: string\n  price?: number\n  description?: string\n}\n\nconst DesignPage = () => {\n  const navigate = useNavigate()\n  const { t } = useI18n()\n  const [circuitData, setCircuitData] = useState<CircuitData>()\n  const [bomData, setBomData] = useState<BOMItem[]>([])\n  const [isGenerating, setIsGenerating] = useState(false)\n  const [showProjectManager, setShowProjectManager] = useState(false)\n  const [chatHistory, setChatHistory] = useState<unknown[]>([])\n  const [currentProject, setCurrentProject] = useState<Project | null>(null)\n  const [activeTab, setActiveTab] = useState<string>('ascii')\n\n  const handleCircuitGenerated = (data: CircuitData) => {\n    setCircuitData(data)\n    setIsGenerating(false)\n  }\n\n  const handleBomGenerated = (bomData: { items?: Array<{ component: string; quantity: number; value?: string; package?: string; price?: number }> }) => {\n    if (bomData.items) {\n      // 转换BOMData为BOMItem格式\n      const convertedItems: BOMItem[] = bomData.items.map((item, index) => ({\n        id: `bom_${index + 1}`,\n        reference: [item.component], // 将component名称作为reference\n        component: item.component,\n        value: item.value || '',\n        package: item.package,\n        quantity: item.quantity,\n        price: item.price,\n        description: `${item.component} 元件`\n      }))\n      setBomData(convertedItems)\n    }\n  }\n\n  const handleChatHistory = (history: unknown[]) => {\n    setChatHistory(history)\n  }\n\n  const handleLoadProject = (project: Project) => {\n    setCurrentProject(project)\n    \n    // 加载电路数据\n    if (project.circuitData) {\n      setCircuitData(project.circuitData)\n    }\n    \n    // 加载BOM数据\n    if (project.bomData) {\n      setBomData(project.bomData)\n    }\n    \n    // 加载聊天历史（这个需要传递给ChatPanel）\n    if (project.chatHistory) {\n      setChatHistory(project.chatHistory)\n    }\n    \n    message.success(`已加载项目: ${project.name}`)\n  }\n\n  const getCurrentProjectData = () => {\n    return {\n      name: currentProject?.name || '',\n      description: currentProject?.description || '',\n      circuitData,\n      bomData,\n      chatHistory\n    }\n  }\n\n  return (\n    <Layout className=\"h-screen\">\n      {/* 顶部工具栏 */}\n      <div className=\"bg-white border-b px-4 py-2 flex justify-between items-center shadow-sm\">\n        <div className=\"flex items-center gap-4\">\n          <Button \n            icon={<HomeOutlined />} \n            onClick={() => navigate('/')}\n            type=\"text\"\n          >{t('back_home')}</Button>\n          {currentProject && (\n            <div className=\"text-sm text-gray-600\">{t('current_project')}: <span className=\"font-semibold\">{currentProject.name}</span></div>\n          )}\n        </div>\n        <Space>\n          <Button\n            icon={<FolderOpenOutlined />}\n            onClick={() => setShowProjectManager(true)}\n          >{t('project_manager')}</Button>\n          <Button\n            type=\"primary\"\n            icon={<SaveOutlined />}\n            onClick={() => setShowProjectManager(true)}\n            disabled={!circuitData && chatHistory.length === 0}\n          >{t('save_project')}</Button>\n        </Space>\n      </div>\n\n      <Layout>\n        <Sider width={400} className=\"bg-white border-r\">\n          <div className=\"h-full flex flex-col\">\n            <div className=\"flex-1\">\n              <ChatPanel \n                onCircuitGenerated={handleCircuitGenerated}\n                onBomGenerated={handleBomGenerated}\n                onChatHistory={handleChatHistory}\n                initialMessages={currentProject?.chatHistory}\n              />\n            </div>\n            {/* AdSense 侧边栏广告 */}\n            <div className=\"p-2 border-t\">\n              <AdSense \n                slot={ADSENSE_CONFIG.SLOTS.DESIGN_SIDEBAR}\n                format=\"rectangle\"\n                style={{ display: 'block', width: '100%', height: '250px' }}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n        </Sider>\n      \n      <Content className=\"bg-gray-50\">\n        <div className=\"p-4 h-full\">\n          <Row gutter={[16, 16]} className=\"h-full\">\n            <Col span={14}>\n              <Tabs\n                activeKey={activeTab}\n                onChange={setActiveTab}\n                className=\"h-full\"\n                items={[\n                  {\n                    key: 'ascii',\n                    label: (\n                      <span><FileTextOutlined /> {t('tab_ascii')}</span>\n                    ),\n                    children: (\n                      <CircuitViewer \n                        circuitData={circuitData}\n                        loading={isGenerating}\n                      />\n                    )\n                  },\n                  {\n                    key: 'visual',\n                    label: (\n                      <span><BgColorsOutlined /> {t('tab_visual')}</span>\n                    ),\n                    children: (\n                      <VisualCircuitViewer\n                        circuitData={circuitData}\n                        loading={isGenerating}\n                        editable={false}\n                      />\n                    )\n                  }\n                ]}\n              />\n            </Col>\n            <Col span={10}>\n              <BOMTable \n                bomData={bomData}\n                editable={true}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Content>\n      </Layout>\n\n      {/* 项目管理弹窗 */}\n      <ProjectManager\n        visible={showProjectManager}\n        onClose={() => setShowProjectManager(false)}\n        onLoadProject={handleLoadProject}\n        currentProjectData={getCurrentProjectData()}\n      />\n    </Layout>\n  )\n}\n\nexport default DesignPage"],"file":"assets/DesignPage-8f1067d5.js"}