{"version":3,"file":"EnhancedAPISettings-99daf6c3.js","sources":["../../src/components/settings/EnhancedAPISettings.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from 'react'\nimport { Modal, Form, Input, Select, Button, message, Space, Card, Alert, Divider, Switch, AutoComplete } from 'antd'\nimport { useI18n } from '../../i18n/I18nProvider'\nimport { SettingOutlined, EyeInvisibleOutlined, EyeTwoTone, CheckOutlined, PlusOutlined } from '@ant-design/icons'\nimport { aiAPI } from '../../services/api'\nimport { ApiTestRequest } from '../../types'\n\n\ninterface APIConfig {\n  provider: string\n  apiKey: string\n  apiUrl: string\n  model: string\n  maxTokens?: number\n  temperature?: number\n  // 自定义API配置\n  requestFormat?: 'openai' | 'claude' | 'custom'\n  responseFormat?: 'openai' | 'claude' | 'custom'\n  customHeaders?: Record<string, string>\n}\n\ninterface EnhancedAPISettingsProps {\n  visible: boolean\n  onClose: () => void\n  onSave: (config: APIConfig) => void\n}\n\nconst EnhancedAPISettings = ({ visible, onClose, onSave }: EnhancedAPISettingsProps) => {\n  const [form] = Form.useForm()\n  const { t } = useI18n()\n  const [testing, setTesting] = useState(false)\n  const [testResult, setTestResult] = useState<{ success: boolean, message: string } | null>(null)\n  const [showAdvanced, setShowAdvanced] = useState(false)\n  const [customHeaders, setCustomHeaders] = useState<Array<{key: string, value: string}>>([])\n  const [currentProvider, setCurrentProvider] = useState<string>('openai')\n  const [isConfigured, setIsConfigured] = useState<boolean>(false)\n\n  const providers = useMemo(() => [\n    {\n      value: 'default',\n      label: '智能AI助手 (推荐)',\n      defaultUrl: '',\n      keyExample: '无需配置',\n      description: '系统内置AI，开箱即用，免费使用',\n      models: ['智能AI助手'],\n      requestFormat: 'openai',\n      responseFormat: 'openai',\n      isDefault: true\n    },\n    {\n      value: 'openai',\n      label: 'OpenAI GPT',\n      defaultUrl: 'https://api.openai.com/v1',\n      keyExample: 'sk-proj-...',\n      description: '支持GPT-3.5/4等模型',\n      models: ['gpt-4', 'gpt-4-turbo', 'gpt-4o', 'gpt-3.5-turbo', 'gpt-4-turbo-preview'],\n      requestFormat: 'openai',\n      responseFormat: 'openai'\n    },\n    {\n      value: 'doubao',\n      label: 'Doubao (Volcengine Ark)',\n      defaultUrl: 'https://ark.cn-beijing.volces.com/api/v3',\n      keyExample: 'ark-xxx',\n      description: 'Doubao by Volcengine Ark (OpenAI-compatible chat/completions)',\n      models: ['doubao-seed-1-6-thinking-250715', 'doubao-pro-32k', 'doubao-lite'],\n      requestFormat: 'openai',\n      responseFormat: 'openai'\n    },\n    {\n      value: 'siliconflow',\n      label: 'SiliconFlow',\n      defaultUrl: 'https://api.siliconflow.cn/v1',\n      keyExample: 'sk-xxx',\n      description: 'SiliconFlow OpenAI-compatible endpoint',\n      models: ['deepseek-ai/DeepSeek-V2.5', 'Qwen/Qwen2.5-72B-Instruct'],\n      requestFormat: 'openai',\n      responseFormat: 'openai'\n    },\n    {\n      value: 'qwen',\n      label: 'Alibaba Tongyi Qwen',\n      defaultUrl: 'https://dashscope.aliyuncs.com/compatible-mode/v1',\n      keyExample: 'sk-xxx',\n      description: 'DashScope compatible-mode OpenAI APIs',\n      models: ['qwen-turbo', 'qwen-plus', 'qwen-long'],\n      requestFormat: 'openai',\n      responseFormat: 'openai'\n    },\n    {\n      value: 'perplexity',\n      label: 'Perplexity',\n      defaultUrl: 'https://api.perplexity.ai',\n      keyExample: 'pplx-xxx',\n      description: 'Perplexity OpenAI-compatible chat/completions',\n      models: ['pplx-70b-chat', 'pplx-7b-chat'],\n      requestFormat: 'openai',\n      responseFormat: 'openai'\n    },\n    {\n      value: 'claude',\n      label: 'Anthropic Claude',\n      defaultUrl: 'https://api.anthropic.com',\n      keyExample: 'sk-ant-...',\n      description: '支持Claude-3等模型',\n      models: ['claude-3-5-sonnet-20241022', 'claude-3-5-haiku-20241022', 'claude-3-opus-20240229', 'claude-3-sonnet-20240229', 'claude-3-haiku-20240307'],\n      requestFormat: 'claude',\n      responseFormat: 'claude'\n    },\n    {\n      value: 'gemini',\n      label: 'Google Gemini',\n      defaultUrl: 'https://generativelanguage.googleapis.com/v1beta',\n      keyExample: 'AIza...',\n      description: '支持Gemini Pro等模型',\n      models: ['gemini-2.5-flash', 'gemini-pro', 'gemini-pro-vision', 'gemini-2.0-flash'],\n      requestFormat: 'custom',\n      responseFormat: 'custom'\n    },\n    {\n      value: 'custom',\n      label: '自定义API',\n      defaultUrl: '',\n      keyExample: 'your-api-key',\n      description: '支持第三方API或自建服务',\n      models: ['你的模型名称', 'deepseek-chat', 'moonshot-v1-8k', 'qwen-turbo'],\n      requestFormat: 'openai',\n      responseFormat: 'openai'\n    },\n    {\n      value: 'mock',\n      label: '模拟API (测试)',\n      defaultUrl: 'mock://localhost',\n      keyExample: 'test-key',\n      description: '用于测试和演示，无需真实API密钥',\n      models: ['mock-gpt-4', 'mock-claude', 'mock-gemini'],\n      requestFormat: 'openai',\n      responseFormat: 'openai'\n    },\n    {\n      value: 'deepseek',\n      label: 'DeepSeek (国内)',\n      defaultUrl: 'https://api.deepseek.com',\n      keyExample: 'sk-xxx',\n      description: '深度求索AI，国内可正常访问',\n      models: ['deepseek-chat', 'deepseek-coder'],\n      requestFormat: 'openai',\n      responseFormat: 'openai'\n    },\n    {\n      value: 'moonshot',\n      label: 'Moonshot AI (国内)',\n      defaultUrl: 'https://api.moonshot.cn',\n      keyExample: 'sk-xxx',\n      description: '月之暗面AI，国内可正常访问',\n      models: ['moonshot-v1-8k', 'moonshot-v1-32k', 'moonshot-v1-128k'],\n      requestFormat: 'openai',\n      responseFormat: 'openai'\n    }\n  ], [])\n\n  // 为每个提供商使用独立的存储键\n  const getConfigKey = (provider: string) => `circuitsai_api_config_${provider}`\n\n  // 加载指定提供商的配置\n  const loadProviderConfig = useCallback((provider: string, silent: boolean = false) => {\n    try {\n      const savedConfig = localStorage.getItem(getConfigKey(provider))\n      if (savedConfig) {\n        const config = JSON.parse(savedConfig)\n        if (!silent) console.log(`加载 ${provider} 配置:`, config)\n        return config\n      }\n      \n      // 如果没有独立配置，尝试从旧的通用配置中加载\n      const oldConfig = localStorage.getItem('circuitsai_api_config')\n      if (oldConfig) {\n        const config = JSON.parse(oldConfig)\n        if (config.provider === provider) {\n          // 迁移旧配置到新的独立存储\n          localStorage.setItem(getConfigKey(provider), JSON.stringify(config))\n          if (!silent) console.log(`迁移旧配置到 ${provider}:`, config)\n          return config\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to load config for ${provider}:`, error)\n    }\n    if (!silent) console.log(`${provider} 没有已保存的配置`)\n    return null\n  }, [])\n\n  // 保存指定提供商的配置\n  const saveProviderConfig = (provider: string, config: APIConfig) => {\n    try {\n      localStorage.setItem(getConfigKey(provider), JSON.stringify(config))\n      // 同时更新通用配置（保持向后兼容）\n      localStorage.setItem('circuitsai_api_config', JSON.stringify(config))\n      console.log(`成功保存 ${provider} 配置到存储:`, {\n        key: getConfigKey(provider),\n        config: config\n      })\n    } catch (error) {\n      console.error(`Failed to save config for ${provider}:`, error)\n    }\n  }\n\n  useEffect(() => {\n    if (visible) {\n      // 加载当前提供商的配置\n      const config = loadProviderConfig(currentProvider, true)\n      if (config) {\n        form.setFieldsValue(config)\n        setIsConfigured(true)\n        \n        // 加载自定义头部\n        if (config.customHeaders) {\n          const headers = Object.entries(config.customHeaders).map(([key, value]) => ({\n            key, value: value as string\n          }))\n          setCustomHeaders(headers)\n        } else {\n          setCustomHeaders([])\n        }\n\n        // 如果是自定义API，显示高级选项\n        setShowAdvanced(config.provider === 'custom')\n      } else {\n        // 没有保存的配置时，使用默认值\n        setIsConfigured(false)\n        const selectedProvider = providers.find(p => p.value === currentProvider)\n        if (selectedProvider) {\n          form.setFieldsValue({\n            provider: currentProvider,\n            apiUrl: selectedProvider.defaultUrl,\n            model: selectedProvider.models[0],\n            maxTokens: 2000,\n            temperature: 0.7,\n            requestFormat: selectedProvider.requestFormat,\n            responseFormat: selectedProvider.responseFormat\n          })\n        }\n        setCustomHeaders([])\n        setShowAdvanced(currentProvider === 'custom')\n      }\n      setTestResult(null)\n    }\n  }, [visible, currentProvider, form, loadProviderConfig, providers])\n\n  const handleProviderChange = (provider: string) => {\n    // 先保存当前提供商的配置\n    if (currentProvider !== provider) {\n      try {\n        const currentValues = form.getFieldsValue()\n        // 只要有API key就保存，不管其他字段\n        if (currentValues.apiKey && currentValues.apiKey.trim()) {\n          const currentConfig: APIConfig = {\n            ...currentValues,\n            provider: currentProvider, // 确保使用正确的provider\n            customHeaders: customHeaders.reduce((acc, header) => {\n              if (header.key && header.value) {\n                acc[header.key] = header.value\n              }\n              return acc\n            }, {} as Record<string, string>)\n          }\n          saveProviderConfig(currentProvider, currentConfig)\n          console.log(`已保存 ${currentProvider} 的配置:`, currentConfig)\n        }\n      } catch (error) {\n        console.warn('Failed to save current config:', error)\n      }\n    }\n\n    // 切换到新提供商\n    setCurrentProvider(provider)\n    \n    // 加载新提供商的配置\n    const config = loadProviderConfig(provider, true)\n    const selectedProvider = providers.find(p => p.value === provider)\n    \n    if (config) {\n      // 有保存的配置，直接加载\n      setIsConfigured(true)\n      form.setFieldsValue(config)\n      if (config.customHeaders) {\n        const headers = Object.entries(config.customHeaders).map(([key, value]) => ({\n          key, value: value as string\n        }))\n        setCustomHeaders(headers)\n      } else {\n        setCustomHeaders([])\n      }\n      setShowAdvanced(config.provider === 'custom')\n    } else if (selectedProvider) {\n      // 没有保存的配置，使用默认值\n      setIsConfigured(false)\n      form.setFieldsValue({\n        provider: provider,\n        apiUrl: selectedProvider.defaultUrl,\n        model: selectedProvider.models[0],\n        maxTokens: 2000,\n        temperature: 0.7,\n        requestFormat: selectedProvider.requestFormat,\n        responseFormat: selectedProvider.responseFormat,\n        apiKey: '' // 清空API密钥\n      })\n      setCustomHeaders([])\n      setShowAdvanced(provider === 'custom')\n    }\n    \n    setTestResult(null)\n  }\n\n  const addCustomHeader = () => {\n    setCustomHeaders([...customHeaders, { key: '', value: '' }])\n  }\n\n  const removeCustomHeader = (index: number) => {\n    const newHeaders = customHeaders.filter((_, i) => i !== index)\n    setCustomHeaders(newHeaders)\n  }\n\n  const updateCustomHeader = (index: number, field: 'key' | 'value', value: string) => {\n    const newHeaders = [...customHeaders]\n    newHeaders[index][field] = value\n    setCustomHeaders(newHeaders)\n  }\n\n  const testConnection = async () => {\n    try {\n      const values = await form.validateFields()\n      setTesting(true)\n      setTestResult(null)\n\n      // 构建完整配置\n      const config: APIConfig = {\n        ...values,\n        customHeaders: customHeaders.reduce((acc, header) => {\n          if (header.key && header.value) {\n            acc[header.key] = header.value\n          }\n          return acc\n        }, {} as Record<string, string>)\n      }\n\n      // 调用测试接口（通过 aiAPI 转发到 Workers，避免 Pages 405）\n      console.log('发送测试请求:', config)\n      const result = await aiAPI.testApiConfig(config as ApiTestRequest)\n      console.log('测试结果:', result)\n      \n      if (result && result.success) {\n        setTestResult({\n          success: true,\n          message: result.message || 'API连接测试成功！'\n        })\n      } else {\n        setTestResult({\n          success: false,\n          message: (result && result.error) || 'API连接测试失败'\n        })\n      }\n    } catch (error) {\n      console.error('测试连接失败:', error)\n      setTestResult({\n        success: false,\n        message: '测试失败，请检查网络连接和配置'\n      })\n    } finally {\n      setTesting(false)\n    }\n  }\n\n  const handleSave = async () => {\n    try {\n      const values = await form.validateFields()\n      \n      // 构建完整配置\n      const config: APIConfig = {\n        ...values,\n        customHeaders: customHeaders.reduce((acc, header) => {\n          if (header.key && header.value) {\n            acc[header.key] = header.value\n          }\n          return acc\n        }, {} as Record<string, string>)\n      }\n      \n      // 保存到对应提供商的独立存储\n      saveProviderConfig(config.provider, config)\n      setIsConfigured(true)\n      console.log(`保存配置成功:`, config)\n      \n      // 调用父组件回调\n      onSave(config)\n      \n      message.success(`${getCurrentProvider()?.label} API配置已保存`)\n      onClose()\n    } catch (error) {\n      console.error('Save failed:', error)\n      message.error('保存失败，请检查配置')\n    }\n  }\n\n  // 处理对话框关闭时的配置保存\n  const handleClose = () => {\n    // 在关闭时保存当前配置（如果有效）\n    try {\n      const values = form.getFieldsValue()\n      if (values.apiKey && values.apiKey.trim()) {\n        const config: APIConfig = {\n          ...values,\n          customHeaders: customHeaders.reduce((acc, header) => {\n            if (header.key && header.value) {\n              acc[header.key] = header.value\n            }\n            return acc\n          }, {} as Record<string, string>)\n        }\n        saveProviderConfig(config.provider, config)\n      }\n    } catch (error) {\n      console.warn('Failed to save config on close:', error)\n    }\n    onClose()\n  }\n\n  const getCurrentProvider = () => {\n    return providers.find(p => p.value === currentProvider)\n  }\n\n  return (\n    <Modal\n      title={\n        <Space>\n          <SettingOutlined />\n          {t('settings_title')}\n        </Space>\n      }\n      open={visible}\n      onCancel={handleClose}\n      width={700}\n      footer={[\n        <Button key=\"cancel\" onClick={handleClose}>{t('cancel')}</Button>,\n        <Button key=\"test\" onClick={testConnection} loading={testing}>{t('test_connection')}</Button>,\n        <Button key=\"save\" type=\"primary\" onClick={handleSave}>{t('save_config')}</Button>\n      ]}\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        initialValues={{\n          provider: 'openai',\n          apiUrl: 'https://api.openai.com/v1',\n          model: 'gpt-3.5-turbo',\n          maxTokens: 2000,\n          temperature: 0.7,\n          requestFormat: 'openai',\n          responseFormat: 'openai'\n        }}\n      >\n        <Alert\n          message={t('settings_title')}\n          description=\"\"\n          type=\"info\"\n          showIcon\n          style={{ marginBottom: 16 }}\n        />\n\n        <Form.Item\n          label={t('provider_label')}\n          name=\"provider\"\n          rules={[{ required: true, message: '请选择AI提供商' }]}\n        >\n          <Select\n            value={currentProvider}\n            onChange={handleProviderChange}\n            placeholder=\"选择AI提供商\"\n            options={providers.map(p => ({ value: p.value, label: (\n              <div>\n                <div>{p.label}</div>\n                <div style={{ fontSize: '12px', color: '#666' }}>{p.description}</div>\n              </div>\n            ) }))}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label={t('api_key_label')}\n          name=\"apiKey\"\n          rules={[\n            { required: true, message: '请输入API密钥' },\n            { min: 10, message: 'API密钥长度至少10位' }\n          ]}\n        >\n          <Input.Password\n            placeholder={`请输入${getCurrentProvider()?.label || 'API'}密钥`}\n            iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label={t('api_url_label')}\n          name=\"apiUrl\"\n          rules={[\n            { required: true, message: '请输入API地址' },\n            { type: 'url', message: '请输入有效的URL地址' }\n          ]}\n        >\n          <Input placeholder=\"API地址\" />\n        </Form.Item>\n\n        <Form.Item\n          label={t('model_name_label')}\n          name=\"model\"\n          rules={[{ required: true, message: '请输入模型名称' }]}\n          extra=\"可以输入任意模型名称，支持自动补全\"\n        >\n          <AutoComplete\n            placeholder=\"输入模型名称，如：gpt-4, claude-3-5-sonnet-20241022\"\n            allowClear\n            options={getCurrentProvider()?.models.map(model => ({ value: model, label: model })) || []}\n            filterOption={(inputValue, option) => {\n              const ov = typeof option?.value === 'string' ? option.value : String(option?.value ?? '')\n              const iv = typeof inputValue === 'string' ? inputValue : String(inputValue ?? '')\n              return ov.toLowerCase().includes(iv.toLowerCase())\n            }}\n          />\n        </Form.Item>\n\n        <Divider>\n          <Space>\n            {t('advanced_options')}\n            <Switch checked={showAdvanced} onChange={setShowAdvanced} />\n          </Space>\n        </Divider>\n\n        {showAdvanced && (\n          <>\n            <div style={{ display: 'flex', gap: '16px' }}>\n              <Form.Item\n                label=\"最大令牌数\"\n                name=\"maxTokens\"\n                style={{ flex: 1 }}\n              >\n                <Input type=\"number\" placeholder=\"2000\" />\n              </Form.Item>\n\n              <Form.Item\n                label=\"温度参数\"\n                name=\"temperature\"\n                style={{ flex: 1 }}\n              >\n                <Input type=\"number\" step=\"0.1\" placeholder=\"0.7\" />\n              </Form.Item>\n            </div>\n\n            <div style={{ display: 'flex', gap: '16px' }}>\n              <Form.Item\n                label={t('request_format')}\n                name=\"requestFormat\"\n                style={{ flex: 1 }}\n              >\n                <Select\n                  options={[\n                    { value: 'openai', label: 'OpenAI格式' },\n                    { value: 'claude', label: 'Claude格式' },\n                    { value: 'custom', label: '自定义格式' },\n                  ]}\n                />\n              </Form.Item>\n\n              <Form.Item\n                label={t('response_format')}\n                name=\"responseFormat\"\n                style={{ flex: 1 }}\n              >\n                <Select\n                  options={[\n                    { value: 'openai', label: 'OpenAI格式' },\n                    { value: 'claude', label: 'Claude格式' },\n                    { value: 'custom', label: '自定义格式' },\n                  ]}\n                />\n              </Form.Item>\n            </div>\n\n            <div>\n              <div style={{ marginBottom: '8px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <span>{t('custom_headers')}</span>\n                <Button icon={<PlusOutlined />} onClick={addCustomHeader} size=\"small\">{t('add')}</Button>\n              </div>\n              {customHeaders.map((header, index) => (\n                <div key={index} style={{ display: 'flex', gap: '8px', marginBottom: '8px' }}>\n                  <Input\n                    placeholder=\"Header名称\"\n                    value={header.key}\n                    onChange={(e) => updateCustomHeader(index, 'key', e.target.value)}\n                    style={{ flex: 1 }}\n                  />\n                  <Input\n                    placeholder=\"Header值\"\n                    value={header.value}\n                    onChange={(e) => updateCustomHeader(index, 'value', e.target.value)}\n                    style={{ flex: 1 }}\n                  />\n                  <Button onClick={() => removeCustomHeader(index)} size=\"small\">{t('delete')}</Button>\n                </div>\n              ))}\n            </div>\n          </>\n        )}\n\n        {getCurrentProvider() && (\n          <Card size=\"small\" style={{ backgroundColor: '#f9f9f9', marginTop: 16 }}>\n            <h4>配置说明：</h4>\n            <p><strong>提供商：</strong>{getCurrentProvider()?.label}</p>\n            <p><strong>密钥格式：</strong>{getCurrentProvider()?.keyExample}</p>\n            <p><strong>说明：</strong>{getCurrentProvider()?.description}</p>\n            <p><strong>配置状态：</strong>\n              <span style={{ color: isConfigured ? '#52c41a' : '#ff4d4f' }}>\n                {isConfigured ? '已配置' : '未配置'}\n              </span>\n            </p>\n          </Card>\n        )}\n\n        {testResult && (\n          <Alert\n            message={testResult.success ? '连接成功' : '连接失败'}\n            description={testResult.message}\n            type={testResult.success ? 'success' : 'error'}\n            showIcon\n            icon={testResult.success ? <CheckOutlined /> : undefined}\n            style={{ marginTop: 16 }}\n          />\n        )}\n      </Form>\n    </Modal>\n  )\n}\n\nexport default EnhancedAPISettings"],"names":["EnhancedAPISettings","visible","onClose","onSave","form","Form","t","useI18n","testing","setTesting","useState","testResult","setTestResult","showAdvanced","setShowAdvanced","customHeaders","setCustomHeaders","currentProvider","setCurrentProvider","isConfigured","setIsConfigured","providers","useMemo","getConfigKey","provider","loadProviderConfig","useCallback","silent","savedConfig","config","oldConfig","error","saveProviderConfig","useEffect","headers","key","value","selectedProvider","p","handleProviderChange","currentValues","currentConfig","acc","header","addCustomHeader","removeCustomHeader","index","newHeaders","_","i","updateCustomHeader","field","testConnection","values","result","aiAPI","handleSave","message","_a","getCurrentProvider","handleClose","jsx","Modal","Space","SettingOutlined","Button","jsxs","Alert","Select","Input","EyeTwoTone","EyeInvisibleOutlined","AutoComplete","_b","model","inputValue","option","ov","iv","Divider","Switch","Fragment","PlusOutlined","e","Card","_c","_d","_e","CheckOutlined"],"mappings":"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"}